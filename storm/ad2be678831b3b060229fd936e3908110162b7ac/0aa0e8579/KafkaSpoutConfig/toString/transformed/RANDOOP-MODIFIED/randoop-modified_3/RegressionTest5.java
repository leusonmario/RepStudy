import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 100);
        int int8 = objBuilder7.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder7.valueDeserializer;
        objBuilder7.pollTimeoutMs = 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy4 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy4);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 30000L;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=30000, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=30000, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 32L;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setKeyDeserializer(objSerializableDeserializer7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder6.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder6.setPollTimeoutMs((long) 10);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder12);
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder0.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilder0.kafkaSpoutStreams;
        int int9 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilder0.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder8.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilder8.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder8.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = objBuilder8.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder8.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilder15.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder7.setPollTimeoutMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder7.setMaxUncommittedOffsets(100);
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilder8.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long14 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig13.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        objBuilderKafkaSpoutConfig13.kafkaProps = strMap16;
        objBuilderKafkaSpoutConfig13.pollTimeoutMs = (short) 100;
        java.lang.String str20 = objBuilderKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder21 = objBuilderKafkaSpoutConfig13.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long23 = objBuilderKafkaSpoutConfig22.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList24 = objBuilderKafkaSpoutConfig22.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = objBuilderKafkaSpoutConfig22.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer26 = null;
        objBuilderKafkaSpoutConfig22.valueDeserializer = charSequenceDeserializer26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = objBuilderKafkaSpoutConfig22.kafkaProps;
        java.lang.String str29 = objBuilderKafkaSpoutConfig22.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = null;
        objBuilderKafkaSpoutConfig22.retryService = kafkaSpoutRetryService30;
        long long32 = objBuilderKafkaSpoutConfig22.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilderKafkaSpoutConfig22.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        objBuilder38.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = objBuilder38.valueDeserializer;
        objBuilder38.offsetCommitPeriodMs = (short) 1;
        objBuilder38.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder38.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = objBuilder47.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig22.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        objBuilderKafkaSpoutConfig12.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder53 = null;
        objBuilder11.tuplesBuilder = objKafkaSpoutTuplesBuilder53;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str20, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str29, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNull(serializableSerializableDeserializer41);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder52);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = objBuilder18.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = objBuilder18.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        objBuilder18.kafkaProps = strMap21;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = objBuilder18.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long25 = objBuilderKafkaSpoutConfig24.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList26 = objBuilderKafkaSpoutConfig24.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig24.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer29 = objBuilderKafkaSpoutConfig24.valueDeserializer;
        long long30 = objBuilderKafkaSpoutConfig24.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = objBuilder31.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig24.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long38 = objBuilderKafkaSpoutConfig37.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList39 = objBuilderKafkaSpoutConfig37.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig37.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = objBuilderKafkaSpoutConfig37.valueDeserializer;
        long long43 = objBuilderKafkaSpoutConfig37.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder44.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = objBuilder44.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig37.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = objBuilder18.kafkaProps;
        objBuilder18.maxUncommittedOffsets = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder18.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams56 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertNull(objBuilderDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutStreams19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer20);
        org.junit.Assert.assertNull(serializableSerializableDeserializer23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertNull(kafkaSpoutStreams56);
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder4.setMaxUncommittedOffsets((int) (short) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder7.kafkaProps = strMap8;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        long long4 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService5;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> typeKafkaSpoutTuplesBuilder2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> typeBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>>(strMap0, kafkaSpoutStreams1, typeKafkaSpoutTuplesBuilder2, kafkaSpoutRetryService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilder2.retryService = kafkaSpoutRetryService4;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig6 = objBuilder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder4.setKeyDeserializer(objSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = objBuilder21.keyDeserializer;
        objBuilder21.maxUncommittedOffsets = (short) 100;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(objSerializableDeserializer22);
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        long long10 = objBuilder4.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams14;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '#';
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>>();
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = objBuilderKafkaSpoutConfig10.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig10.getRetryService();
        long long13 = objBuilderKafkaSpoutConfig10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig10.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = null;
        objBuilderKafkaSpoutConfig10.keyDeserializer = objBuilderDeserializer15;
        objBuilderKafkaSpoutConfig10.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder19.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer24 = objBuilder19.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder19.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig27.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder29 = null;
        objBuilderKafkaSpoutConfig27.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder29;
        long long31 = objBuilderKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder32.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder36.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder39.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder39.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        objBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder36.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder36.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig27.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer51 = objBuilderKafkaSpoutConfig27.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = objBuilderKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        objBuilderKafkaSpoutConfig10.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer56 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer56;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer58 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long61 = objBuilderKafkaSpoutConfig60.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList62 = objBuilderKafkaSpoutConfig60.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = objBuilderKafkaSpoutConfig60.kafkaProps;
        java.lang.String str64 = objBuilderKafkaSpoutConfig60.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long66 = objBuilderKafkaSpoutConfig65.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList67 = objBuilderKafkaSpoutConfig65.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig65.firstPollOffsetStrategy = firstPollOffsetStrategy68;
        objBuilderKafkaSpoutConfig60.firstPollOffsetStrategy = firstPollOffsetStrategy68;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy68;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder72 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(objSerializableDeserializer24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str64, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder72);
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder8.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilder8.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer12);
        objBuilder13.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        objBuilder13.kafkaProps = strMap16;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = objBuilder13.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilder21.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = objBuilder21.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = objBuilderKafkaSpoutConfig0.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(objSerializableDeserializer18);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        long long5 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        int int11 = objBuilder8.maxUncommittedOffsets;
        objBuilder8.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder8.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        objBuilder20.kafkaProps = strMap21;
        objBuilder20.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder20.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig27.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder29 = null;
        objBuilderKafkaSpoutConfig27.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder29;
        long long31 = objBuilderKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder32.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder36.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder39.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder39.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        objBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder36.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder36.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig27.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig53 = objBuilder15.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder52);
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer3 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer3;
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 0;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 0;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        long long10 = objBuilder4.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder14 = null;
        objBuilder13.tuplesBuilder = objKafkaSpoutTuplesBuilder14;
        objBuilder13.pollTimeoutMs = (byte) 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer2 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder3 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer2);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder4.setKeyDeserializer(objSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilder4.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (short) 1);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Comparable<java.lang.String>> firstPollOffsetStrategyEnumBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Comparable<java.lang.String>>();
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(pattern9);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.retryService;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        objBuilder0.offsetCommitPeriodMs = 0L;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig12 = objBuilder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder9);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder14;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 10);
        objBuilder5.maxUncommittedOffsets = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder8 = null;
        objBuilder5.tuplesBuilder = objKafkaSpoutTuplesBuilder8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilder5.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        objBuilder5.valueDeserializer = serializableSerializableDeserializer11;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.getRetryService();
        int int11 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder12.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder16.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer20);
        objBuilder21.offsetCommitPeriodMs = (-1L);
        objBuilder21.maxUncommittedOffsets = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = objBuilder21.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str2 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer5;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder7;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str2, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(pattern5);
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder2.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = objBuilder5.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilder5.retryService = kafkaSpoutRetryService7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder5.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder11 = objBuilder10.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(serializableSerializableDeserializer6);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder11);
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder8 = objBuilder0.tuplesBuilder;
        objBuilder0.maxUncommittedOffsets = '#';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer11;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder8);
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1L;
        int int12 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder14);
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = objBuilder4.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = objBuilder4.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder8.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setValueDeserializer(serializableSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder17.firstPollOffsetStrategy;
        objBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder22.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        objBuilder22.kafkaProps = strMap25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = objBuilder22.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder22.firstPollOffsetStrategy;
        objBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        objBuilder0.pollTimeoutMs = (byte) -1;
        int int7 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = objBuilder0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder0.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder0.setKeyDeserializer(objSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder0.setOffsetCommitPeriodMs(100L);
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilder14.kafkaProps = strMap15;
        objBuilder14.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder14.setKeyDeserializer(objSerializableDeserializer19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = objBuilderKafkaSpoutConfig21.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder23 = null;
        objBuilderKafkaSpoutConfig21.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder23;
        long long25 = objBuilderKafkaSpoutConfig21.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder26.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder30.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder0.setPollTimeoutMs((long) (short) 10);
        int int49 = objBuilder0.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder48);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilder0.retryService = kafkaSpoutRetryService7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = objBuilder0.keyDeserializer;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration> strComparableKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration> strComparableBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration>(strMap0, kafkaSpoutStreams1, strComparableKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategyBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategyKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>(firstPollOffsetStrategyBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long12 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        long long5 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) 10;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder2.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer7);
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilder9.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = objBuilder9.tuplesBuilder;
        objBuilder9.pollTimeoutMs = (byte) -1;
        int int16 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder9.firstPollOffsetStrategy;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy17;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = objBuilder4.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams19);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder9.firstPollOffsetStrategy;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = objBuilder8.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams14);
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type> annotatedElementKafkaSpoutTuplesBuilder2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type> annotatedElementBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type>(strMap0, kafkaSpoutStreams1, annotatedElementKafkaSpoutTuplesBuilder2, kafkaSpoutRetryService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder2.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = objBuilder5.valueDeserializer;
        int int7 = objBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder5.keyDeserializer = objSerializableDeserializer8;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(serializableSerializableDeserializer6);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer14 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        int int15 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs(0L);
        objBuilder22.offsetCommitPeriodMs = 200L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder25 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder22.setValueDeserializer(serializableSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = null;
        objBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer11;
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer19;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer21 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer21;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = objBuilder4.keyDeserializer;
        objBuilder4.pollTimeoutMs = 10;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer23);
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int10 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer12;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilder0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilder0.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder7.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilder7.kafkaSpoutStreams;
        objBuilder7.maxUncommittedOffsets = 'a';
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        objBuilder21.kafkaProps = strMap22;
        long long24 = objBuilder21.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder26 = null;
        objBuilderKafkaSpoutConfig25.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder26;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig25.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        int int32 = objBuilder16.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long34 = objBuilderKafkaSpoutConfig33.pollTimeoutMs;
        long long35 = objBuilderKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long37 = objBuilderKafkaSpoutConfig36.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList38 = objBuilderKafkaSpoutConfig36.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = objBuilderKafkaSpoutConfig36.getValueDeserializer();
        java.util.regex.Pattern pattern40 = objBuilderKafkaSpoutConfig36.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig36.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        objBuilderKafkaSpoutConfig33.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        objBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = objBuilder16.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder16.setMaxUncommittedOffsets(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig48 = objBuilder47.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(charSequenceDeserializer39);
        org.junit.Assert.assertNull(pattern40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder47);
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        long long10 = objBuilder9.pollTimeoutMs;
        long long11 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder9.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(objBuilder9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        int int14 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer15;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long19 = objBuilderKafkaSpoutConfig18.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig18.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig18.getValueDeserializer();
        long long22 = objBuilderKafkaSpoutConfig18.getPollTimeoutMs();
        int int23 = objBuilderKafkaSpoutConfig18.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        objBuilder28.kafkaProps = strMap29;
        long long31 = objBuilder28.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder28.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder41.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder41.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilder33.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder52 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = null;
        objBuilder9.retryService = kafkaSpoutRetryService53;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer55 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer55;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder52);
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str16 = objBuilderKafkaSpoutConfig15.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = null;
        objBuilderKafkaSpoutConfig15.valueDeserializer = charSequenceDeserializer17;
        java.util.regex.Pattern pattern19 = objBuilderKafkaSpoutConfig15.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig15.getSubscribedTopics();
        long long21 = objBuilderKafkaSpoutConfig15.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long23 = objBuilderKafkaSpoutConfig22.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList24 = objBuilderKafkaSpoutConfig22.getSubscribedTopics();
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig22.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilderKafkaSpoutConfig22.getRetryService();
        objBuilderKafkaSpoutConfig22.pollTimeoutMs = (short) -1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer29 = null;
        objBuilderKafkaSpoutConfig22.keyDeserializer = objBuilderDeserializer29;
        java.lang.String str31 = objBuilderKafkaSpoutConfig22.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams32 = objBuilderKafkaSpoutConfig22.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder33.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams36 = objBuilder35.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer37 = objBuilder35.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        objBuilder35.kafkaProps = strMap38;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = objBuilder35.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long42 = objBuilderKafkaSpoutConfig41.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList43 = objBuilderKafkaSpoutConfig41.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig41.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer46 = objBuilderKafkaSpoutConfig41.valueDeserializer;
        long long47 = objBuilderKafkaSpoutConfig41.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder48.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = objBuilder48.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig41.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        objBuilderKafkaSpoutConfig22.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str31, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams32);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNull(kafkaSpoutStreams36);
        org.junit.Assert.assertNull(serializableSerializableDeserializer37);
        org.junit.Assert.assertNull(serializableSerializableDeserializer40);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder53);
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long11 = objBuilderKafkaSpoutConfig10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig10.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        int int14 = objBuilderKafkaSpoutConfig10.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder15 = null;
        objBuilderKafkaSpoutConfig10.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        objBuilderKafkaSpoutConfig10.kafkaProps = strMap17;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilderKafkaSpoutConfig10.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setValueDeserializer(serializableSerializableDeserializer25);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setKeyDeserializer(objSerializableDeserializer27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder29.firstPollOffsetStrategy;
        objBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        objBuilderKafkaSpoutConfig10.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer36 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer36;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams38 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams38;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder40 = null;
        objBuilder9.tuplesBuilder = objKafkaSpoutTuplesBuilder40;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilder4.retryService = kafkaSpoutRetryService5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilder4.kafkaProps = strMap7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilder4.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder4.setMaxUncommittedOffsets(32);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNotNull(objBuilder11);
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 35;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder14);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        objBuilder6.maxUncommittedOffsets = 32;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilder6.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder6.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = null;
        objBuilder14.retryService = kafkaSpoutRetryService15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = objBuilder14.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        objBuilder14.kafkaProps = strMap18;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig20 = objBuilder14.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.valueDeserializer;
        long long14 = objBuilderKafkaSpoutConfig8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder15.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long22 = objBuilderKafkaSpoutConfig21.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList23 = objBuilderKafkaSpoutConfig21.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer26 = objBuilderKafkaSpoutConfig21.valueDeserializer;
        long long27 = objBuilderKafkaSpoutConfig21.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = objBuilder28.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService34 = objBuilder2.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder2.setPollTimeoutMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = null;
        objBuilder36.retryService = kafkaSpoutRetryService37;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = objBuilder36.retryService;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNull(kafkaSpoutRetryService34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(kafkaSpoutRetryService39);
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration> strComparableKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = null;
        objBuilder2.kafkaSpoutStreams = kafkaSpoutStreams4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilder2.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setOffsetCommitPeriodMs((long) 0);
        objBuilder11.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder15.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder15.setValueDeserializer(serializableSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder15.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        objBuilder20.retryService = kafkaSpoutRetryService21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder25 = null;
        objBuilderKafkaSpoutConfig23.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder25;
        int int27 = objBuilderKafkaSpoutConfig23.maxUncommittedOffsets;
        int int28 = objBuilderKafkaSpoutConfig23.maxUncommittedOffsets;
        java.util.regex.Pattern pattern29 = objBuilderKafkaSpoutConfig23.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        objBuilderKafkaSpoutConfig23.kafkaProps = strMap30;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder32.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams37 = null;
        objBuilder32.kafkaSpoutStreams = kafkaSpoutStreams37;
        long long39 = objBuilder32.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = objBuilder40.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder40.setValueDeserializer(serializableSerializableDeserializer42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder43.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = objBuilder43.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilder51.offsetCommitPeriodMs = '4';
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(pattern29);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer41);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder51);
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        long long5 = objBuilder0.offsetCommitPeriodMs;
        int int6 = objBuilder0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = objBuilder17.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder17.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder17.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder17.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig23.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig23.valueDeserializer;
        long long29 = objBuilderKafkaSpoutConfig23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        objBuilder36.kafkaProps = strMap37;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutStreams18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder36);
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.Class<?> wildcardClass12 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.regex.Pattern pattern14 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer15;
        java.lang.String str17 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(pattern14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder3.keyDeserializer;
        objBuilder3.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = objBuilder11.keyDeserializer;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig13 = objBuilder11.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams6;
        objBuilder3.offsetCommitPeriodMs = (byte) 100;
        objBuilder3.maxUncommittedOffsets = (byte) 1;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationKafkaSpoutTuplesBuilder2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>(strMap0, kafkaSpoutStreams1, genericDeclarationKafkaSpoutTuplesBuilder2, kafkaSpoutRetryService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy4 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(firstPollOffsetStrategy4);
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str2 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 10L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str2, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder13;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder6.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder6.setOffsetCommitPeriodMs((long) 0);
        objBuilder9.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder9.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long15 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder18.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder21.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = null;
        objBuilder21.retryService = kafkaSpoutRetryService23;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder21.setValueDeserializer(serializableSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder26.setPollTimeoutMs(32L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = objBuilder31.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer35);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams37 = null;
        objBuilder31.kafkaSpoutStreams = kafkaSpoutStreams37;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer39 = objBuilder31.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = objBuilder31.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(serializableSerializableDeserializer32);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(objSerializableDeserializer39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder41);
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList8 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.regex.Pattern pattern11 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long12 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(pattern11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer14);
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        objBuilder24.pollTimeoutMs = 52L;
        objBuilder24.pollTimeoutMs = 35;
        java.lang.Class<?> wildcardClass31 = objBuilder24.getClass();
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        objBuilder20.keyDeserializer = objSerializableDeserializer21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = objBuilder20.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(firstPollOffsetStrategy23);
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap4;
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        objBuilder6.maxUncommittedOffsets = 32;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilder6.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder13.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        objBuilder17.kafkaProps = strMap18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder27.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder30.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder30.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        objBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy35;
        long long38 = objBuilder27.offsetCommitPeriodMs;
        long long39 = objBuilder27.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder27.setKeyDeserializer(objSerializableDeserializer40);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = objBuilder41.retryService;
        long long43 = objBuilder41.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long45 = objBuilderKafkaSpoutConfig44.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList46 = objBuilderKafkaSpoutConfig44.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig44.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        objBuilder6.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder6.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder6.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder6.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder6.setKeyDeserializer(objSerializableDeserializer59);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder61 = objBuilder6.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 32L + "'", long39 == 32L);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder61);
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        long long8 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        objBuilder10.keyDeserializer = objSerializableDeserializer11;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(objBuilder10);
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        objBuilder2.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder2.setMaxUncommittedOffsets((int) ' ');
        objBuilder2.offsetCommitPeriodMs = 0;
        objBuilder2.maxUncommittedOffsets = '#';
        objBuilder2.pollTimeoutMs = 0;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNotNull(objBuilder6);
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilder13.kafkaProps = strMap14;
        objBuilder13.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder13.setKeyDeserializer(objSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig20.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilderKafkaSpoutConfig20.getRetryService();
        long long23 = objBuilderKafkaSpoutConfig20.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilderKafkaSpoutConfig20.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig20.pollTimeoutMs = 0L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer27 = objBuilderKafkaSpoutConfig20.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder28.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder28.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder28.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long36 = objBuilderKafkaSpoutConfig35.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList37 = objBuilderKafkaSpoutConfig35.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = objBuilderKafkaSpoutConfig35.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = null;
        objBuilderKafkaSpoutConfig35.valueDeserializer = charSequenceDeserializer39;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = objBuilderKafkaSpoutConfig35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = objBuilderKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder43.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder43.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder47.setValueDeserializer(serializableSerializableDeserializer48);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder47.setKeyDeserializer(objSerializableDeserializer50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder52.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = objBuilder52.firstPollOffsetStrategy;
        objBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        objBuilderKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        objBuilderKafkaSpoutConfig20.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        java.lang.Class<?> wildcardClass62 = firstPollOffsetStrategy55.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNull(objBuilderDeserializer27);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(firstPollOffsetStrategy42);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder11 = null;
        objBuilder10.tuplesBuilder = objKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        objBuilder10.keyDeserializer = objSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = objBuilder10.firstPollOffsetStrategy;
        java.lang.Class<?> wildcardClass16 = firstPollOffsetStrategy15.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long13 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams16 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams16;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.String, java.lang.Object> strKafkaSpoutTuplesBuilder2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Object> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Object>(strMap0, kafkaSpoutStreams1, strKafkaSpoutTuplesBuilder2, kafkaSpoutRetryService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        long long7 = objBuilder6.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder6.setKeyDeserializer(objSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long13 = objBuilderKafkaSpoutConfig12.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = null;
        objBuilderKafkaSpoutConfig12.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder14;
        java.lang.String str16 = objBuilderKafkaSpoutConfig12.toString();
        java.lang.String str17 = objBuilderKafkaSpoutConfig12.toString();
        int int18 = objBuilderKafkaSpoutConfig12.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig12.maxUncommittedOffsets = 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = null;
        objBuilderKafkaSpoutConfig12.valueDeserializer = charSequenceDeserializer21;
        java.lang.String str23 = objBuilderKafkaSpoutConfig12.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer24 = objBuilderKafkaSpoutConfig12.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder25 = objBuilderKafkaSpoutConfig12.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder26.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setValueDeserializer(serializableSerializableDeserializer31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = objBuilder30.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder30.setOffsetCommitPeriodMs(30000L);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = objBuilder30.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = objBuilder30.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig12.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        objBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str23, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer24);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder25);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        long long2 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.reflect.GenericDeclaration> typeBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        objBuilder6.keyDeserializer = objSerializableDeserializer7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder6.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder6.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder6.setPollTimeoutMs(0L);
        objBuilder16.offsetCommitPeriodMs = (byte) 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder16);
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderDeserializer13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams4;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(charSequenceDeserializer4);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setPollTimeoutMs(0L);
        objBuilder8.pollTimeoutMs = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long12 = objBuilderKafkaSpoutConfig11.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig11.getSubscribedTopics();
        long long14 = objBuilderKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder15 = null;
        objBuilderKafkaSpoutConfig11.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder15;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder17 = null;
        objBuilderKafkaSpoutConfig11.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder17;
        long long19 = objBuilderKafkaSpoutConfig11.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = objBuilderKafkaSpoutConfig11.valueDeserializer;
        java.lang.String str21 = objBuilderKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = objBuilder22.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder26 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder27 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder22.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = objBuilder29.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder31.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder31.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder35.setValueDeserializer(serializableSerializableDeserializer36);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder35.setKeyDeserializer(objSerializableDeserializer38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = objBuilder39.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = objBuilder39.kafkaProps;
        objBuilder39.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder29.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder46.setKeyDeserializer(objSerializableDeserializer47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder46.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig11.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder8.setKeyDeserializer(objSerializableDeserializer52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig54 = objBuilder53.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder26);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder53);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 100;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        long long25 = objBuilder14.offsetCommitPeriodMs;
        long long26 = objBuilder14.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder14.setKeyDeserializer(objSerializableDeserializer27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilder28.retryService;
        long long30 = objBuilder28.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long32 = objBuilderKafkaSpoutConfig31.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList33 = objBuilderKafkaSpoutConfig31.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig31.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        objBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setValueDeserializer(serializableSerializableDeserializer39);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder40.setValueDeserializer(serializableSerializableDeserializer41);
        long long43 = objBuilder40.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 32L + "'", long26 == 32L);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 32L + "'", long43 == 32L);
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>> genericDeclarationKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>> genericDeclarationBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>>(strMap0, kafkaSpoutStreams1, genericDeclarationKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder5.offsetCommitPeriodMs = (short) 0;
        long long8 = objBuilder5.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = null;
        objBuilder5.tuplesBuilder = objKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        objBuilder5.keyDeserializer = objSerializableDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long14 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig13.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        objBuilderKafkaSpoutConfig13.kafkaProps = strMap16;
        objBuilderKafkaSpoutConfig13.pollTimeoutMs = (short) 100;
        java.lang.String str20 = objBuilderKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder21 = objBuilderKafkaSpoutConfig13.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long23 = objBuilderKafkaSpoutConfig22.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList24 = objBuilderKafkaSpoutConfig22.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = objBuilderKafkaSpoutConfig22.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer26 = null;
        objBuilderKafkaSpoutConfig22.valueDeserializer = charSequenceDeserializer26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = objBuilderKafkaSpoutConfig22.kafkaProps;
        java.lang.String str29 = objBuilderKafkaSpoutConfig22.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = null;
        objBuilderKafkaSpoutConfig22.retryService = kafkaSpoutRetryService30;
        long long32 = objBuilderKafkaSpoutConfig22.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilderKafkaSpoutConfig22.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        objBuilder38.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = objBuilder38.valueDeserializer;
        objBuilder38.offsetCommitPeriodMs = (short) 1;
        objBuilder38.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder38.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = objBuilder47.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig22.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 0;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str20, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str29, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNull(serializableSerializableDeserializer41);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder51);
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        int int11 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int12 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer4);
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer14 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(objBuilderDeserializer14);
        org.junit.Assert.assertNull(objBuilderDeserializer15);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 10L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder13;
        java.util.regex.Pattern pattern15 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(pattern15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder23;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = null;
        objBuilder4.retryService = kafkaSpoutRetryService25;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.Object> objBuilderBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.Object>();
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) (short) 1);
        objBuilder14.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setMaxUncommittedOffsets(32);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder14.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setKeyDeserializer(objSerializableDeserializer21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setMaxUncommittedOffsets((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        objBuilder22.valueDeserializer = serializableSerializableDeserializer25;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder24);
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilder7.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer14;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer16 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer16);
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = objBuilder8.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setPollTimeoutMs(35L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        objBuilder8.valueDeserializer = serializableSerializableDeserializer12;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        long long3 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilder0.retryService = kafkaSpoutRetryService8;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilder8.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder8.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder16 = objBuilder15.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setValueDeserializer(serializableSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilder17.firstPollOffsetStrategy;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        long long13 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilder7.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.regex.Pattern pattern13 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer15;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(pattern13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        long long4 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        long long3 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer6;
        int int8 = objBuilder0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        objBuilder20.keyDeserializer = objSerializableDeserializer21;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setValueDeserializer(serializableSerializableDeserializer23);
        long long25 = objBuilder24.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilder7.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.util.regex.Pattern pattern12 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long13 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap15;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(pattern12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        long long13 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder1 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder1;
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 100;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder6.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder6.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = objBuilder6.keyDeserializer;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable>(objBuilder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objSerializableDeserializer10);
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilder0.retryService = kafkaSpoutRetryService7;
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        objBuilder0.pollTimeoutMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder0.setPollTimeoutMs((long) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig15 = objBuilder14.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder14);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        long long6 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder18.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder25.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        objBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        long long33 = objBuilder22.offsetCommitPeriodMs;
        long long34 = objBuilder22.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder22.setKeyDeserializer(objSerializableDeserializer35);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = objBuilder36.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder38 = null;
        objBuilder36.tuplesBuilder = objKafkaSpoutTuplesBuilder38;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        objBuilder36.kafkaProps = strMap40;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder42 = null;
        objBuilder36.tuplesBuilder = objKafkaSpoutTuplesBuilder42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder44.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder48.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder51.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder51.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        objBuilder48.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder48.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long62 = objBuilderKafkaSpoutConfig61.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList63 = objBuilderKafkaSpoutConfig61.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig61.firstPollOffsetStrategy = firstPollOffsetStrategy64;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer66 = objBuilderKafkaSpoutConfig61.valueDeserializer;
        long long67 = objBuilderKafkaSpoutConfig61.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder70 = objBuilder68.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = objBuilder68.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig61.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        objBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        objBuilder60.offsetCommitPeriodMs = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer77 = objBuilder76.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder79 = objBuilder76.setOffsetCommitPeriodMs((long) 0);
        objBuilder79.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = objBuilder79.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder83 = objBuilder60.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        objBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService86;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 32L + "'", long34 == 32L);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(objBuilder70);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer77);
        org.junit.Assert.assertNotNull(objBuilder79);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder83);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        long long12 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long12 = objBuilderKafkaSpoutConfig11.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig11.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig11.kafkaProps;
        java.lang.String str15 = objBuilderKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig11.kafkaProps;
        int int17 = objBuilderKafkaSpoutConfig11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder18.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder18.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        objBuilderKafkaSpoutConfig11.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 97;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig5.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig5.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) -1;
        java.util.regex.Pattern pattern10 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        int int11 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(pattern10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder0.kafkaProps = strMap5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilder0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder0.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder0.setKeyDeserializer(objSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder12;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(objBuilder11);
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = pattern6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(pattern6);
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder3.kafkaSpoutStreams;
        objBuilder3.maxUncommittedOffsets = 32;
        objBuilder3.offsetCommitPeriodMs = '#';
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder4.setKeyDeserializer(objSerializableDeserializer10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer12;
        long long14 = objBuilder4.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder4.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig11 = objBuilder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.reflect.GenericDeclaration> objBuilderBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        objBuilder0.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer11);
        long long13 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        long long29 = objBuilder18.offsetCommitPeriodMs;
        long long30 = objBuilder18.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder18.setKeyDeserializer(objSerializableDeserializer31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = objBuilder32.retryService;
        long long34 = objBuilder32.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long36 = objBuilderKafkaSpoutConfig35.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList37 = objBuilderKafkaSpoutConfig35.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder42.maxUncommittedOffsets = (byte) 100;
        long long45 = objBuilder42.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder46 = null;
        objBuilder42.tuplesBuilder = objKafkaSpoutTuplesBuilder46;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 100L + "'", long45 == 100L);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 32;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 32;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        long long8 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder0.setKeyDeserializer(objSerializableDeserializer11);
        java.lang.Class<?> wildcardClass13 = objBuilder12.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder15 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder15;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        long long10 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        objBuilder18.offsetCommitPeriodMs = '#';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder18.setKeyDeserializer(objSerializableDeserializer21);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = null;
        objBuilder22.keyDeserializer = objSerializableDeserializer23;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder5.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder12.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy17;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder9.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = objBuilder9.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder24 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService25;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder24);
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 32L;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams13;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNull(objBuilderDeserializer15);
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer33 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder34 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass37 = firstPollOffsetStrategy36.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(objBuilderDeserializer33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 100L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder3.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setOffsetCommitPeriodMs((long) 52);
        objBuilder11.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setPollTimeoutMs(200L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig16 = objBuilder11.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder15);
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        objBuilder0.pollTimeoutMs = 0L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder0.valueDeserializer;
        long long10 = objBuilder0.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder8.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder12.kafkaProps = strMap13;
        objBuilder12.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder12.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = objBuilderKafkaSpoutConfig19.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder21 = null;
        objBuilderKafkaSpoutConfig19.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder21;
        long long23 = objBuilderKafkaSpoutConfig19.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder31.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder31.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        objBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder28.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = objBuilder28.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig19.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder45 = objBuilder0.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder45);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilder13.kafkaProps = strMap14;
        objBuilder13.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder13.setKeyDeserializer(objSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig20.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilderKafkaSpoutConfig20.getRetryService();
        long long23 = objBuilderKafkaSpoutConfig20.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilderKafkaSpoutConfig20.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig20.pollTimeoutMs = 0L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer27 = objBuilderKafkaSpoutConfig20.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder28.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder28.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder28.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long36 = objBuilderKafkaSpoutConfig35.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList37 = objBuilderKafkaSpoutConfig35.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = objBuilderKafkaSpoutConfig35.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = null;
        objBuilderKafkaSpoutConfig35.valueDeserializer = charSequenceDeserializer39;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = objBuilderKafkaSpoutConfig35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = objBuilderKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder43.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder43.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder47.setValueDeserializer(serializableSerializableDeserializer48);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder47.setKeyDeserializer(objSerializableDeserializer50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder52.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = objBuilder52.firstPollOffsetStrategy;
        objBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        objBuilderKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        objBuilderKafkaSpoutConfig20.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer62 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNull(objBuilderDeserializer27);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(firstPollOffsetStrategy42);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertNull(objBuilderDeserializer62);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.maxUncommittedOffsets = '4';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = objBuilder18.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer23);
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) (short) 1);
        objBuilder14.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setMaxUncommittedOffsets(32);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder14.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setKeyDeserializer(objSerializableDeserializer21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = objBuilder20.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = kafkaSpoutStreams8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> objBuilderKafkaSpoutConfigKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> objBuilderKafkaSpoutConfigBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>(strMap0, kafkaSpoutStreams1, objBuilderKafkaSpoutConfigKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap3;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) -1;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int15 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.valueDeserializer;
        long long14 = objBuilderKafkaSpoutConfig8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder15.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long22 = objBuilderKafkaSpoutConfig21.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList23 = objBuilderKafkaSpoutConfig21.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer26 = objBuilderKafkaSpoutConfig21.valueDeserializer;
        long long27 = objBuilderKafkaSpoutConfig21.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = objBuilder28.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder2.setOffsetCommitPeriodMs((long) '4');
        objBuilder35.offsetCommitPeriodMs = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilder35.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = null;
        objBuilder35.retryService = kafkaSpoutRetryService39;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        long long7 = objBuilder6.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder6.setKeyDeserializer(objSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) 100);
        objBuilder14.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long21 = objBuilderKafkaSpoutConfig20.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = objBuilderKafkaSpoutConfig20.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = objBuilderKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = objBuilderKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder25 = objBuilderKafkaSpoutConfig20.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder26.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder30.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long44 = objBuilderKafkaSpoutConfig43.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList45 = objBuilderKafkaSpoutConfig43.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer48 = objBuilderKafkaSpoutConfig43.valueDeserializer;
        long long49 = objBuilderKafkaSpoutConfig43.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder50.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder50.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilderKafkaSpoutConfig20.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder6.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig59 = objBuilder6.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNull(kafkaSpoutRetryService24);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder25);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.List<java.lang.String> strList8 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 100;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.CharSequence, java.lang.String> charSequenceKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String> charSequenceBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String>(strMap0, kafkaSpoutStreams1, charSequenceKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.lang.reflect.GenericDeclaration> objKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService14;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        int int21 = objBuilder20.maxUncommittedOffsets;
        long long22 = objBuilder20.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        long long5 = objBuilder0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilder0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer10;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(objBuilder9);
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 100;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        int int7 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 97L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) 100);
        objBuilder13.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder13.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder18.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder18.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer22;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 32;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        int int7 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        long long19 = objBuilder18.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams20 = null;
        objBuilder18.kafkaSpoutStreams = kafkaSpoutStreams20;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder7.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder7.setMaxUncommittedOffsets(100);
        long long11 = objBuilder10.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder10.setOffsetCommitPeriodMs(100L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer9);
        objBuilder10.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setKeyDeserializer(objSerializableDeserializer13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = objBuilder15.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder15.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        objBuilder20.retryService = kafkaSpoutRetryService21;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams23 = null;
        objBuilder20.kafkaSpoutStreams = kafkaSpoutStreams23;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder25.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setValueDeserializer(serializableSerializableDeserializer30);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = objBuilder29.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder29.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder35.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder35.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder39.setValueDeserializer(serializableSerializableDeserializer40);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = objBuilder39.retryService;
        objBuilder39.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder39.setKeyDeserializer(objSerializableDeserializer45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder47.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = objBuilder49.firstPollOffsetStrategy;
        objBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = objBuilder14.firstPollOffsetStrategy;
        objBuilder14.offsetCommitPeriodMs = 0L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNull(serializableSerializableDeserializer32);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 35;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        long long13 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>> typeKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>>();
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.List<java.lang.String> strList8 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy4 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = ' ';
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy4);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setKeyDeserializer(objSerializableDeserializer7);
        long long9 = objBuilder8.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 32L + "'", long9 == 32L);
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = '4';
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long10 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.retryService;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder2.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder5.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder5.retryService;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder6.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = objBuilder6.tuplesBuilder;
        objBuilder6.pollTimeoutMs = 32L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder8.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setValueDeserializer(serializableSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder17.firstPollOffsetStrategy;
        objBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder27.setValueDeserializer(serializableSerializableDeserializer28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder31.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = objBuilder31.kafkaProps;
        objBuilder31.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilder31.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long10 = objBuilderKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig9.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig9.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = null;
        objBuilderKafkaSpoutConfig9.valueDeserializer = charSequenceDeserializer13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilderKafkaSpoutConfig9.kafkaProps;
        java.lang.String str16 = objBuilderKafkaSpoutConfig9.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer17 = objBuilderKafkaSpoutConfig9.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder18.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder18.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder18.setValueDeserializer(serializableSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer28 = objBuilder27.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder27.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setValueDeserializer(serializableSerializableDeserializer31);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder32.setKeyDeserializer(objSerializableDeserializer33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setKeyDeserializer(objSerializableDeserializer35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder36.firstPollOffsetStrategy;
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        objBuilderKafkaSpoutConfig9.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams41 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder42 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder42;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams44 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams44;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer17);
        org.junit.Assert.assertNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(serializableSerializableDeserializer28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams41);
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        int int6 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        long long19 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder4.setMaxUncommittedOffsets(32);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = objBuilder23.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder4.kafkaProps = strMap10;
        int int12 = objBuilder4.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams14;
        objBuilder4.maxUncommittedOffsets = 97;
        objBuilder4.maxUncommittedOffsets = 52;
        int int20 = objBuilder4.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy2 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig0.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        objBuilder0.pollTimeoutMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilder0.retryService = kafkaSpoutRetryService9;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder5.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder5.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder5.valueDeserializer;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder20.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder25.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setOffsetCommitPeriodMs((long) 100);
        objBuilder29.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = objBuilder29.valueDeserializer;
        objBuilder29.offsetCommitPeriodMs = (short) 1;
        objBuilder29.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder29.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder29.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder41.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder41.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setValueDeserializer(serializableSerializableDeserializer46);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder45.setKeyDeserializer(objSerializableDeserializer48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = objBuilder49.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder40.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams53 = null;
        objBuilder24.kafkaSpoutStreams = kafkaSpoutStreams53;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(serializableSerializableDeserializer32);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder51);
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        long long4 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = null;
        objBuilderKafkaSpoutConfig12.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig12.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy2 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder15.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder21.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        long long32 = objBuilder21.offsetCommitPeriodMs;
        long long33 = objBuilder21.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder21.setKeyDeserializer(objSerializableDeserializer34);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer36 = objBuilder21.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        objBuilder21.kafkaProps = strMap37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = objBuilder21.firstPollOffsetStrategy;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        long long41 = objBuilder15.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 32L + "'", long33 == 32L);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNull(objSerializableDeserializer36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        objBuilder4.maxUncommittedOffsets = (short) 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder3 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long5 = objBuilderKafkaSpoutConfig4.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig4.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig4.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig4.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig4.kafkaProps = strMap10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig4.keyDeserializer;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig4.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig4.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy14;
        java.lang.String str16 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder4.kafkaProps = strMap10;
        int int12 = objBuilder4.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) 100);
        objBuilder19.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder19.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer23);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams25 = objBuilder24.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilder24.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setMaxUncommittedOffsets(35);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilder24.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder30.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder30.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setValueDeserializer(serializableSerializableDeserializer35);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = objBuilder34.retryService;
        objBuilder34.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder34.setKeyDeserializer(objSerializableDeserializer40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = objBuilder44.firstPollOffsetStrategy;
        objBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder34.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long50 = objBuilderKafkaSpoutConfig49.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer51 = objBuilderKafkaSpoutConfig49.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        objBuilderKafkaSpoutConfig49.kafkaProps = strMap52;
        objBuilderKafkaSpoutConfig49.pollTimeoutMs = (short) 100;
        java.lang.String str56 = objBuilderKafkaSpoutConfig49.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder57 = objBuilderKafkaSpoutConfig49.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long59 = objBuilderKafkaSpoutConfig58.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList60 = objBuilderKafkaSpoutConfig58.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = objBuilderKafkaSpoutConfig58.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer62 = null;
        objBuilderKafkaSpoutConfig58.valueDeserializer = charSequenceDeserializer62;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = objBuilderKafkaSpoutConfig58.kafkaProps;
        java.lang.String str65 = objBuilderKafkaSpoutConfig58.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = null;
        objBuilderKafkaSpoutConfig58.retryService = kafkaSpoutRetryService66;
        long long68 = objBuilderKafkaSpoutConfig58.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = objBuilderKafkaSpoutConfig58.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder70.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder74 = objBuilder70.setOffsetCommitPeriodMs((long) 100);
        objBuilder74.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer77 = objBuilder74.valueDeserializer;
        objBuilder74.offsetCommitPeriodMs = (short) 1;
        objBuilder74.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder83 = objBuilder74.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = objBuilder83.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig58.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        objBuilderKafkaSpoutConfig49.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        objBuilder48.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNull(kafkaSpoutStreams25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str56, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str65, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy69);
        org.junit.Assert.assertNotNull(objBuilder74);
        org.junit.Assert.assertNull(serializableSerializableDeserializer77);
        org.junit.Assert.assertNotNull(objBuilder83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        objBuilder11.keyDeserializer = objSerializableDeserializer12;
        objBuilder11.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = objBuilder11.keyDeserializer;
        objBuilder11.offsetCommitPeriodMs = (byte) 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(objSerializableDeserializer16);
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy2 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 100;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        long long4 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilder8.retryService;
        int int10 = objBuilder8.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = objBuilder8.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(objSerializableDeserializer11);
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer12;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int15 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilder0.retryService = kafkaSpoutRetryService8;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilder4.retryService = kafkaSpoutRetryService5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilder4.kafkaProps = strMap7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilder4.kafkaSpoutStreams;
        objBuilder4.pollTimeoutMs = '4';
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        objBuilder3.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder3.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        objBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder13.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = objBuilder13.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder27.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = objBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = objBuilder27.retryService;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig31 = objBuilder27.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(kafkaSpoutRetryService30);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        long long10 = objBuilder9.pollTimeoutMs;
        int int11 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setPollTimeoutMs((long) 100);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(objBuilder9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap9;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig8.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig8.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilderKafkaSpoutConfig8.kafkaSpoutStreams = kafkaSpoutStreams14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig8.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = objBuilderKafkaSpoutConfig8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder19.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder25.setValueDeserializer(serializableSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str29 = objBuilderKafkaSpoutConfig28.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams30 = null;
        objBuilderKafkaSpoutConfig28.kafkaSpoutStreams = kafkaSpoutStreams30;
        java.util.regex.Pattern pattern32 = objBuilderKafkaSpoutConfig28.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = objBuilderKafkaSpoutConfig28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService34 = objBuilderKafkaSpoutConfig28.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder35 = null;
        objBuilderKafkaSpoutConfig28.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder35;
        objBuilderKafkaSpoutConfig28.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder39.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder39.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams44 = null;
        objBuilder39.kafkaSpoutStreams = kafkaSpoutStreams44;
        long long46 = objBuilder39.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer48 = objBuilder47.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder47.setValueDeserializer(serializableSerializableDeserializer49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder50.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder50.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        objBuilderKafkaSpoutConfig28.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 1;
        java.lang.Class<?> wildcardClass61 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str29, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(kafkaSpoutRetryService34);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer48);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder10.kafkaProps = strMap13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilder10.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder7.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder7.setMaxUncommittedOffsets(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = objBuilder12.valueDeserializer;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(serializableSerializableDeserializer13);
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        objBuilder2.pollTimeoutMs = '#';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder2.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        objBuilder2.keyDeserializer = objSerializableDeserializer7;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer13);
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder25.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder32.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        objBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        long long40 = objBuilder29.offsetCommitPeriodMs;
        long long41 = objBuilder29.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder29.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams44 = null;
        objBuilder43.kafkaSpoutStreams = kafkaSpoutStreams44;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = objBuilder43.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        java.lang.Class<?> wildcardClass48 = objBuilder18.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        java.lang.String str33 = objBuilderKafkaSpoutConfig0.toString();
        long long34 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str33, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService35);
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        int int13 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.regex.Pattern pattern8 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(pattern8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer10);
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder5.kafkaProps = strMap8;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 100);
        int int8 = objBuilder7.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder7.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder7.retryService = kafkaSpoutRetryService10;
        objBuilder7.offsetCommitPeriodMs = (short) 100;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilder8.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder8.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = objBuilder8.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder8.setKeyDeserializer(objSerializableDeserializer20);
        objBuilder8.pollTimeoutMs = 200L;
        objBuilder8.offsetCommitPeriodMs = 35L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder21);
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        long long20 = objBuilder18.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        objBuilder18.kafkaProps = strMap21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder18.setMaxUncommittedOffsets((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig25 = objBuilder24.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(objBuilder24);
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = null;
        objBuilder11.tuplesBuilder = objKafkaSpoutTuplesBuilder12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = null;
        objBuilder11.retryService = kafkaSpoutRetryService18;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        objBuilder11.keyDeserializer = objSerializableDeserializer20;
        int int22 = objBuilder11.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder10 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder10;
        objBuilder4.offsetCommitPeriodMs = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder4.setPollTimeoutMs((long) '#');
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder15);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long8 = objBuilderKafkaSpoutConfig7.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig7.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig7.valueDeserializer = charSequenceDeserializer11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig7.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder24.firstPollOffsetStrategy;
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        objBuilderKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder31 = objBuilder30.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder30.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer36 = objBuilder30.keyDeserializer;
        long long37 = objBuilder30.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer38 = null;
        objBuilder30.valueDeserializer = serializableSerializableDeserializer38;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams40 = null;
        objBuilder30.kafkaSpoutStreams = kafkaSpoutStreams40;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNull(objSerializableDeserializer36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy2 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long3 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1L);
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        long long12 = objBuilder8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder13.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        objBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy25;
        long long28 = objBuilder17.offsetCommitPeriodMs;
        long long29 = objBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder17.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = objBuilder31.retryService;
        long long33 = objBuilder31.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long35 = objBuilderKafkaSpoutConfig34.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList36 = objBuilderKafkaSpoutConfig34.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig34.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer42 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService43;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNull(objBuilderDeserializer42);
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objBuilderDeserializer13);
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.Type> strComparableBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.Type>();
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder16.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder16.setKeyDeserializer(objSerializableDeserializer18);
        int int20 = objBuilder19.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder19.setKeyDeserializer(objSerializableDeserializer21);
        long long23 = objBuilder19.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertNotNull(objBuilder19);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = objBuilder8.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder8.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer12);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilder8.retryService = kafkaSpoutRetryService14;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern3 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList4 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (short) -1;
        int int10 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(pattern3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long4 = objBuilderKafkaSpoutConfig3.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig3.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig3.getValueDeserializer();
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig3.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig3.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long15 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long16 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long17 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder18 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap20 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder18);
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setValueDeserializer(serializableSerializableDeserializer15);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = objBuilder14.retryService;
        objBuilder14.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder14.setKeyDeserializer(objSerializableDeserializer20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = objBuilder24.firstPollOffsetStrategy;
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy25;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        objBuilder9.kafkaProps = strMap28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder9.setMaxUncommittedOffsets(0);
        int int32 = objBuilder9.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder18 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap20;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams17);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder4.kafkaProps = strMap10;
        int int12 = objBuilder4.maxUncommittedOffsets;
        objBuilder4.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = objBuilder4.firstPollOffsetStrategy;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig16 = objBuilder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder8.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setPollTimeoutMs((long) '4');
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder8);
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(charSequenceDeserializer4);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilder9.kafkaProps;
        long long15 = objBuilder9.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder9.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setOffsetCommitPeriodMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = objBuilder17.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNull(objSerializableDeserializer20);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams14;
        int int16 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long14 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder5.setKeyDeserializer(objSerializableDeserializer8);
        objBuilder9.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        objBuilder9.valueDeserializer = serializableSerializableDeserializer13;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        long long15 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams16 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams16);
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder13.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder19.firstPollOffsetStrategy;
        objBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams23 = null;
        objBuilder22.kafkaSpoutStreams = kafkaSpoutStreams23;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = objBuilder22.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams26 = null;
        objBuilder22.kafkaSpoutStreams = kafkaSpoutStreams26;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder22.setPollTimeoutMs((long) '#');
        long long30 = objBuilder22.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(serializableSerializableDeserializer25);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer3;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strMap2);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        int int6 = objBuilder5.maxUncommittedOffsets;
        objBuilder5.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilder5.retryService = kafkaSpoutRetryService9;
        objBuilder5.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder5.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str16 = objBuilderKafkaSpoutConfig15.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = null;
        objBuilderKafkaSpoutConfig15.valueDeserializer = charSequenceDeserializer17;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder19.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder22 = objBuilder19.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder19.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long26 = objBuilderKafkaSpoutConfig25.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer27 = objBuilderKafkaSpoutConfig25.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = objBuilderKafkaSpoutConfig25.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilderKafkaSpoutConfig25.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder30 = objBuilderKafkaSpoutConfig25.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder31.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder35.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder38.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder38.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder38.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        objBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder35.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long49 = objBuilderKafkaSpoutConfig48.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList50 = objBuilderKafkaSpoutConfig48.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig48.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer53 = objBuilderKafkaSpoutConfig48.valueDeserializer;
        long long54 = objBuilderKafkaSpoutConfig48.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder55.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = objBuilder55.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig48.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilderKafkaSpoutConfig25.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer27);
        org.junit.Assert.assertNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder30);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.maxUncommittedOffsets = ' ';
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = objBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        objBuilder18.keyDeserializer = objSerializableDeserializer26;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder0.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setValueDeserializer(serializableSerializableDeserializer12);
        objBuilder11.maxUncommittedOffsets = 97;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) 10;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setOffsetCommitPeriodMs(10L);
        long long23 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder4.setOffsetCommitPeriodMs(52L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        objBuilder25.valueDeserializer = serializableSerializableDeserializer26;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams30 = null;
        objBuilder29.kafkaSpoutStreams = kafkaSpoutStreams30;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNotNull(objBuilder29);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        objBuilder0.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer11);
        long long13 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        long long29 = objBuilder18.offsetCommitPeriodMs;
        long long30 = objBuilder18.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder18.setKeyDeserializer(objSerializableDeserializer31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = objBuilder32.retryService;
        long long34 = objBuilder32.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long36 = objBuilderKafkaSpoutConfig35.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList37 = objBuilderKafkaSpoutConfig35.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        objBuilder0.kafkaProps = strMap43;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer45 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer45;
        objBuilder0.offsetCommitPeriodMs = 200L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer5;
        objBuilder0.offsetCommitPeriodMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilder0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = objBuilder0.tuplesBuilder;
        int int14 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams15;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        long long9 = objBuilder6.offsetCommitPeriodMs;
        long long10 = objBuilder6.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilder6.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long7 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        int int12 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.Class<?> wildcardClass13 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(pattern9);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer17;
        int int19 = objBuilder4.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = objBuilder4.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNull(objSerializableDeserializer20);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder21);
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams21 = objBuilder20.kafkaSpoutStreams;
        int int22 = objBuilder20.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = null;
        objBuilder20.tuplesBuilder = objKafkaSpoutTuplesBuilder23;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(kafkaSpoutStreams21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService5;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.regex.Pattern pattern11 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(pattern11);
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.String, java.lang.Comparable<java.lang.String>> strKafkaSpoutTuplesBuilder2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Comparable<java.lang.String>> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Comparable<java.lang.String>>(strMap0, kafkaSpoutStreams1, strKafkaSpoutTuplesBuilder2, kafkaSpoutRetryService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        int int11 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int12 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder15 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams16 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams16;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder15);
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        objBuilder0.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer11);
        long long13 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        long long29 = objBuilder18.offsetCommitPeriodMs;
        long long30 = objBuilder18.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder18.setKeyDeserializer(objSerializableDeserializer31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = objBuilder32.retryService;
        long long34 = objBuilder32.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long36 = objBuilderKafkaSpoutConfig35.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList37 = objBuilderKafkaSpoutConfig35.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        objBuilder0.kafkaProps = strMap43;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder0.setOffsetCommitPeriodMs((long) 97);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig47 = objBuilder46.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder46);
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder10.kafkaProps = strMap13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilder10.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.Class<?> wildcardClass19 = firstPollOffsetStrategy18.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.io.Serializable> objBuilderKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.io.Serializable> objBuilderBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.io.Serializable>(strMap0, kafkaSpoutStreams1, objBuilderKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy4 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long12 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        java.lang.Class<?> wildcardClass11 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.valueDeserializer;
        long long14 = objBuilderKafkaSpoutConfig8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder15.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        objBuilder2.kafkaProps = strMap21;
        int int23 = objBuilder2.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        objBuilder16.valueDeserializer = serializableSerializableDeserializer17;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder19 = null;
        objBuilder16.tuplesBuilder = objKafkaSpoutTuplesBuilder19;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilder8.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder8.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder16 = objBuilder15.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder18 = null;
        objBuilder17.tuplesBuilder = objKafkaSpoutTuplesBuilder18;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = null;
        objBuilder17.tuplesBuilder = objKafkaSpoutTuplesBuilder20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = objBuilder17.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer24 = null;
        objBuilder23.valueDeserializer = serializableSerializableDeserializer24;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder23);
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder3.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder3.setFirstPollOffsetStrategy(firstPollOffsetStrategy6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        objBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        long long18 = objBuilder7.offsetCommitPeriodMs;
        long long19 = objBuilder7.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder7.setKeyDeserializer(objSerializableDeserializer20);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilder21.retryService;
        long long23 = objBuilder21.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long25 = objBuilderKafkaSpoutConfig24.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList26 = objBuilderKafkaSpoutConfig24.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig24.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder37.setValueDeserializer(serializableSerializableDeserializer38);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = objBuilder37.retryService;
        objBuilder37.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder37.setKeyDeserializer(objSerializableDeserializer43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = objBuilder47.firstPollOffsetStrategy;
        objBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder37.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long53 = objBuilderKafkaSpoutConfig52.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer54 = objBuilderKafkaSpoutConfig52.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        objBuilderKafkaSpoutConfig52.kafkaProps = strMap55;
        objBuilderKafkaSpoutConfig52.pollTimeoutMs = (short) 100;
        java.lang.String str59 = objBuilderKafkaSpoutConfig52.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder60 = objBuilderKafkaSpoutConfig52.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long62 = objBuilderKafkaSpoutConfig61.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList63 = objBuilderKafkaSpoutConfig61.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = objBuilderKafkaSpoutConfig61.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer65 = null;
        objBuilderKafkaSpoutConfig61.valueDeserializer = charSequenceDeserializer65;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = objBuilderKafkaSpoutConfig61.kafkaProps;
        java.lang.String str68 = objBuilderKafkaSpoutConfig61.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = null;
        objBuilderKafkaSpoutConfig61.retryService = kafkaSpoutRetryService69;
        long long71 = objBuilderKafkaSpoutConfig61.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = objBuilderKafkaSpoutConfig61.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder73.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder77 = objBuilder73.setOffsetCommitPeriodMs((long) 100);
        objBuilder77.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer80 = objBuilder77.valueDeserializer;
        objBuilder77.offsetCommitPeriodMs = (short) 1;
        objBuilder77.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder86 = objBuilder77.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy87 = objBuilder86.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig61.firstPollOffsetStrategy = firstPollOffsetStrategy87;
        objBuilderKafkaSpoutConfig52.firstPollOffsetStrategy = firstPollOffsetStrategy87;
        objBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy87;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder91 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy87);
        long long92 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder94 = objBuilder0.setPollTimeoutMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNull(kafkaSpoutRetryService40);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str59, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder60);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str68, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy72);
        org.junit.Assert.assertNotNull(objBuilder77);
        org.junit.Assert.assertNull(serializableSerializableDeserializer80);
        org.junit.Assert.assertNotNull(objBuilder86);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy87 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy87.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 10L + "'", long92 == 10L);
        org.junit.Assert.assertNotNull(objBuilder94);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams12;
        java.lang.Class<?> wildcardClass14 = objBuilder9.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        long long5 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setKeyDeserializer(objSerializableDeserializer10);
        long long12 = objBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder11.retryService = kafkaSpoutRetryService13;
        java.lang.Class<?> wildcardClass15 = objBuilder11.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setMaxUncommittedOffsets((int) (short) 0);
        int int10 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilder0.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder26.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder30.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long44 = objBuilderKafkaSpoutConfig43.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList45 = objBuilderKafkaSpoutConfig43.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer48 = objBuilderKafkaSpoutConfig43.valueDeserializer;
        long long49 = objBuilderKafkaSpoutConfig43.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder50.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder50.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer57 = objBuilder56.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder56.setValueDeserializer(serializableSerializableDeserializer58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder59.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = objBuilder59.firstPollOffsetStrategy;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer65 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long67 = objBuilderKafkaSpoutConfig66.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList68 = objBuilderKafkaSpoutConfig66.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = objBuilderKafkaSpoutConfig66.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer70 = null;
        objBuilderKafkaSpoutConfig66.keyDeserializer = objBuilderDeserializer70;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer72 = objBuilderKafkaSpoutConfig66.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer73 = null;
        objBuilderKafkaSpoutConfig66.keyDeserializer = objBuilderDeserializer73;
        long long75 = objBuilderKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = objBuilderKafkaSpoutConfig66.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = objBuilderKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder78.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder82 = objBuilder78.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder84 = objBuilder82.setValueDeserializer(serializableSerializableDeserializer83);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService85 = objBuilder82.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder87 = objBuilder82.setOffsetCommitPeriodMs(30000L);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = objBuilder82.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = objBuilder82.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy90 = objBuilder82.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig66.firstPollOffsetStrategy = firstPollOffsetStrategy90;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder92 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy90);
        long long93 = objBuilder9.pollTimeoutMs;
        long long94 = objBuilder9.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer57);
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertNotNull(objBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(charSequenceDeserializer72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(objBuilder82);
        org.junit.Assert.assertNotNull(objBuilder84);
        org.junit.Assert.assertNull(kafkaSpoutRetryService85);
        org.junit.Assert.assertNotNull(objBuilder87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy90 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy90.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder92);
// flaky:         org.junit.Assert.assertTrue("'" + long93 + "' != '" + 32L + "'", long93 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 32L + "'", long94 == 32L);
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder3.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder3.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilder3.retryService = kafkaSpoutRetryService14;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = objBuilder18.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilder0.retryService = kafkaSpoutRetryService4;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder9.firstPollOffsetStrategy;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long14 = objBuilder8.offsetCommitPeriodMs;
        objBuilder8.pollTimeoutMs = 10L;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilder8.kafkaSpoutStreams = kafkaSpoutStreams17;
        int int19 = objBuilder8.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        objBuilder8.valueDeserializer = serializableSerializableDeserializer20;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        int int6 = objBuilder5.maxUncommittedOffsets;
        objBuilder5.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        objBuilder5.keyDeserializer = objSerializableDeserializer9;
        objBuilder5.offsetCommitPeriodMs = 200L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        objBuilder5.valueDeserializer = serializableSerializableDeserializer13;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 0;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str2 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 10L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str2, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder18 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap21 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams17);
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setValueDeserializer(serializableSerializableDeserializer6);
        objBuilder5.maxUncommittedOffsets = 32;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable>(objBuilder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap17;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer19 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNull(objBuilderDeserializer19);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder4.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setOffsetCommitPeriodMs((long) (byte) 10);
        int int15 = objBuilder12.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        long long16 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig19 = objBuilder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder4.kafkaProps = strMap10;
        int int12 = objBuilder4.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams14;
        objBuilder4.maxUncommittedOffsets = 97;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder18 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder18;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strList3);
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.io.Serializable> serializableBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.io.Serializable>();
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> objKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>();
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) 10;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder4.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder4.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder4.setOffsetCommitPeriodMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder25);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        int int7 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilder14.kafkaProps = strMap15;
        long long17 = objBuilder14.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder14.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        objBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder36.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder40.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder43.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder43.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        objBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder40.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long54 = objBuilderKafkaSpoutConfig53.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList55 = objBuilderKafkaSpoutConfig53.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig53.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer58 = objBuilderKafkaSpoutConfig53.valueDeserializer;
        long long59 = objBuilderKafkaSpoutConfig53.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder62 = objBuilder60.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = objBuilder60.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig53.firstPollOffsetStrategy = firstPollOffsetStrategy63;
        objBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy63;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer67 = objBuilder66.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder69 = objBuilder66.setValueDeserializer(serializableSerializableDeserializer68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder71 = objBuilder69.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = objBuilder69.firstPollOffsetStrategy;
        objBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        objBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(objBuilder62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer67);
        org.junit.Assert.assertNotNull(objBuilder69);
        org.junit.Assert.assertNotNull(objBuilder71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        long long8 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder18.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder18.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        long long26 = objBuilder15.offsetCommitPeriodMs;
        long long27 = objBuilder15.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder15.setKeyDeserializer(objSerializableDeserializer28);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = objBuilder29.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder31 = null;
        objBuilder29.tuplesBuilder = objKafkaSpoutTuplesBuilder31;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        objBuilder29.kafkaProps = strMap33;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder35 = null;
        objBuilder29.tuplesBuilder = objKafkaSpoutTuplesBuilder35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder37.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder41.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder44.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder44.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        objBuilder41.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder41.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long55 = objBuilderKafkaSpoutConfig54.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList56 = objBuilderKafkaSpoutConfig54.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig54.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer59 = objBuilderKafkaSpoutConfig54.valueDeserializer;
        long long60 = objBuilderKafkaSpoutConfig54.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder63 = objBuilder61.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = objBuilder61.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig54.firstPollOffsetStrategy = firstPollOffsetStrategy64;
        objBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy64;
        objBuilder53.offsetCommitPeriodMs = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer70 = objBuilder69.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder72 = objBuilder69.setOffsetCommitPeriodMs((long) 0);
        objBuilder72.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = objBuilder72.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder76 = objBuilder53.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        objBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams79 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams79;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer81 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer81;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 32L + "'", long27 == 32L);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(objBuilder63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer70);
        org.junit.Assert.assertNotNull(objBuilder72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder76);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder8.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilder8.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setOffsetCommitPeriodMs((long) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig19 = objBuilder16.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        long long13 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        long long25 = objBuilder14.offsetCommitPeriodMs;
        long long26 = objBuilder14.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder14.setKeyDeserializer(objSerializableDeserializer27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilder28.retryService;
        long long30 = objBuilder28.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long32 = objBuilderKafkaSpoutConfig31.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList33 = objBuilderKafkaSpoutConfig31.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig31.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        objBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setValueDeserializer(serializableSerializableDeserializer39);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder40.setValueDeserializer(serializableSerializableDeserializer41);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = null;
        objBuilder40.retryService = kafkaSpoutRetryService43;
        long long45 = objBuilder40.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder40.setValueDeserializer(serializableSerializableDeserializer46);
        objBuilder40.maxUncommittedOffsets = 52;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 32L + "'", long26 == 32L);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 100L + "'", long45 == 100L);
        org.junit.Assert.assertNotNull(objBuilder47);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder7.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder7.setMaxUncommittedOffsets(100);
        long long11 = objBuilder10.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilder10.kafkaSpoutStreams;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        objBuilder0.pollTimeoutMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = objBuilder13.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer17);
        int int19 = objBuilder18.maxUncommittedOffsets;
        objBuilder18.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        objBuilder18.retryService = kafkaSpoutRetryService22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder24.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long32 = objBuilderKafkaSpoutConfig31.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList33 = objBuilderKafkaSpoutConfig31.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = objBuilderKafkaSpoutConfig31.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer35 = null;
        objBuilderKafkaSpoutConfig31.valueDeserializer = charSequenceDeserializer35;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = objBuilderKafkaSpoutConfig31.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilderKafkaSpoutConfig31.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder39.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder39.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder43.setValueDeserializer(serializableSerializableDeserializer44);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder43.setKeyDeserializer(objSerializableDeserializer46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder48.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = objBuilder48.firstPollOffsetStrategy;
        objBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        objBuilderKafkaSpoutConfig31.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder55 = objBuilder54.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder54.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder60 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder60;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(serializableSerializableDeserializer14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(firstPollOffsetStrategy38);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(objBuilder57);
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        long long10 = objBuilder9.pollTimeoutMs;
        int int11 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer12;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(objBuilder9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs(0L);
        objBuilder22.offsetCommitPeriodMs = 200L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder25 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder22.setValueDeserializer(serializableSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder22.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder22.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder22.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams33 = null;
        objBuilder32.kafkaSpoutStreams = kafkaSpoutStreams33;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig35 = objBuilder32.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder8.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        objBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        long long23 = objBuilder12.offsetCommitPeriodMs;
        long long24 = objBuilder12.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder12.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder29 = null;
        objBuilder28.tuplesBuilder = objKafkaSpoutTuplesBuilder29;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder28.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) 100);
        objBuilder37.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = objBuilder37.valueDeserializer;
        objBuilder37.offsetCommitPeriodMs = (short) 1;
        objBuilder37.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder37.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder37.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder49.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder49.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder53.setValueDeserializer(serializableSerializableDeserializer54);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder53.setKeyDeserializer(objSerializableDeserializer56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = objBuilder57.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        objBuilder32.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap63 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 32L + "'", long24 == 32L);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNull(serializableSerializableDeserializer40);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder59);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder1 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 52;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = objBuilderKafkaSpoutConfig10.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig10.getRetryService();
        long long13 = objBuilderKafkaSpoutConfig10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig10.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = null;
        objBuilderKafkaSpoutConfig10.keyDeserializer = objBuilderDeserializer15;
        objBuilderKafkaSpoutConfig10.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder19.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer24 = objBuilder19.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder19.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig27.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder29 = null;
        objBuilderKafkaSpoutConfig27.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder29;
        long long31 = objBuilderKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder32.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder36.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder39.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder39.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        objBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder36.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder36.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig27.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer51 = objBuilderKafkaSpoutConfig27.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = objBuilderKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        objBuilderKafkaSpoutConfig10.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer56 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer56;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams58 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.lang.String str59 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(objSerializableDeserializer24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertNull(kafkaSpoutStreams58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str59, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long14 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer17 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNull(objBuilderDeserializer17);
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder3 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder3;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilder0.kafkaProps;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNull(objSerializableDeserializer2);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder18.offsetCommitPeriodMs = 0L;
        long long21 = objBuilder18.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = objBuilder18.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        objBuilder18.kafkaProps = strMap23;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = objBuilder18.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objSerializableDeserializer25);
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder4.kafkaProps = strMap10;
        int int12 = objBuilder4.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        objBuilder4.offsetCommitPeriodMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        objBuilder4.retryService = kafkaSpoutRetryService17;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(objBuilder14);
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder11.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder11.kafkaProps = strMap13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder11.setValueDeserializer(serializableSerializableDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder16);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder21.setMaxUncommittedOffsets((int) (short) 0);
        java.lang.Class<?> wildcardClass24 = objBuilder21.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str2 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder5.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder5.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilder19.retryService;
        objBuilder19.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder19.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder27.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = objBuilder29.firstPollOffsetStrategy;
        objBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        java.util.regex.Pattern pattern34 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long36 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str2, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(serializableSerializableDeserializer12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNull(pattern34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        long long16 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilder19.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = objBuilder19.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder24 = objBuilder19.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder19.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder26.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder28.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder28.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder32.setValueDeserializer(serializableSerializableDeserializer33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setKeyDeserializer(objSerializableDeserializer35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder36.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = objBuilder36.kafkaProps;
        objBuilder36.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = objBuilder18.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder23);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNull(kafkaSpoutRetryService45);
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.maxUncommittedOffsets = '4';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = objBuilder18.valueDeserializer;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig24 = objBuilder18.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer23);
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        objBuilder6.maxUncommittedOffsets = (byte) -1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        objBuilder6.valueDeserializer = serializableSerializableDeserializer9;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>> firstPollOffsetStrategyKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>> firstPollOffsetStrategyBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>>(strMap0, kafkaSpoutStreams1, firstPollOffsetStrategyKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.regex.Pattern pattern8 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(pattern8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        objBuilder11.keyDeserializer = objSerializableDeserializer12;
        int int14 = objBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilder11.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder11.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        objBuilder11.valueDeserializer = serializableSerializableDeserializer17;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder19 = objBuilder11.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder11.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder11.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams23 = objBuilder11.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder11.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams26 = objBuilder11.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertNull(kafkaSpoutStreams23);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(kafkaSpoutStreams26);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        long long13 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder18.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer21 = objBuilder18.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder18.setValueDeserializer(serializableSerializableDeserializer22);
        objBuilder23.offsetCommitPeriodMs = (-1L);
        objBuilder23.maxUncommittedOffsets = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder23.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        java.lang.String str30 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(serializableSerializableDeserializer21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str30, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder3 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setMaxUncommittedOffsets((int) (byte) 10);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(objBuilderDeserializer5);
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setKeyDeserializer(objSerializableDeserializer15);
        objBuilder16.maxUncommittedOffsets = (short) 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setMaxUncommittedOffsets((int) (short) 1);
        int int23 = objBuilder20.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        objBuilder20.retryService = kafkaSpoutRetryService24;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        long long8 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long12 = objBuilderKafkaSpoutConfig11.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig11.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig11.getValueDeserializer();
        long long15 = objBuilderKafkaSpoutConfig11.getPollTimeoutMs();
        int int16 = objBuilderKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        objBuilder21.kafkaProps = strMap22;
        long long24 = objBuilder21.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder21.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilderKafkaSpoutConfig11.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder10.setValueDeserializer(serializableSerializableDeserializer45);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams47 = objBuilder10.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNull(kafkaSpoutStreams47);
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setMaxUncommittedOffsets(97);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig10 = objBuilder9.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder9);
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder3 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long5 = objBuilderKafkaSpoutConfig4.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig4.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig4.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig4.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig4.kafkaProps = strMap10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig4.keyDeserializer;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig4.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig4.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy14;
        long long16 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer27 = objBuilder24.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder24.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder30.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder30.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setValueDeserializer(serializableSerializableDeserializer35);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setKeyDeserializer(objSerializableDeserializer37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = objBuilder38.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = objBuilder38.kafkaProps;
        objBuilder38.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = objBuilder38.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder29.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        java.lang.Class<?> wildcardClass45 = objBuilder44.getClass();
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(serializableSerializableDeserializer27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        long long12 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder26.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder30.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long44 = objBuilderKafkaSpoutConfig43.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList45 = objBuilderKafkaSpoutConfig43.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer48 = objBuilderKafkaSpoutConfig43.valueDeserializer;
        long long49 = objBuilderKafkaSpoutConfig43.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder50.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder50.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer57 = objBuilder56.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder56.setValueDeserializer(serializableSerializableDeserializer58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder59.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = objBuilder59.firstPollOffsetStrategy;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer65 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long67 = objBuilderKafkaSpoutConfig66.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList68 = objBuilderKafkaSpoutConfig66.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = objBuilderKafkaSpoutConfig66.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer70 = null;
        objBuilderKafkaSpoutConfig66.keyDeserializer = objBuilderDeserializer70;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer72 = objBuilderKafkaSpoutConfig66.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer73 = null;
        objBuilderKafkaSpoutConfig66.keyDeserializer = objBuilderDeserializer73;
        long long75 = objBuilderKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = objBuilderKafkaSpoutConfig66.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = objBuilderKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder78.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder82 = objBuilder78.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder84 = objBuilder82.setValueDeserializer(serializableSerializableDeserializer83);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService85 = objBuilder82.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder87 = objBuilder82.setOffsetCommitPeriodMs(30000L);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = objBuilder82.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = objBuilder82.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy90 = objBuilder82.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig66.firstPollOffsetStrategy = firstPollOffsetStrategy90;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder92 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy90);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer93 = null;
        objBuilder92.keyDeserializer = objSerializableDeserializer93;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer57);
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertNotNull(objBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(charSequenceDeserializer72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(objBuilder82);
        org.junit.Assert.assertNotNull(objBuilder84);
        org.junit.Assert.assertNull(kafkaSpoutRetryService85);
        org.junit.Assert.assertNotNull(objBuilder87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy90 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy90.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder92);
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams20 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder4.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder4.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer28 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder29 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder29;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNull(serializableSerializableDeserializer28);
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        long long5 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 100);
        int int8 = objBuilder7.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder7.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setMaxUncommittedOffsets((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig12 = objBuilder11.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setKeyDeserializer(objSerializableDeserializer7);
        long long9 = objBuilder8.pollTimeoutMs;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig10 = objBuilder8.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 32L + "'", long9 == 32L);
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 100;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.Class<?> wildcardClass13 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (-1);
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = '4';
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setOffsetCommitPeriodMs(10L);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder4.setPollTimeoutMs(1L);
        objBuilder25.maxUncommittedOffsets = 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(objBuilder25);
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder2.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = objBuilder2.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder2.setMaxUncommittedOffsets(32);
        int int9 = objBuilder2.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(objSerializableDeserializer6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer5;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        int int6 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = objBuilder21.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.pollTimeoutMs = ' ';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder4.setKeyDeserializer(objSerializableDeserializer46);
        objBuilder47.offsetCommitPeriodMs = 35L;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = objBuilder47.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(objSerializableDeserializer26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder6 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer8;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        long long13 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilder2.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder2.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder2.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder2.retryService = kafkaSpoutRetryService10;
        int int12 = objBuilder2.maxUncommittedOffsets;
        long long13 = objBuilder2.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(objBuilder9);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.AnnotatedElement> firstPollOffsetStrategyEnumBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass1 = firstPollOffsetStrategyEnumBuilder0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer10;
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        objBuilder11.keyDeserializer = objSerializableDeserializer12;
        int int14 = objBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilder11.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder18.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder25.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        objBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        long long33 = objBuilder22.offsetCommitPeriodMs;
        long long34 = objBuilder22.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder22.setKeyDeserializer(objSerializableDeserializer35);
        objBuilder36.offsetCommitPeriodMs = 0L;
        long long39 = objBuilder36.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = objBuilder36.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer41 = objBuilder36.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder42.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder42.setOffsetCommitPeriodMs((long) 100);
        objBuilder46.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer49 = objBuilder46.valueDeserializer;
        objBuilder46.offsetCommitPeriodMs = (short) 1;
        objBuilder46.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder46.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = objBuilder55.firstPollOffsetStrategy;
        objBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer59 = objBuilder17.valueDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 32L + "'", long34 == 32L);
        org.junit.Assert.assertNotNull(objBuilder36);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 32L + "'", long39 == 32L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objSerializableDeserializer41);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNull(serializableSerializableDeserializer49);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNull(serializableSerializableDeserializer59);
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = kafkaSpoutRetryService7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = null;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer13;
        long long15 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 100L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.offsetCommitPeriodMs = 0;
        objBuilder0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setMaxUncommittedOffsets((int) (short) 0);
        long long13 = objBuilder12.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilder12.kafkaProps = strMap14;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        int int14 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer15;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long19 = objBuilderKafkaSpoutConfig18.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig18.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig18.getValueDeserializer();
        long long22 = objBuilderKafkaSpoutConfig18.getPollTimeoutMs();
        int int23 = objBuilderKafkaSpoutConfig18.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        objBuilder28.kafkaProps = strMap29;
        long long31 = objBuilder28.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder28.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder41.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder41.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilder33.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer52 = null;
        objBuilder51.keyDeserializer = objSerializableDeserializer52;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams54 = null;
        objBuilder51.kafkaSpoutStreams = kafkaSpoutStreams54;
        objBuilder51.offsetCommitPeriodMs = ' ';
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder51);
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder26.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder33.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder33.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        objBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder30.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long44 = objBuilderKafkaSpoutConfig43.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList45 = objBuilderKafkaSpoutConfig43.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer48 = objBuilderKafkaSpoutConfig43.valueDeserializer;
        long long49 = objBuilderKafkaSpoutConfig43.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder50.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder50.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer57 = objBuilder56.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder56.setValueDeserializer(serializableSerializableDeserializer58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder59.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = objBuilder59.firstPollOffsetStrategy;
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer65 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long67 = objBuilderKafkaSpoutConfig66.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList68 = objBuilderKafkaSpoutConfig66.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = objBuilderKafkaSpoutConfig66.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer70 = null;
        objBuilderKafkaSpoutConfig66.keyDeserializer = objBuilderDeserializer70;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer72 = objBuilderKafkaSpoutConfig66.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer73 = null;
        objBuilderKafkaSpoutConfig66.keyDeserializer = objBuilderDeserializer73;
        long long75 = objBuilderKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = objBuilderKafkaSpoutConfig66.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = objBuilderKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder78.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder82 = objBuilder78.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder84 = objBuilder82.setValueDeserializer(serializableSerializableDeserializer83);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService85 = objBuilder82.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder87 = objBuilder82.setOffsetCommitPeriodMs(30000L);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = objBuilder82.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = objBuilder82.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy90 = objBuilder82.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig66.firstPollOffsetStrategy = firstPollOffsetStrategy90;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder92 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy90);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer93 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy94 = objBuilder9.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer57);
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertNotNull(objBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(charSequenceDeserializer72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(objBuilder82);
        org.junit.Assert.assertNotNull(objBuilder84);
        org.junit.Assert.assertNull(kafkaSpoutRetryService85);
        org.junit.Assert.assertNotNull(objBuilder87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy90 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy90.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder92);
        org.junit.Assert.assertNull(serializableSerializableDeserializer93);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy94 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy94.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        int int6 = objBuilder0.maxUncommittedOffsets;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        long long11 = objBuilderKafkaSpoutConfig8.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig8.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilderKafkaSpoutConfig8.retryService = kafkaSpoutRetryService14;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = objBuilderKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilderKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = objBuilderKafkaSpoutConfig8.retryService;
        objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams21 = objBuilderKafkaSpoutConfig8.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = objBuilder22.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder26 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder27 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder22.setOffsetCommitPeriodMs((long) (byte) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = objBuilder22.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = null;
        objBuilder22.retryService = kafkaSpoutRetryService31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder22.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilder35.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 35L + "'", long7 == 35L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
        org.junit.Assert.assertNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNull(kafkaSpoutStreams21);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder26);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        long long5 = objBuilder0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilder0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilder12.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = objBuilder12.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilder12.kafkaProps = strMap15;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder12.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long19 = objBuilderKafkaSpoutConfig18.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig18.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer23 = objBuilderKafkaSpoutConfig18.valueDeserializer;
        long long24 = objBuilderKafkaSpoutConfig18.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder25.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder25.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        objBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        int int34 = objBuilder33.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
        org.junit.Assert.assertNull(serializableSerializableDeserializer14);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs(0L);
        objBuilder22.offsetCommitPeriodMs = 200L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder25 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder22.setValueDeserializer(serializableSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder22.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder22.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder22.setPollTimeoutMs((long) (byte) -1);
        int int33 = objBuilder22.maxUncommittedOffsets;
        long long34 = objBuilder22.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) (short) 1);
        objBuilder14.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setMaxUncommittedOffsets(32);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder18.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder18.firstPollOffsetStrategy;
        objBuilder18.maxUncommittedOffsets = (short) -1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.io.Serializable> objBuilderBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.io.Serializable>();
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = objBuilderKafkaSpoutTuplesBuilder12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder3.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder3.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilder13.retryService;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder5.keyDeserializer = objSerializableDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder5.kafkaProps = strMap10;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(charSequenceDeserializer4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        long long6 = objBuilder3.pollTimeoutMs;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 32L + "'", long6 == 32L);
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = objBuilderDeserializer8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long8 = objBuilderKafkaSpoutConfig7.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig7.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig7.valueDeserializer = charSequenceDeserializer11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig7.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder24.firstPollOffsetStrategy;
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        objBuilderKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder31 = objBuilder30.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder30.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer36 = null;
        objBuilder30.valueDeserializer = serializableSerializableDeserializer36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long39 = objBuilderKafkaSpoutConfig38.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder40 = null;
        objBuilderKafkaSpoutConfig38.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder40;
        int int42 = objBuilderKafkaSpoutConfig38.maxUncommittedOffsets;
        int int43 = objBuilderKafkaSpoutConfig38.maxUncommittedOffsets;
        long long44 = objBuilderKafkaSpoutConfig38.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = objBuilder45.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig38.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = objBuilder50.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNull(kafkaSpoutRetryService51);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 1;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer14;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) -1;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Comparable<java.lang.String>> serializableBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Comparable<java.lang.String>>();
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setKeyDeserializer(objSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = null;
        objBuilder8.kafkaSpoutStreams = kafkaSpoutStreams13;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder12);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder13.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        objBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        long long22 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = objBuilder0.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder23);
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = null;
        objBuilder11.tuplesBuilder = objKafkaSpoutTuplesBuilder12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        objBuilder11.keyDeserializer = objSerializableDeserializer14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilder11.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = strMap16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        int int10 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        int int13 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str11 = objBuilderKafkaSpoutConfig10.toString();
        java.lang.String str12 = objBuilderKafkaSpoutConfig10.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig10.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        long long29 = objBuilder18.offsetCommitPeriodMs;
        long long30 = objBuilder18.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder18.setKeyDeserializer(objSerializableDeserializer31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = objBuilder32.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setValueDeserializer(serializableSerializableDeserializer39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = objBuilder34.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long43 = objBuilderKafkaSpoutConfig42.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder44 = null;
        objBuilderKafkaSpoutConfig42.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder44;
        int int46 = objBuilderKafkaSpoutConfig42.maxUncommittedOffsets;
        int int47 = objBuilderKafkaSpoutConfig42.maxUncommittedOffsets;
        long long48 = objBuilderKafkaSpoutConfig42.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilderKafkaSpoutConfig42.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long51 = objBuilderKafkaSpoutConfig50.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder52 = null;
        objBuilderKafkaSpoutConfig50.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder52;
        int int54 = objBuilderKafkaSpoutConfig50.maxUncommittedOffsets;
        int int55 = objBuilderKafkaSpoutConfig50.maxUncommittedOffsets;
        long long56 = objBuilderKafkaSpoutConfig50.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder57.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = objBuilder57.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig50.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        objBuilderKafkaSpoutConfig42.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder63 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        objBuilder32.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        objBuilderKafkaSpoutConfig10.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder63);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder9;
        long long11 = objBuilder0.pollTimeoutMs;
        objBuilder0.maxUncommittedOffsets = (byte) 1;
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 10;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer14;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        objBuilder6.keyDeserializer = objSerializableDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = null;
        objBuilder6.tuplesBuilder = objKafkaSpoutTuplesBuilder9;
        objBuilder6.pollTimeoutMs = (byte) 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
    }
}
