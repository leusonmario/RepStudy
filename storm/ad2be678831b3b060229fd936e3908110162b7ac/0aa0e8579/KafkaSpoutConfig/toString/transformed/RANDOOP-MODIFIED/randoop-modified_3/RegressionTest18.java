import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        objBuilder18.kafkaProps = strMap19;
        objBuilder18.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder18.setKeyDeserializer(objSerializableDeserializer23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder25.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = null;
        objBuilder18.retryService = kafkaSpoutRetryService33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder18.setPollTimeoutMs(0L);
        objBuilder36.offsetCommitPeriodMs = 200L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder39 = objBuilder36.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder36.setValueDeserializer(serializableSerializableDeserializer40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = objBuilder36.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer44 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 97L + "'", long11 == 97L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder39);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer44);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.List<java.lang.String> strList17 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer18;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        objBuilder11.keyDeserializer = objSerializableDeserializer12;
        int int14 = objBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilder11.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder11.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        objBuilder11.valueDeserializer = serializableSerializableDeserializer17;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder19 = objBuilder11.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder11.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder11.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams23 = objBuilder11.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder11.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilder11.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder11.setPollTimeoutMs((long) (byte) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = objBuilder28.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertNull(kafkaSpoutStreams23);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        int int12 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long15 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str16 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderDeserializer13);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = null;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder12.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder16.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder16.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = objBuilder16.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer24 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str25 = objBuilderKafkaSpoutConfig0.toString();
        int int26 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objBuilderDeserializer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str25, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = objBuilder3.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder3.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams8;
        int int10 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilder3.retryService = kafkaSpoutRetryService11;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = objBuilder17.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder17.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder17.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder17.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig23.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig23.valueDeserializer;
        long long29 = objBuilderKafkaSpoutConfig23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder14.setPollTimeoutMs(52L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setOffsetCommitPeriodMs(52L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder41 = null;
        objBuilder40.tuplesBuilder = objKafkaSpoutTuplesBuilder41;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutStreams18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.retryService;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer10;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        objBuilder2.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder2.setMaxUncommittedOffsets((int) ' ');
        objBuilder2.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder2.setOffsetCommitPeriodMs(0L);
        int int11 = objBuilder2.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilder2.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder2.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams16 = objBuilder15.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(kafkaSpoutStreams16);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder18.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = objBuilder18.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder23.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams26 = objBuilder25.kafkaSpoutStreams;
        objBuilder25.pollTimeoutMs = '#';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = objBuilder25.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(objSerializableDeserializer22);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(kafkaSpoutStreams26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        objBuilder22.kafkaProps = strMap23;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setOffsetCommitPeriodMs(10L);
        objBuilder22.pollTimeoutMs = 52L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder22.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder27 = null;
        objBuilder26.tuplesBuilder = objKafkaSpoutTuplesBuilder27;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = objBuilder26.keyDeserializer;
        objBuilder26.offsetCommitPeriodMs = (-1L);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(objSerializableDeserializer29);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams3;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long4 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long6 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        objBuilder4.pollTimeoutMs = 'a';
        objBuilder4.maxUncommittedOffsets = (byte) 10;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 10;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilder2.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilder2.retryService = kafkaSpoutRetryService7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long10 = objBuilderKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig9.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig9.kafkaProps;
        java.lang.String str13 = objBuilderKafkaSpoutConfig9.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = objBuilderKafkaSpoutConfig9.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = objBuilderKafkaSpoutConfig9.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long17 = objBuilderKafkaSpoutConfig16.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList18 = objBuilderKafkaSpoutConfig16.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy19;
        long long21 = objBuilderKafkaSpoutConfig16.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList22 = objBuilderKafkaSpoutConfig16.getSubscribedTopics();
        java.util.regex.Pattern pattern23 = objBuilderKafkaSpoutConfig16.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer24 = objBuilderKafkaSpoutConfig16.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = objBuilderKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder26 = objBuilderKafkaSpoutConfig16.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer28 = objBuilder27.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str30 = objBuilderKafkaSpoutConfig29.toString();
        int int31 = objBuilderKafkaSpoutConfig29.getMaxUncommittedOffsets();
        int int32 = objBuilderKafkaSpoutConfig29.getMaxUncommittedOffsets();
        int int33 = objBuilderKafkaSpoutConfig29.getMaxUncommittedOffsets();
        long long34 = objBuilderKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        objBuilderKafkaSpoutConfig29.kafkaProps = strMap35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder37.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = objBuilder37.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder37.setValueDeserializer(serializableSerializableDeserializer41);
        objBuilder42.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        objBuilder42.kafkaProps = strMap45;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer47 = objBuilder42.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder48.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = objBuilder50.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = objBuilder50.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder42.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        objBuilderKafkaSpoutConfig29.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        objBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        objBuilderKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        objBuilderKafkaSpoutConfig9.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig59 = objBuilder58.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertNull(objBuilderDeserializer15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(pattern23);
        org.junit.Assert.assertNull(objBuilderDeserializer24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder26);
        org.junit.Assert.assertNull(serializableSerializableDeserializer28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str30, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNull(kafkaSpoutRetryService40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNull(objSerializableDeserializer47);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertNotNull(objBuilder58);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern3 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long4 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 97L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(pattern3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder6.retryService;
        int int8 = objBuilder6.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = objBuilder10.valueDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(serializableSerializableDeserializer11);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilder9.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        objBuilder16.keyDeserializer = objSerializableDeserializer17;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder19 = objBuilder16.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder19);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        objBuilder2.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder2.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder2.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        objBuilder2.keyDeserializer = objSerializableDeserializer9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder2.setOffsetCommitPeriodMs((long) 97);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = objBuilder14.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder16.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = objBuilder16.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = objBuilder16.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder22 = objBuilder16.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = objBuilder16.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(serializableSerializableDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(objSerializableDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder20);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder21);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder4.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer13;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 97L;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        long long3 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setKeyDeserializer(objSerializableDeserializer8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig10 = objBuilder7.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        int int12 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        objBuilder6.keyDeserializer = objSerializableDeserializer7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder6.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder6.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder6.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer17);
        long long19 = objBuilder18.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        objBuilder0.pollTimeoutMs = 0;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilder0.retryService = kafkaSpoutRetryService8;
        objBuilder0.maxUncommittedOffsets = (-1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        long long8 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        objBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilder10.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilder28.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long31 = objBuilderKafkaSpoutConfig30.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList32 = objBuilderKafkaSpoutConfig30.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = objBuilderKafkaSpoutConfig30.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer34 = null;
        objBuilderKafkaSpoutConfig30.valueDeserializer = charSequenceDeserializer34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = objBuilderKafkaSpoutConfig30.kafkaProps;
        java.lang.String str37 = objBuilderKafkaSpoutConfig30.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService38 = null;
        objBuilderKafkaSpoutConfig30.retryService = kafkaSpoutRetryService38;
        long long40 = objBuilderKafkaSpoutConfig30.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = objBuilderKafkaSpoutConfig30.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams42 = null;
        objBuilderKafkaSpoutConfig30.kafkaSpoutStreams = kafkaSpoutStreams42;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = null;
        objBuilderKafkaSpoutConfig30.retryService = kafkaSpoutRetryService44;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder46.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams49 = objBuilder46.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder46.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams52 = null;
        objBuilder46.kafkaSpoutStreams = kafkaSpoutStreams52;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        objBuilder46.kafkaProps = strMap54;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams56 = null;
        objBuilder46.kafkaSpoutStreams = kafkaSpoutStreams56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder58.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long62 = objBuilderKafkaSpoutConfig61.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList63 = objBuilderKafkaSpoutConfig61.getSubscribedTopics();
        long long64 = objBuilderKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder65 = null;
        objBuilderKafkaSpoutConfig61.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder65;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer67 = null;
        objBuilderKafkaSpoutConfig61.keyDeserializer = objBuilderDeserializer67;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = objBuilderKafkaSpoutConfig61.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = objBuilderKafkaSpoutConfig61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams71 = objBuilderKafkaSpoutConfig61.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long73 = objBuilderKafkaSpoutConfig72.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder74 = null;
        objBuilderKafkaSpoutConfig72.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder74;
        int int76 = objBuilderKafkaSpoutConfig72.maxUncommittedOffsets;
        int int77 = objBuilderKafkaSpoutConfig72.maxUncommittedOffsets;
        long long78 = objBuilderKafkaSpoutConfig72.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder81 = objBuilder79.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = objBuilder79.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig72.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        objBuilderKafkaSpoutConfig61.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        objBuilder58.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        objBuilder46.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        objBuilderKafkaSpoutConfig30.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        objBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder90 = objBuilder28.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer91 = objBuilder28.valueDeserializer;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str37, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(kafkaSpoutStreams49);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(kafkaSpoutStreams71);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertNotNull(objBuilder81);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder90);
        org.junit.Assert.assertNull(serializableSerializableDeserializer91);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilder4.firstPollOffsetStrategy;
        java.lang.Class<?> wildcardClass25 = firstPollOffsetStrategy24.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(objSerializableDeserializer23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long6 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 10L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setOffsetCommitPeriodMs(30000L);
        int int11 = objBuilder4.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder4.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilder4.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder13.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder19.firstPollOffsetStrategy;
        objBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams23 = null;
        objBuilder22.kafkaSpoutStreams = kafkaSpoutStreams23;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = objBuilder22.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder22.setKeyDeserializer(objSerializableDeserializer26);
        long long28 = objBuilder22.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer29 = objBuilder22.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder30 = objBuilder22.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(serializableSerializableDeserializer25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNull(serializableSerializableDeserializer29);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder30);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder5.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder12.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy17;
        long long20 = objBuilder9.offsetCommitPeriodMs;
        long long21 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder9.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = objBuilder23.retryService;
        long long25 = objBuilder23.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long27 = objBuilderKafkaSpoutConfig26.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList28 = objBuilderKafkaSpoutConfig26.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        int int33 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder0.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer39 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer39;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(kafkaSpoutRetryService24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder31);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.retryService;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setMaxUncommittedOffsets((int) (byte) 1);
        long long11 = objBuilder6.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long12 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long13 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder15 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 100;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 32L;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 200L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer15);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = objBuilder0.keyDeserializer;
        long long10 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder0.setOffsetCommitPeriodMs(35L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setKeyDeserializer(objSerializableDeserializer13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long16 = objBuilderKafkaSpoutConfig15.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList17 = objBuilderKafkaSpoutConfig15.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = objBuilderKafkaSpoutConfig15.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = null;
        objBuilderKafkaSpoutConfig15.valueDeserializer = charSequenceDeserializer19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = objBuilderKafkaSpoutConfig15.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = objBuilderKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder27.setValueDeserializer(serializableSerializableDeserializer28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder32.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = objBuilder32.firstPollOffsetStrategy;
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy35;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy35;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder38 = null;
        objBuilderKafkaSpoutConfig15.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder38;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = null;
        objBuilderKafkaSpoutConfig15.retryService = kafkaSpoutRetryService40;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = objBuilderKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        objBuilder43.maxUncommittedOffsets = (short) 0;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(firstPollOffsetStrategy22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder43);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder6.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer8);
        long long10 = objBuilder9.pollTimeoutMs;
        int int11 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams12;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilder9.kafkaProps = strMap14;
        int int16 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder9.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder0.setMaxUncommittedOffsets(32);
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder21);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        java.util.regex.Pattern pattern8 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 10;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(pattern8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilder9.kafkaProps;
        long long15 = objBuilder9.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder9.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder9.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        objBuilder9.valueDeserializer = serializableSerializableDeserializer20;
        objBuilder9.maxUncommittedOffsets = 52;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder24 = null;
        objBuilder9.tuplesBuilder = objKafkaSpoutTuplesBuilder24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder9.setMaxUncommittedOffsets((int) (byte) -1);
        long long28 = objBuilder27.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder13.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        objBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder10.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig23.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig23.valueDeserializer;
        long long29 = objBuilderKafkaSpoutConfig23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        objBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        java.util.regex.Pattern pattern37 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long38 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(pattern37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        objBuilder3.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder3.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        objBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder13.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = objBuilder13.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder27.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = objBuilder27.kafkaProps;
        objBuilder27.pollTimeoutMs = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = objBuilder27.kafkaProps;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setValueDeserializer(serializableSerializableDeserializer6);
        objBuilder5.maxUncommittedOffsets = 32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder5.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder5.setPollTimeoutMs((long) (short) 1);
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = objBuilder8.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder8.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer12);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilder13.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = objBuilder13.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        objBuilder13.kafkaProps = strMap16;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder13.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder13.kafkaProps;
        objBuilder13.pollTimeoutMs = 35;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(objSerializableDeserializer15);
        org.junit.Assert.assertNull(firstPollOffsetStrategy18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder3.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder3.setFirstPollOffsetStrategy(firstPollOffsetStrategy6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        objBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer19 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder21 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(objBuilderDeserializer19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder21);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern3 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList4 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(pattern3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setValueDeserializer(serializableSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str21 = objBuilderKafkaSpoutConfig20.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams22 = null;
        objBuilderKafkaSpoutConfig20.kafkaSpoutStreams = kafkaSpoutStreams22;
        java.util.regex.Pattern pattern24 = objBuilderKafkaSpoutConfig20.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = objBuilderKafkaSpoutConfig20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilderKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder27 = null;
        objBuilderKafkaSpoutConfig20.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder27;
        objBuilderKafkaSpoutConfig20.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder31.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder31.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams36 = null;
        objBuilder31.kafkaSpoutStreams = kafkaSpoutStreams36;
        long long38 = objBuilder31.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = objBuilder39.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder39.setValueDeserializer(serializableSerializableDeserializer41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = objBuilder42.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        objBuilderKafkaSpoutConfig20.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        objBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer51 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.lang.String str52 = objBuilderKafkaSpoutConfig0.toString();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNull(charSequenceDeserializer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str52, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder4.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setKeyDeserializer(objSerializableDeserializer12);
        long long14 = objBuilder13.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder13.setMaxUncommittedOffsets((int) (short) 0);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder16);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder2.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = objBuilder2.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder2.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long14 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig13.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = null;
        objBuilderKafkaSpoutConfig13.valueDeserializer = charSequenceDeserializer17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilderKafkaSpoutConfig13.kafkaProps;
        java.lang.String str20 = objBuilderKafkaSpoutConfig13.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer21 = objBuilderKafkaSpoutConfig13.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilderKafkaSpoutConfig13.getKafkaProps();
        long long23 = objBuilderKafkaSpoutConfig13.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer24 = null;
        objBuilderKafkaSpoutConfig13.valueDeserializer = charSequenceDeserializer24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long27 = objBuilderKafkaSpoutConfig26.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList28 = objBuilderKafkaSpoutConfig26.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer31 = objBuilderKafkaSpoutConfig26.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        objBuilderKafkaSpoutConfig26.kafkaProps = strMap32;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer34 = objBuilderKafkaSpoutConfig26.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer35 = objBuilderKafkaSpoutConfig26.valueDeserializer;
        objBuilderKafkaSpoutConfig26.pollTimeoutMs = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        objBuilder2.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        objBuilder2.valueDeserializer = serializableSerializableDeserializer41;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNull(objSerializableDeserializer10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str20, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer31);
        org.junit.Assert.assertNull(objBuilderDeserializer34);
        org.junit.Assert.assertNull(charSequenceDeserializer35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        long long13 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder6.keyDeserializer;
        objBuilder6.maxUncommittedOffsets = ' ';
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder6.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        objBuilder6.valueDeserializer = serializableSerializableDeserializer11;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig13 = objBuilder6.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        objBuilder0.pollTimeoutMs = 52L;
        objBuilder0.offsetCommitPeriodMs = (short) -1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer7;
        org.junit.Assert.assertNotNull(objBuilder2);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer16 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer16;
        java.lang.String str18 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer19 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        int int20 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        objBuilder25.kafkaProps = strMap26;
        long long28 = objBuilder25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder25.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder33 = null;
        objBuilder32.tuplesBuilder = objKafkaSpoutTuplesBuilder33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder35.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder35.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder39.setValueDeserializer(serializableSerializableDeserializer40);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = objBuilder39.retryService;
        objBuilder39.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder39.setKeyDeserializer(objSerializableDeserializer45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder47.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = objBuilder49.firstPollOffsetStrategy;
        objBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder39.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long55 = objBuilderKafkaSpoutConfig54.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer56 = objBuilderKafkaSpoutConfig54.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        objBuilderKafkaSpoutConfig54.kafkaProps = strMap57;
        objBuilderKafkaSpoutConfig54.pollTimeoutMs = (short) 100;
        java.lang.String str61 = objBuilderKafkaSpoutConfig54.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder62 = objBuilderKafkaSpoutConfig54.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long64 = objBuilderKafkaSpoutConfig63.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList65 = objBuilderKafkaSpoutConfig63.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = objBuilderKafkaSpoutConfig63.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer67 = null;
        objBuilderKafkaSpoutConfig63.valueDeserializer = charSequenceDeserializer67;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = objBuilderKafkaSpoutConfig63.kafkaProps;
        java.lang.String str70 = objBuilderKafkaSpoutConfig63.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService71 = null;
        objBuilderKafkaSpoutConfig63.retryService = kafkaSpoutRetryService71;
        long long73 = objBuilderKafkaSpoutConfig63.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = objBuilderKafkaSpoutConfig63.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder75.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder79 = objBuilder75.setOffsetCommitPeriodMs((long) 100);
        objBuilder79.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer82 = objBuilder79.valueDeserializer;
        objBuilder79.offsetCommitPeriodMs = (short) 1;
        objBuilder79.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder88 = objBuilder79.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy89 = objBuilder88.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig63.firstPollOffsetStrategy = firstPollOffsetStrategy89;
        objBuilderKafkaSpoutConfig54.firstPollOffsetStrategy = firstPollOffsetStrategy89;
        objBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy89;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder93 = objBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy89);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy89;
        java.util.regex.Pattern pattern95 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str18, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str61, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str70, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy74);
        org.junit.Assert.assertNotNull(objBuilder79);
        org.junit.Assert.assertNull(serializableSerializableDeserializer82);
        org.junit.Assert.assertNotNull(objBuilder88);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy89 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy89.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder93);
        org.junit.Assert.assertNull(pattern95);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder9.firstPollOffsetStrategy;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        objBuilder8.pollTimeoutMs = 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder8.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder8.keyDeserializer;
        long long20 = objBuilder8.pollTimeoutMs;
        int int21 = objBuilder8.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(serializableSerializableDeserializer18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str18 = objBuilderKafkaSpoutConfig0.toString();
        long long19 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str18, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = objBuilder0.keyDeserializer;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objSerializableDeserializer6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        long long7 = objBuilder6.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilder6.kafkaSpoutStreams;
        long long9 = objBuilder6.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilder5.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilder5.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder5.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder5.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        objBuilder5.valueDeserializer = serializableSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilder5.retryService;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int14 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = null;
        objBuilder4.retryService = kafkaSpoutRetryService16;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder9.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilder9.retryService;
        objBuilder9.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder9.setPollTimeoutMs(52L);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(objBuilder19);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder4.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder4.setMaxUncommittedOffsets(1);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.valueDeserializer;
        long long14 = objBuilderKafkaSpoutConfig8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder15.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long22 = objBuilderKafkaSpoutConfig21.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList23 = objBuilderKafkaSpoutConfig21.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer26 = objBuilderKafkaSpoutConfig21.valueDeserializer;
        long long27 = objBuilderKafkaSpoutConfig21.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = objBuilder28.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder33.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long37 = objBuilderKafkaSpoutConfig36.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder38 = null;
        objBuilderKafkaSpoutConfig36.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder38;
        int int40 = objBuilderKafkaSpoutConfig36.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder41 = null;
        objBuilderKafkaSpoutConfig36.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        objBuilderKafkaSpoutConfig36.kafkaProps = strMap43;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = objBuilderKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder46.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder46.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder50.setValueDeserializer(serializableSerializableDeserializer51);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder50.setKeyDeserializer(objSerializableDeserializer53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder55.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = objBuilder55.firstPollOffsetStrategy;
        objBuilder54.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        objBuilderKafkaSpoutConfig36.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        int int62 = objBuilder35.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams63 = null;
        objBuilder35.kafkaSpoutStreams = kafkaSpoutStreams63;
        long long65 = objBuilder35.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = null;
        objBuilder35.retryService = kafkaSpoutRetryService66;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
// flaky:         org.junit.Assert.assertTrue("'" + long65 + "' != '" + 32L + "'", long65 == 32L);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        objBuilder6.maxUncommittedOffsets = 32;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder6.kafkaProps = strMap11;
        objBuilder6.maxUncommittedOffsets = (byte) 100;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long10 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig8.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder4.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = null;
        objBuilder15.valueDeserializer = serializableSerializableDeserializer16;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder7.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder7.setMaxUncommittedOffsets(100);
        int int11 = objBuilder7.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilder7.kafkaProps = strMap12;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = objBuilder7.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder7.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder17 = null;
        objBuilder16.tuplesBuilder = objKafkaSpoutTuplesBuilder17;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNull(kafkaSpoutStreams14);
        org.junit.Assert.assertNotNull(objBuilder16);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (-1);
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder3 = objBuilder0.tuplesBuilder;
        long long4 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilder7.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder7.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder12.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = null;
        objBuilder12.kafkaSpoutStreams = kafkaSpoutStreams15;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder21.setValueDeserializer(serializableSerializableDeserializer22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer24 = objBuilder21.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder21.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer32);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService34 = objBuilder31.retryService;
        objBuilder31.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder31.setKeyDeserializer(objSerializableDeserializer37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder39.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = objBuilder41.firstPollOffsetStrategy;
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        objBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = objBuilder46.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer48 = objBuilder46.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer49 = objBuilder46.valueDeserializer;
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(serializableSerializableDeserializer24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNull(kafkaSpoutRetryService34);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(objSerializableDeserializer48);
        org.junit.Assert.assertNull(serializableSerializableDeserializer49);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(objBuilderDeserializer3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder9.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder9.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long14 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        long long16 = objBuilderKafkaSpoutConfig13.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder17 = null;
        objBuilderKafkaSpoutConfig13.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder17;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilderKafkaSpoutConfig13.retryService = kafkaSpoutRetryService19;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig13.getValueDeserializer();
        long long22 = objBuilderKafkaSpoutConfig13.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder23 = objBuilderKafkaSpoutConfig13.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy;
        java.util.regex.Pattern pattern25 = objBuilderKafkaSpoutConfig13.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList26 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        int int27 = objBuilderKafkaSpoutConfig13.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer28 = null;
        objBuilderKafkaSpoutConfig13.keyDeserializer = objBuilderDeserializer28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder30.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder37.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder37.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        objBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        long long45 = objBuilder34.offsetCommitPeriodMs;
        long long46 = objBuilder34.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder34.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer49 = objBuilder34.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder50.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder50.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder54.setValueDeserializer(serializableSerializableDeserializer55);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder54.setKeyDeserializer(objSerializableDeserializer57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder59.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = objBuilder59.firstPollOffsetStrategy;
        objBuilder58.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        long long64 = objBuilder58.offsetCommitPeriodMs;
        objBuilder58.pollTimeoutMs = 10L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = objBuilder58.firstPollOffsetStrategy;
        objBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder23);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNull(pattern25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 32L + "'", long46 == 32L);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertNull(objSerializableDeserializer49);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        long long12 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig8.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder4.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder16.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder16.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder21.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = objBuilder24.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder28 = objBuilder24.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder29 = objBuilder24.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder24.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder31.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = objBuilder4.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer36 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer36;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder38 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = objBuilder4.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        objBuilder4.kafkaProps = strMap40;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = objBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder44.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(kafkaSpoutRetryService27);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder28);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder38);
        org.junit.Assert.assertNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder50);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = objBuilder24.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder24.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder32 = objBuilder31.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer33 = objBuilder31.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer34 = objBuilder31.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(objSerializableDeserializer29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder32);
        org.junit.Assert.assertNull(serializableSerializableDeserializer33);
        org.junit.Assert.assertNull(objSerializableDeserializer34);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.valueDeserializer;
        long long14 = objBuilderKafkaSpoutConfig8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder15.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long22 = objBuilderKafkaSpoutConfig21.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList23 = objBuilderKafkaSpoutConfig21.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer26 = objBuilderKafkaSpoutConfig21.valueDeserializer;
        long long27 = objBuilderKafkaSpoutConfig21.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = objBuilder28.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder2.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams36 = null;
        objBuilder35.kafkaSpoutStreams = kafkaSpoutStreams36;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer38 = null;
        objBuilder35.valueDeserializer = serializableSerializableDeserializer38;
        long long40 = objBuilder35.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = null;
        objBuilder35.retryService = kafkaSpoutRetryService41;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 52L + "'", long40 == 52L);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setPollTimeoutMs((long) (byte) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder4.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 10L;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        long long11 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = null;
        objBuilder18.tuplesBuilder = objKafkaSpoutTuplesBuilder20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        objBuilder18.kafkaProps = strMap22;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder18.setKeyDeserializer(objSerializableDeserializer24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = objBuilder25.firstPollOffsetStrategy;
        objBuilder25.maxUncommittedOffsets = (byte) -1;
        long long29 = objBuilder25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = objBuilder25.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder25.setKeyDeserializer(objSerializableDeserializer31);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(objSerializableDeserializer30);
        org.junit.Assert.assertNotNull(objBuilder32);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        long long5 = objBuilder0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilder0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder8 = objBuilder0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder0.kafkaProps = strMap9;
        int int11 = objBuilder0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilder0.kafkaProps;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig8.valueDeserializer;
        long long14 = objBuilderKafkaSpoutConfig8.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder15.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder20.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = objBuilder20.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder20.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        objBuilder20.valueDeserializer = serializableSerializableDeserializer26;
        long long28 = objBuilder20.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder23);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 97L + "'", long28 == 97L);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        objBuilder8.offsetCommitPeriodMs = 52L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setKeyDeserializer(objSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder13;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder12);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long4 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 52L;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 97L + "'", long11 == 97L);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long8 = objBuilderKafkaSpoutConfig7.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig7.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        int int11 = objBuilderKafkaSpoutConfig7.maxUncommittedOffsets;
        int int12 = objBuilderKafkaSpoutConfig7.maxUncommittedOffsets;
        long long13 = objBuilderKafkaSpoutConfig7.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig7.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long16 = objBuilderKafkaSpoutConfig15.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder17 = null;
        objBuilderKafkaSpoutConfig15.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder17;
        int int19 = objBuilderKafkaSpoutConfig15.maxUncommittedOffsets;
        int int20 = objBuilderKafkaSpoutConfig15.maxUncommittedOffsets;
        long long21 = objBuilderKafkaSpoutConfig15.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = objBuilder22.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy25;
        objBuilderKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy25;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy25;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams16 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams16;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        objBuilder6.keyDeserializer = objSerializableDeserializer7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder6.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder6.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder6.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        objBuilder16.keyDeserializer = objSerializableDeserializer17;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = objBuilder16.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder22 = objBuilder16.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder22);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.regex.Pattern pattern13 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(pattern13);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder8.setKeyDeserializer(objSerializableDeserializer9);
        java.lang.Class<?> wildcardClass11 = objBuilder8.getClass();
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setPollTimeoutMs((long) (byte) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder4.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilder4.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = objBuilder16.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder16.setKeyDeserializer(objSerializableDeserializer20);
        objBuilder21.offsetCommitPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setValueDeserializer(serializableSerializableDeserializer29);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer31 = objBuilder28.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder28.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setValueDeserializer(serializableSerializableDeserializer39);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = objBuilder38.retryService;
        objBuilder38.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder38.setKeyDeserializer(objSerializableDeserializer44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder46.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder48.firstPollOffsetStrategy;
        objBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder53.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams56 = null;
        objBuilder55.kafkaSpoutStreams = kafkaSpoutStreams56;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(serializableSerializableDeserializer31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertNotNull(objBuilder55);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        long long10 = objBuilder4.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilder4.kafkaProps;
        objBuilder4.pollTimeoutMs = 32L;
        int int14 = objBuilder4.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder4.valueDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder3.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder3.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        objBuilder3.keyDeserializer = objSerializableDeserializer12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str15 = objBuilderKafkaSpoutConfig14.toString();
        int int16 = objBuilderKafkaSpoutConfig14.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig14.maxUncommittedOffsets = ' ';
        java.lang.String str19 = objBuilderKafkaSpoutConfig14.toString();
        int int20 = objBuilderKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer21 = objBuilderKafkaSpoutConfig14.getKeyDeserializer();
        objBuilderKafkaSpoutConfig14.maxUncommittedOffsets = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = objBuilder24.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = objBuilder24.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer27 = null;
        objBuilder24.valueDeserializer = serializableSerializableDeserializer27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = objBuilder29.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder33 = objBuilder29.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder34 = objBuilder29.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder29.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder36.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder38.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder38.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setValueDeserializer(serializableSerializableDeserializer43);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder42.setKeyDeserializer(objSerializableDeserializer45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = objBuilder46.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = objBuilder46.kafkaProps;
        objBuilder46.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder53.setKeyDeserializer(objSerializableDeserializer54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = objBuilder53.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        objBuilderKafkaSpoutConfig14.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder3.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = objBuilder59.kafkaProps;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=32, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str19, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=32, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNull(objBuilderDeserializer21);
        org.junit.Assert.assertNull(serializableSerializableDeserializer25);
        org.junit.Assert.assertNull(serializableSerializableDeserializer26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder33);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long10 = objBuilderKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig9.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig9.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = null;
        objBuilderKafkaSpoutConfig9.keyDeserializer = objBuilderDeserializer13;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig9.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer16 = null;
        objBuilderKafkaSpoutConfig9.keyDeserializer = objBuilderDeserializer16;
        long long18 = objBuilderKafkaSpoutConfig9.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilderKafkaSpoutConfig9.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = objBuilderKafkaSpoutConfig9.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder25.setValueDeserializer(serializableSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = objBuilder25.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder25.setOffsetCommitPeriodMs(30000L);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = objBuilder25.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = objBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder25.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig9.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = objBuilder4.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNull(serializableSerializableDeserializer8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1);
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer16 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap19;
        java.util.List<java.lang.String> strList21 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams22 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder23 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer16);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(kafkaSpoutStreams22);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder23);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder4.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder4.kafkaProps = strMap20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer23);
        objBuilder24.offsetCommitPeriodMs = (short) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setValueDeserializer(serializableSerializableDeserializer27);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder28);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilder9.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = objBuilder9.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder15 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder9.setPollTimeoutMs((long) (byte) 1);
        objBuilder9.maxUncommittedOffsets = '4';
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(kafkaSpoutStreams14);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = objBuilder21.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.pollTimeoutMs = ' ';
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer47 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder4.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = objBuilder50.retryService;
        objBuilder50.pollTimeoutMs = 0L;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig54 = objBuilder50.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(objSerializableDeserializer26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNull(kafkaSpoutRetryService51);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        int int16 = objBuilder0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        objBuilder0.kafkaProps = strMap17;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams17;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setMaxUncommittedOffsets((int) '4');
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder20);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilder10.retryService = kafkaSpoutRetryService11;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setValueDeserializer(serializableSerializableDeserializer13);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder14);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy2 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap5;
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy2);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder4.setOffsetCommitPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertNotNull(objBuilder23);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.List<java.lang.String> strList12 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long13 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<?> wildcardClass14 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int6 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilder9.kafkaProps;
        long long15 = objBuilder9.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = objBuilder9.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder9.valueDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNull(objSerializableDeserializer16);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer15;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 32;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.regex.Pattern pattern12 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(pattern12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer9);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int14 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setValueDeserializer(serializableSerializableDeserializer25);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setKeyDeserializer(objSerializableDeserializer27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder29.firstPollOffsetStrategy;
        objBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        long long34 = objBuilder28.offsetCommitPeriodMs;
        objBuilder28.pollTimeoutMs = 10L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder28.firstPollOffsetStrategy;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder39 = objBuilder4.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder39);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        long long12 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder0.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer12);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilder13.retryService;
        objBuilder13.offsetCommitPeriodMs = (-1L);
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        int int7 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        java.util.List<java.lang.String> strList12 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long8 = objBuilderKafkaSpoutConfig7.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig7.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig7.valueDeserializer = charSequenceDeserializer11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig7.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder24.firstPollOffsetStrategy;
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        objBuilderKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder31 = objBuilder30.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        long long34 = objBuilder30.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        int int16 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder17 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder17;
        objBuilder0.pollTimeoutMs = 30000L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern3 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList4 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(pattern3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        objBuilder0.pollTimeoutMs = (byte) 100;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder0.kafkaProps = strMap9;
        objBuilder0.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder0.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = objBuilder16.kafkaSpoutStreams;
        objBuilder16.offsetCommitPeriodMs = 10L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutStreams19);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilder2.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder2.setKeyDeserializer(objSerializableDeserializer7);
        objBuilder8.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilder8.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long13 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str14 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        java.util.Map<java.lang.String, java.lang.Object> strMap0 = null;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strComparableKafkaSpoutTuplesBuilder2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strComparableBuilder3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>(strMap0, kafkaSpoutStreams1, strComparableKafkaSpoutTuplesBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Properties defining consumer connection to Kafka broker are required: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder1 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer3 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer3;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setMaxUncommittedOffsets(52);
        objBuilder0.pollTimeoutMs = (short) 0;
        org.junit.Assert.assertNotNull(objBuilder6);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap12;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap14;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 97L + "'", long11 == 97L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder4.retryService;
        objBuilder4.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder4.setKeyDeserializer(objSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = objBuilder14.firstPollOffsetStrategy;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets(1);
        objBuilder4.offsetCommitPeriodMs = (short) 0;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder18);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer10);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = objBuilder4.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer5);
        org.junit.Assert.assertNull(objSerializableDeserializer6);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        long long27 = objBuilder26.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = objBuilder26.retryService;
        objBuilder26.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = objBuilder26.retryService;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService31);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        objBuilder4.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilder13.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder13.firstPollOffsetStrategy;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig18 = objBuilder13.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams21 = objBuilder20.kafkaSpoutStreams;
        int int22 = objBuilder20.maxUncommittedOffsets;
        objBuilder20.maxUncommittedOffsets = 32;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        objBuilder20.kafkaProps = strMap25;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(kafkaSpoutStreams21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) 100;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap9;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.regex.Pattern pattern11 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(pattern11);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        long long7 = objBuilder6.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder6.setKeyDeserializer(objSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilder10.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder14 = objBuilder10.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder15 = objBuilder10.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilder10.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder6.maxUncommittedOffsets = (byte) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder6.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer9);
        objBuilder10.maxUncommittedOffsets = (byte) 1;
        objBuilder10.maxUncommittedOffsets = (byte) 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        objBuilder10.keyDeserializer = objSerializableDeserializer15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = objBuilder10.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap18 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        int int10 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder2.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilder10.kafkaSpoutStreams;
        objBuilder10.maxUncommittedOffsets = '#';
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        objBuilder4.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder4.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = objBuilder16.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(objSerializableDeserializer17);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap3;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setPollTimeoutMs((long) 52);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        objBuilder11.valueDeserializer = serializableSerializableDeserializer14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        objBuilder11.kafkaProps = strMap16;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = null;
        objBuilder11.kafkaSpoutStreams = kafkaSpoutStreams18;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = objBuilder11.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(objSerializableDeserializer20);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer10;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        int int8 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.Class<?> wildcardClass9 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        java.util.regex.Pattern pattern14 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long15 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String str16 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertNull(pattern14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 97L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) 100);
        objBuilder13.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder13.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder18.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = objBuilder18.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer22;
        int int24 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder5.setKeyDeserializer(objSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilder9.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder9.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder9.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long16 = objBuilderKafkaSpoutConfig15.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = objBuilderKafkaSpoutConfig15.valueDeserializer;
        int int18 = objBuilderKafkaSpoutConfig15.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilderKafkaSpoutConfig15.retryService;
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig15.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams21 = objBuilderKafkaSpoutConfig15.getKafkaSpoutStreams();
        java.lang.String str22 = objBuilderKafkaSpoutConfig15.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder23.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilder23.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder27 = objBuilder23.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder28 = objBuilder23.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder29 = objBuilder23.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long31 = objBuilderKafkaSpoutConfig30.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList32 = objBuilderKafkaSpoutConfig30.getSubscribedTopics();
        long long33 = objBuilderKafkaSpoutConfig30.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder34 = null;
        objBuilderKafkaSpoutConfig30.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder34;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService36 = null;
        objBuilderKafkaSpoutConfig30.retryService = kafkaSpoutRetryService36;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer38 = objBuilderKafkaSpoutConfig30.getValueDeserializer();
        int int39 = objBuilderKafkaSpoutConfig30.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams40 = objBuilderKafkaSpoutConfig30.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer42 = objBuilder41.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder41.setValueDeserializer(serializableSerializableDeserializer43);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder41.setValueDeserializer(serializableSerializableDeserializer45);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams47 = null;
        objBuilder41.kafkaSpoutStreams = kafkaSpoutStreams47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder41.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer51 = null;
        objBuilder41.keyDeserializer = objSerializableDeserializer51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder41.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig30.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        objBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(kafkaSpoutStreams21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str22, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder27);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder28);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams40);
        org.junit.Assert.assertNull(serializableSerializableDeserializer42);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setKeyDeserializer(objSerializableDeserializer15);
        objBuilder16.maxUncommittedOffsets = (short) 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setValueDeserializer(serializableSerializableDeserializer19);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder16.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = null;
        objBuilder16.retryService = kafkaSpoutRetryService23;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder20);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 200L;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setMaxUncommittedOffsets(0);
        int int7 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setMaxUncommittedOffsets((int) (short) -1);
        long long10 = objBuilder9.pollTimeoutMs;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objBuilder9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long10 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) -1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer15;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer17;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder18.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = objBuilder18.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder22.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder22.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder26.setValueDeserializer(serializableSerializableDeserializer27);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder26.setKeyDeserializer(objSerializableDeserializer29);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder26.setValueDeserializer(serializableSerializableDeserializer31);
        objBuilder32.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder32.setKeyDeserializer(objSerializableDeserializer35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder37.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = objBuilder37.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder37.setValueDeserializer(serializableSerializableDeserializer41);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = null;
        objBuilder42.retryService = kafkaSpoutRetryService43;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams45 = null;
        objBuilder42.kafkaSpoutStreams = kafkaSpoutStreams45;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder47.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder47.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder51.setValueDeserializer(serializableSerializableDeserializer52);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer54 = objBuilder51.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder51.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder57.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder57.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder63 = objBuilder61.setValueDeserializer(serializableSerializableDeserializer62);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = objBuilder61.retryService;
        objBuilder61.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder68 = objBuilder61.setKeyDeserializer(objSerializableDeserializer67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder71 = objBuilder69.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = objBuilder71.firstPollOffsetStrategy;
        objBuilder61.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder74 = objBuilder56.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        objBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        objBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = objBuilder36.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder78 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder80 = objBuilder78.setPollTimeoutMs((long) 1);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNull(objSerializableDeserializer21);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNull(kafkaSpoutRetryService40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertNull(serializableSerializableDeserializer54);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertNotNull(objBuilder61);
        org.junit.Assert.assertNotNull(objBuilder63);
        org.junit.Assert.assertNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(objBuilder68);
        org.junit.Assert.assertNotNull(objBuilder71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder78);
        org.junit.Assert.assertNotNull(objBuilder80);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder13;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setMaxUncommittedOffsets((int) (short) 100);
        objBuilder10.pollTimeoutMs = (byte) 100;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        objBuilder10.valueDeserializer = serializableSerializableDeserializer13;
        long long15 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams16 = objBuilder10.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder10.firstPollOffsetStrategy;
        objBuilder10.maxUncommittedOffsets = (-1);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNull(kafkaSpoutStreams16);
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int10 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int12 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilderKafkaSpoutConfig0.retryService;
        int int16 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long17 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder6.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNull(objSerializableDeserializer2);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder2.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = objBuilder5.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilder5.retryService = kafkaSpoutRetryService7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder5.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setPollTimeoutMs(32L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = objBuilder14.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder14.setValueDeserializer(serializableSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder18 = null;
        objBuilder14.tuplesBuilder = objKafkaSpoutTuplesBuilder18;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(serializableSerializableDeserializer6);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(objSerializableDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder17);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig11.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = null;
        objBuilderKafkaSpoutConfig11.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder13;
        long long15 = objBuilderKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder20.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder20.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig11.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder35.setValueDeserializer(serializableSerializableDeserializer36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = objBuilder37.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap3;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer14;
        long long16 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=200, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=200, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = ' ';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer7;
        objBuilder0.maxUncommittedOffsets = 1;
        objBuilder0.offsetCommitPeriodMs = 32;
        org.junit.Assert.assertNotNull(objBuilder4);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilder8.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder8.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder8.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList8 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilder0.retryService;
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        objBuilder0.pollTimeoutMs = (byte) -1;
        int int7 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = objBuilder0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder0.kafkaProps = strMap9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder0.setMaxUncommittedOffsets(0);
        objBuilder0.pollTimeoutMs = 200L;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder12);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder14;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.retryService;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) -1;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer14;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        long long12 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        java.util.regex.Pattern pattern8 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap9;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(pattern8);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = objBuilder21.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.pollTimeoutMs = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer47 = objBuilder46.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder46.setOffsetCommitPeriodMs((long) 0);
        objBuilder49.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = objBuilder49.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer54 = objBuilder53.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder53.setValueDeserializer(serializableSerializableDeserializer55);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder53.setValueDeserializer(serializableSerializableDeserializer57);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = null;
        objBuilder58.retryService = kafkaSpoutRetryService59;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long62 = objBuilderKafkaSpoutConfig61.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder63 = null;
        objBuilderKafkaSpoutConfig61.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder63;
        int int65 = objBuilderKafkaSpoutConfig61.maxUncommittedOffsets;
        int int66 = objBuilderKafkaSpoutConfig61.maxUncommittedOffsets;
        java.util.regex.Pattern pattern67 = objBuilderKafkaSpoutConfig61.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        objBuilderKafkaSpoutConfig61.kafkaProps = strMap68;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder70.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder74 = objBuilder70.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams75 = null;
        objBuilder70.kafkaSpoutStreams = kafkaSpoutStreams75;
        long long77 = objBuilder70.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer79 = objBuilder78.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder81 = objBuilder78.setValueDeserializer(serializableSerializableDeserializer80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder83 = objBuilder81.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = objBuilder81.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder85 = objBuilder70.setFirstPollOffsetStrategy(firstPollOffsetStrategy84);
        objBuilderKafkaSpoutConfig61.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder87 = objBuilder58.setFirstPollOffsetStrategy(firstPollOffsetStrategy84);
        objBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        objBuilder4.pollTimeoutMs = (short) 100;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer92 = objBuilder4.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(objSerializableDeserializer26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNull(serializableSerializableDeserializer47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer54);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(pattern67);
        org.junit.Assert.assertNotNull(objBuilder74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer79);
        org.junit.Assert.assertNotNull(objBuilder81);
        org.junit.Assert.assertNotNull(objBuilder83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder85);
        org.junit.Assert.assertNotNull(objBuilder87);
        org.junit.Assert.assertNull(objSerializableDeserializer92);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setValueDeserializer(serializableSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str21 = objBuilderKafkaSpoutConfig20.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams22 = null;
        objBuilderKafkaSpoutConfig20.kafkaSpoutStreams = kafkaSpoutStreams22;
        java.util.regex.Pattern pattern24 = objBuilderKafkaSpoutConfig20.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = objBuilderKafkaSpoutConfig20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilderKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder27 = null;
        objBuilderKafkaSpoutConfig20.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder27;
        objBuilderKafkaSpoutConfig20.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder31.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder31.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams36 = null;
        objBuilder31.kafkaSpoutStreams = kafkaSpoutStreams36;
        long long38 = objBuilder31.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = objBuilder39.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder39.setValueDeserializer(serializableSerializableDeserializer41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = objBuilder42.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        objBuilderKafkaSpoutConfig20.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        objBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap52;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = objBuilderKafkaSpoutConfig0.retryService;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 'a';
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(kafkaSpoutRetryService54);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder23.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = objBuilder23.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder23.setValueDeserializer(serializableSerializableDeserializer27);
        objBuilder28.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        objBuilder28.kafkaProps = strMap31;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer33 = objBuilder28.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = objBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilder36.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        int int41 = objBuilder40.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer42 = null;
        objBuilder40.valueDeserializer = serializableSerializableDeserializer42;
        objBuilder40.maxUncommittedOffsets = (byte) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder40.setPollTimeoutMs((long) (byte) 1);
        long long48 = objBuilder47.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(objSerializableDeserializer33);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder40);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = null;
        objBuilder2.kafkaSpoutStreams = kafkaSpoutStreams4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilder2.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long9 = objBuilderKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig8.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = objBuilderKafkaSpoutConfig8.getValueDeserializer();
        long long12 = objBuilderKafkaSpoutConfig8.getPollTimeoutMs();
        int int13 = objBuilderKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder14.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        objBuilder18.kafkaProps = strMap19;
        long long21 = objBuilder18.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder18.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder28.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder31.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder31.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        objBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        objBuilder2.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 100L + "'", long21 == 100L);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder37);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        int int7 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(objBuilder9);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder9.firstPollOffsetStrategy;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        objBuilder8.maxUncommittedOffsets = 100;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        objBuilder8.kafkaProps = strMap16;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = null;
        objBuilder8.retryService = kafkaSpoutRetryService20;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder19);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = objBuilder17.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder17.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder17.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder17.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig23.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig23.valueDeserializer;
        long long29 = objBuilderKafkaSpoutConfig23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        objBuilder36.pollTimeoutMs = 0L;
        objBuilder36.offsetCommitPeriodMs = (byte) -1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutStreams18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder36);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer15;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilder3.firstPollOffsetStrategy;
        objBuilder3.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        objBuilder3.keyDeserializer = objSerializableDeserializer10;
        objBuilder3.offsetCommitPeriodMs = '#';
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        objBuilder6.valueDeserializer = serializableSerializableDeserializer9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setKeyDeserializer(objSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        objBuilder14.keyDeserializer = objSerializableDeserializer15;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = objBuilder14.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(kafkaSpoutStreams17);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) -1;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 1;
        int int35 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long36 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str38 = objBuilderKafkaSpoutConfig0.toString();
        long long39 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.regex.Pattern pattern40 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str38, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(pattern40);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder20.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder20.setKeyDeserializer(objSerializableDeserializer25);
        objBuilder20.maxUncommittedOffsets = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder31.firstPollOffsetStrategy;
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder4.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder4.kafkaProps = strMap20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder27.setValueDeserializer(serializableSerializableDeserializer28);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = objBuilder27.retryService;
        objBuilder27.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder27.setKeyDeserializer(objSerializableDeserializer33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder35.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilder37.firstPollOffsetStrategy;
        objBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = objBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder41.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder41.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setValueDeserializer(serializableSerializableDeserializer46);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = objBuilder45.retryService;
        objBuilder45.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = objBuilder45.setKeyDeserializer(objSerializableDeserializer51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder53.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = objBuilder55.firstPollOffsetStrategy;
        objBuilder45.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        objBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams60 = objBuilder4.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNotNull(objBuilder52);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertNull(kafkaSpoutStreams60);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        int int6 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder9.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setValueDeserializer(serializableSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = objBuilder18.firstPollOffsetStrategy;
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy19;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = objBuilder0.retryService;
        long long22 = objBuilder0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        objBuilder0.kafkaProps = strMap23;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str2 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 10L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str2, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 100);
        int int12 = objBuilder9.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilder9.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilder9.retryService = kafkaSpoutRetryService14;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        int int14 = objBuilder9.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        objBuilder9.keyDeserializer = objSerializableDeserializer15;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long19 = objBuilderKafkaSpoutConfig18.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig18.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig18.getValueDeserializer();
        long long22 = objBuilderKafkaSpoutConfig18.getPollTimeoutMs();
        int int23 = objBuilderKafkaSpoutConfig18.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder24.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        objBuilder28.kafkaProps = strMap29;
        long long31 = objBuilder28.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder28.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder41.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder41.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilder33.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder9.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer52 = null;
        objBuilder51.keyDeserializer = objSerializableDeserializer52;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder54 = objBuilder51.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder51.setMaxUncommittedOffsets(52);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = objBuilder56.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder54);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertNull(kafkaSpoutRetryService57);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig8.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder4.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder16.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder16.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder21.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = objBuilder24.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder28 = objBuilder24.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder29 = objBuilder24.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder24.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder31.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder36.setOffsetCommitPeriodMs((long) (short) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = objBuilder38.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer40 = objBuilder38.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(kafkaSpoutRetryService27);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder28);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(objSerializableDeserializer40);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder0.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilder11.retryService = kafkaSpoutRetryService12;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder11);
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(kafkaSpoutStreams5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder2.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder2.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilder11.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilder11.retryService;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder5.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder12.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        objBuilder9.firstPollOffsetStrategy = firstPollOffsetStrategy17;
        long long20 = objBuilder9.offsetCommitPeriodMs;
        long long21 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder9.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = objBuilder23.retryService;
        long long25 = objBuilder23.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long27 = objBuilderKafkaSpoutConfig26.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList28 = objBuilderKafkaSpoutConfig26.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        int int33 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long38 = objBuilderKafkaSpoutConfig37.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = objBuilderKafkaSpoutConfig37.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        objBuilderKafkaSpoutConfig37.kafkaProps = strMap40;
        objBuilderKafkaSpoutConfig37.pollTimeoutMs = (short) 100;
        java.lang.String str44 = objBuilderKafkaSpoutConfig37.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder45 = objBuilderKafkaSpoutConfig37.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long47 = objBuilderKafkaSpoutConfig46.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList48 = objBuilderKafkaSpoutConfig46.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = objBuilderKafkaSpoutConfig46.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer50 = null;
        objBuilderKafkaSpoutConfig46.valueDeserializer = charSequenceDeserializer50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = objBuilderKafkaSpoutConfig46.kafkaProps;
        java.lang.String str53 = objBuilderKafkaSpoutConfig46.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = null;
        objBuilderKafkaSpoutConfig46.retryService = kafkaSpoutRetryService54;
        long long56 = objBuilderKafkaSpoutConfig46.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = objBuilderKafkaSpoutConfig46.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder58.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder62 = objBuilder58.setOffsetCommitPeriodMs((long) 100);
        objBuilder62.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer65 = objBuilder62.valueDeserializer;
        objBuilder62.offsetCommitPeriodMs = (short) 1;
        objBuilder62.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder71 = objBuilder62.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = objBuilder71.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig46.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        objBuilderKafkaSpoutConfig37.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        objBuilderKafkaSpoutConfig36.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder76 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder78 = objBuilder0.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder80 = objBuilder78.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder82 = objBuilder78.setKeyDeserializer(objSerializableDeserializer81);
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(kafkaSpoutRetryService24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder31);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str44, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder45);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str53, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy57);
        org.junit.Assert.assertNotNull(objBuilder62);
        org.junit.Assert.assertNull(serializableSerializableDeserializer65);
        org.junit.Assert.assertNotNull(objBuilder71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder76);
        org.junit.Assert.assertNotNull(objBuilder78);
        org.junit.Assert.assertNotNull(objBuilder80);
        org.junit.Assert.assertNotNull(objBuilder82);
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilder11.kafkaProps = strMap12;
        long long14 = objBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder16 = null;
        objBuilderKafkaSpoutConfig15.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder16;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        objBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer22 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.List<java.lang.String> strList23 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=32, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=32, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=32, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=32, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objBuilderDeserializer22);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        objBuilder0.pollTimeoutMs = (byte) -1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer7;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilder0.retryService = kafkaSpoutRetryService8;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder0.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder0.setKeyDeserializer(objSerializableDeserializer13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder16.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder18.retryService = kafkaSpoutRetryService19;
        long long21 = objBuilder18.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1L);
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 0L;
        java.lang.String str19 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str19, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = objBuilder2.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder2.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        objBuilder2.retryService = kafkaSpoutRetryService5;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder3.keyDeserializer;
        objBuilder3.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilder3.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams14;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder11);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = objBuilder2.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = null;
        objBuilder2.tuplesBuilder = objKafkaSpoutTuplesBuilder4;
        int int6 = objBuilder2.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap12;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = objBuilder24.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder24.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer32 = null;
        objBuilder24.keyDeserializer = objSerializableDeserializer32;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig34 = objBuilder24.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(objSerializableDeserializer29);
        org.junit.Assert.assertNotNull(objBuilder31);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        objBuilder3.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder6 = null;
        objBuilder3.tuplesBuilder = objKafkaSpoutTuplesBuilder6;
        objBuilder3.offsetCommitPeriodMs = '4';
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder3.kafkaProps = strMap10;
        objBuilder3.pollTimeoutMs = (byte) 1;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        objBuilder18.offsetCommitPeriodMs = '#';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        objBuilder18.keyDeserializer = objSerializableDeserializer21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder18.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setOffsetCommitPeriodMs(32L);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = objBuilder24.kafkaProps;
        long long28 = objBuilder24.offsetCommitPeriodMs;
        long long29 = objBuilder24.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long12 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap15;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer17 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNull(objBuilderDeserializer17);
        org.junit.Assert.assertNull(kafkaSpoutRetryService18);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer3);
        long long5 = objBuilder4.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        objBuilder3.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder3.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilder3.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder3.firstPollOffsetStrategy;
        objBuilder3.pollTimeoutMs = 10L;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long5 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap9;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long14 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.regex.Pattern pattern16 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy15);
        org.junit.Assert.assertNull(pattern16);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 0;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder3.keyDeserializer;
        objBuilder3.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        objBuilder3.valueDeserializer = serializableSerializableDeserializer10;
        long long12 = objBuilder3.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = null;
        objBuilder3.tuplesBuilder = objKafkaSpoutTuplesBuilder13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder3.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder16.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = objBuilder16.keyDeserializer;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objSerializableDeserializer7);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objSerializableDeserializer18);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder1 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        java.lang.String str33 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str33, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setOffsetCommitPeriodMs(10L);
        long long23 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder4.setOffsetCommitPeriodMs(52L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        objBuilder25.valueDeserializer = serializableSerializableDeserializer26;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder25.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder29.setValueDeserializer(serializableSerializableDeserializer32);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder4.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        objBuilder8.kafkaProps = strMap9;
        objBuilder8.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setKeyDeserializer(objSerializableDeserializer13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = objBuilderKafkaSpoutConfig15.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder17 = null;
        objBuilderKafkaSpoutConfig15.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder17;
        long long19 = objBuilderKafkaSpoutConfig15.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder24.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder24.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder41.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder41.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setValueDeserializer(serializableSerializableDeserializer46);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder45.setKeyDeserializer(objSerializableDeserializer48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = objBuilder49.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = objBuilder49.kafkaProps;
        objBuilder49.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = objBuilder49.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder0.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer58 = objBuilder57.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams59 = objBuilder57.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder61 = objBuilder57.setValueDeserializer(serializableSerializableDeserializer60);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer62 = null;
        objBuilder61.valueDeserializer = serializableSerializableDeserializer62;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertNull(objSerializableDeserializer58);
        org.junit.Assert.assertNull(kafkaSpoutStreams59);
        org.junit.Assert.assertNotNull(objBuilder61);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilder9.retryService = kafkaSpoutRetryService14;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder16 = objBuilder9.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder16);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer10);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long13 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 0;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.List<java.lang.String> strList12 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.regex.Pattern pattern10 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setValueDeserializer(serializableSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = objBuilder15.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder25.setValueDeserializer(serializableSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = objBuilder25.retryService;
        objBuilder25.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder25.setKeyDeserializer(objSerializableDeserializer31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder33.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilder35.firstPollOffsetStrategy;
        objBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        java.lang.String str40 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(pattern10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str40, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService41);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        objBuilder0.pollTimeoutMs = '#';
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = ' ';
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long13 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long14 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer15);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap13;
        int int15 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long16 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer35 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer35;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams37 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder39.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams42 = objBuilder41.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer43 = objBuilder41.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        objBuilder41.kafkaProps = strMap44;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer46 = objBuilder41.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long48 = objBuilderKafkaSpoutConfig47.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList49 = objBuilderKafkaSpoutConfig47.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig47.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer52 = objBuilderKafkaSpoutConfig47.valueDeserializer;
        long long53 = objBuilderKafkaSpoutConfig47.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder54.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = objBuilder54.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig47.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long61 = objBuilderKafkaSpoutConfig60.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList62 = objBuilderKafkaSpoutConfig60.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig60.firstPollOffsetStrategy = firstPollOffsetStrategy63;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer65 = objBuilderKafkaSpoutConfig60.valueDeserializer;
        long long66 = objBuilderKafkaSpoutConfig60.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder69 = objBuilder67.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = objBuilder67.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig60.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder72 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy70);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams74 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNull(kafkaSpoutStreams42);
        org.junit.Assert.assertNull(serializableSerializableDeserializer43);
        org.junit.Assert.assertNull(serializableSerializableDeserializer46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(objBuilder69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder72);
        org.junit.Assert.assertNull(kafkaSpoutStreams74);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.List<java.lang.String> strList4 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(charSequenceDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer33 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder34 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder34;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams36 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams36;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(objBuilderDeserializer33);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        int int25 = objBuilder7.maxUncommittedOffsets;
        long long26 = objBuilder7.pollTimeoutMs;
        objBuilder7.pollTimeoutMs = 97;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder7.setKeyDeserializer(objSerializableDeserializer29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = objBuilder31.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer35);
        int int37 = objBuilder36.maxUncommittedOffsets;
        objBuilder36.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = null;
        objBuilder36.retryService = kafkaSpoutRetryService40;
        int int42 = objBuilder36.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = objBuilder36.firstPollOffsetStrategy;
        objBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer45 = objBuilder7.valueDeserializer;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(serializableSerializableDeserializer32);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer45);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams7;
        objBuilder0.offsetCommitPeriodMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilder0.kafkaSpoutStreams;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        long long10 = objBuilder4.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setOffsetCommitPeriodMs((long) 52);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilder13.kafkaProps = strMap14;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder12.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = objBuilder12.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder12.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder12.setKeyDeserializer(objSerializableDeserializer20);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        objBuilder21.retryService = kafkaSpoutRetryService22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = objBuilder24.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder28 = objBuilder24.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder29 = objBuilder24.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = objBuilder24.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = objBuilder24.firstPollOffsetStrategy;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        objBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNull(objSerializableDeserializer17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(kafkaSpoutRetryService27);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder28);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder29);
        org.junit.Assert.assertNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer7);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder3 = objBuilder0.tuplesBuilder;
        long long4 = objBuilder0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = objBuilder0.keyDeserializer;
        objBuilder0.offsetCommitPeriodMs = (byte) 10;
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objSerializableDeserializer6);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder6.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder6.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder10.kafkaProps = strMap11;
        long long13 = objBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder16.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder20.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder23.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder23.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 1;
        int int35 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer36 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer36;
        int int38 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder8.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        objBuilder10.keyDeserializer = objSerializableDeserializer11;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        objBuilder0.keyDeserializer = objSerializableDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilder0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder0.setOffsetCommitPeriodMs(30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNotNull(objBuilder9);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(pattern9);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        long long20 = objBuilder18.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long22 = objBuilderKafkaSpoutConfig21.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList23 = objBuilderKafkaSpoutConfig21.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder18.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer30 = null;
        objBuilder18.valueDeserializer = serializableSerializableDeserializer30;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = objBuilder18.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        long long4 = objBuilder3.pollTimeoutMs;
        int int5 = objBuilder3.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = objBuilder3.valueDeserializer;
        long long7 = objBuilder3.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder3.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = objBuilder3.tuplesBuilder;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNull(serializableSerializableDeserializer6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder13);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilder8.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder11 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = objBuilder13.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer17);
        objBuilder18.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        objBuilder18.kafkaProps = strMap21;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = objBuilder18.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = objBuilder26.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder26.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        objBuilder29.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer33 = objBuilder32.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder32.setOffsetCommitPeriodMs((long) 0);
        objBuilder35.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = objBuilder35.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer40 = objBuilder39.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder39.setValueDeserializer(serializableSerializableDeserializer41);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder39.setValueDeserializer(serializableSerializableDeserializer43);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = null;
        objBuilder44.retryService = kafkaSpoutRetryService45;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long48 = objBuilderKafkaSpoutConfig47.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder49 = null;
        objBuilderKafkaSpoutConfig47.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder49;
        int int51 = objBuilderKafkaSpoutConfig47.maxUncommittedOffsets;
        int int52 = objBuilderKafkaSpoutConfig47.maxUncommittedOffsets;
        java.util.regex.Pattern pattern53 = objBuilderKafkaSpoutConfig47.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        objBuilderKafkaSpoutConfig47.kafkaProps = strMap54;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder56.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder56.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams61 = null;
        objBuilder56.kafkaSpoutStreams = kafkaSpoutStreams61;
        long long63 = objBuilder56.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer65 = objBuilder64.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder67 = objBuilder64.setValueDeserializer(serializableSerializableDeserializer66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder69 = objBuilder67.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = objBuilder67.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder71 = objBuilder56.setFirstPollOffsetStrategy(firstPollOffsetStrategy70);
        objBuilderKafkaSpoutConfig47.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder73 = objBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy70);
        objBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        objBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        objBuilder8.offsetCommitPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = null;
        objBuilder8.retryService = kafkaSpoutRetryService79;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNull(serializableSerializableDeserializer33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(serializableSerializableDeserializer40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(pattern53);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer65);
        org.junit.Assert.assertNotNull(objBuilder67);
        org.junit.Assert.assertNotNull(objBuilder69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder71);
        org.junit.Assert.assertNotNull(objBuilder73);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setOffsetCommitPeriodMs(30000L);
        int int11 = objBuilder10.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder10.setPollTimeoutMs((long) (byte) 100);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder4.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long16 = objBuilderKafkaSpoutConfig15.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList17 = objBuilderKafkaSpoutConfig15.getSubscribedTopics();
        long long18 = objBuilderKafkaSpoutConfig15.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder19 = null;
        objBuilderKafkaSpoutConfig15.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder19;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        objBuilderKafkaSpoutConfig15.retryService = kafkaSpoutRetryService21;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer23 = objBuilderKafkaSpoutConfig15.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilderKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = objBuilderKafkaSpoutConfig15.retryService;
        objBuilderKafkaSpoutConfig15.offsetCommitPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams28 = objBuilderKafkaSpoutConfig15.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder29.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = objBuilder29.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder33 = objBuilder29.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder34 = objBuilder29.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder29.setOffsetCommitPeriodMs((long) (byte) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = objBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService38 = null;
        objBuilder29.retryService = kafkaSpoutRetryService38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = objBuilder29.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder43 = objBuilder4.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNull(serializableSerializableDeserializer12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer23);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNull(kafkaSpoutStreams28);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder33);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder43);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        objBuilder4.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder4.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder16 = null;
        objBuilder15.tuplesBuilder = objKafkaSpoutTuplesBuilder16;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = objBuilder15.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder15.retryService = kafkaSpoutRetryService19;
        long long21 = objBuilder15.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder22 = objBuilder15.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNull(kafkaSpoutStreams18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder22);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilder2.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder2.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder2.keyDeserializer = objSerializableDeserializer8;
        objBuilder2.pollTimeoutMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilder2.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder1 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder1;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder3 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder3;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setPollTimeoutMs(32L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        objBuilder6.valueDeserializer = serializableSerializableDeserializer7;
        org.junit.Assert.assertNotNull(objBuilder6);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(charSequenceDeserializer4);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        long long12 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap17;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) -1;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder4.retryService = kafkaSpoutRetryService10;
        objBuilder4.pollTimeoutMs = 97L;
        objBuilder4.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 1);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder17);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder20.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = null;
        objBuilder20.tuplesBuilder = objKafkaSpoutTuplesBuilder23;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        objBuilder20.valueDeserializer = serializableSerializableDeserializer25;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        long long10 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long7 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilder9.kafkaSpoutStreams = kafkaSpoutStreams12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder9.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilder9.retryService;
        objBuilder9.offsetCommitPeriodMs = 0;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        objBuilder9.kafkaProps = strMap18;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams13;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer15;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams17;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder4.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = null;
        objBuilder4.retryService = kafkaSpoutRetryService18;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer21 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer21;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer23);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams25 = objBuilder4.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder20);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNull(kafkaSpoutStreams25);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int2 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        int int6 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(charSequenceDeserializer4);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long7 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 52;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long6 = objBuilderKafkaSpoutConfig5.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig5.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig5.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        long long14 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objBuilderDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder13.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder17.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        objBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy25;
        long long28 = objBuilder17.offsetCommitPeriodMs;
        long long29 = objBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder17.setMaxUncommittedOffsets((int) (byte) 0);
        objBuilder31.offsetCommitPeriodMs = '#';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer34 = null;
        objBuilder31.keyDeserializer = objSerializableDeserializer34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder31.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long39 = objBuilderKafkaSpoutConfig38.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList40 = objBuilderKafkaSpoutConfig38.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig38.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder45.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder45.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams50 = null;
        objBuilder45.kafkaSpoutStreams = kafkaSpoutStreams50;
        long long52 = objBuilder45.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer54 = objBuilder53.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder53.setValueDeserializer(serializableSerializableDeserializer55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder56.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = objBuilder56.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy59);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder62 = objBuilder45.setValueDeserializer(serializableSerializableDeserializer61);
        int int63 = objBuilder45.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder65 = objBuilder45.setValueDeserializer(serializableSerializableDeserializer64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder68 = objBuilder66.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = objBuilder66.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder70 = objBuilder66.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder71 = objBuilder66.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder73 = objBuilder66.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = objBuilder73.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder75.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder79 = objBuilder75.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder81 = objBuilder79.setValueDeserializer(serializableSerializableDeserializer80);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder83 = objBuilder79.setKeyDeserializer(objSerializableDeserializer82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = objBuilder83.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = objBuilder83.kafkaProps;
        objBuilder83.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder89 = objBuilder83.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder90 = objBuilder73.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder91 = objBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy88;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer54);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertNotNull(objBuilder62);
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(objBuilder65);
        org.junit.Assert.assertNotNull(objBuilder68);
        org.junit.Assert.assertNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder70);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder71);
        org.junit.Assert.assertNotNull(objBuilder73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder79);
        org.junit.Assert.assertNotNull(objBuilder81);
        org.junit.Assert.assertNotNull(objBuilder83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder89);
        org.junit.Assert.assertNotNull(objBuilder90);
        org.junit.Assert.assertNotNull(objBuilder91);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.retryService;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long8 = objBuilderKafkaSpoutConfig7.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig7.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig7.valueDeserializer = charSequenceDeserializer11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig7.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder24.firstPollOffsetStrategy;
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        objBuilderKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        objBuilder30.maxUncommittedOffsets = 0;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = objBuilder17.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder17.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder17.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder17.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig23.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig23.valueDeserializer;
        long long29 = objBuilderKafkaSpoutConfig23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder14.setPollTimeoutMs(52L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder38.setOffsetCommitPeriodMs(52L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = objBuilder41.setPollTimeoutMs((long) (byte) 10);
        objBuilder41.pollTimeoutMs = 52L;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = objBuilder41.kafkaProps;
        objBuilder41.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer49 = null;
        objBuilder41.valueDeserializer = serializableSerializableDeserializer49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder51.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder51.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder55.setValueDeserializer(serializableSerializableDeserializer56);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = objBuilder55.retryService;
        objBuilder55.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = objBuilder55.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder62 = objBuilder55.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder63.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder67 = objBuilder63.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder69 = objBuilder67.setValueDeserializer(serializableSerializableDeserializer68);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = objBuilder67.retryService;
        objBuilder67.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = objBuilder67.firstPollOffsetStrategy;
        objBuilder55.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        objBuilder41.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        objBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutStreams18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder43);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertNotNull(objBuilder57);
        org.junit.Assert.assertNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder62);
        org.junit.Assert.assertNotNull(objBuilder67);
        org.junit.Assert.assertNotNull(objBuilder69);
        org.junit.Assert.assertNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(charSequenceDeserializer4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long13 = objBuilderKafkaSpoutConfig12.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList14 = objBuilderKafkaSpoutConfig12.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = objBuilderKafkaSpoutConfig12.getValueDeserializer();
        java.util.regex.Pattern pattern16 = objBuilderKafkaSpoutConfig12.getTopicWildcardPattern();
        java.lang.String str17 = objBuilderKafkaSpoutConfig12.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder18 = objBuilderKafkaSpoutConfig12.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = objBuilderKafkaSpoutConfig12.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig12.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder22 = objBuilderKafkaSpoutConfig12.getTuplesBuilder();
        long long23 = objBuilderKafkaSpoutConfig12.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = objBuilderKafkaSpoutConfig12.kafkaProps;
        objBuilderKafkaSpoutConfig12.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer32);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer34 = objBuilder31.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder31.setValueDeserializer(serializableSerializableDeserializer35);
        objBuilder36.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder39 = objBuilder36.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder36.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams45 = objBuilder44.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer46 = objBuilder44.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        objBuilder44.kafkaProps = strMap47;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer49 = objBuilder44.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long51 = objBuilderKafkaSpoutConfig50.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList52 = objBuilderKafkaSpoutConfig50.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig50.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer55 = objBuilderKafkaSpoutConfig50.valueDeserializer;
        long long56 = objBuilderKafkaSpoutConfig50.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder59 = objBuilder57.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = objBuilder57.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig50.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder62 = objBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder63 = objBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        objBuilderKafkaSpoutConfig12.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams66 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams66;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(pattern16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutStreams19);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 97L + "'", long23 == 97L);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNull(serializableSerializableDeserializer34);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder39);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNull(kafkaSpoutStreams45);
        org.junit.Assert.assertNull(serializableSerializableDeserializer46);
        org.junit.Assert.assertNull(serializableSerializableDeserializer49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(objBuilder59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder62);
        org.junit.Assert.assertNotNull(objBuilder63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder3 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setMaxUncommittedOffsets(1);
        long long8 = objBuilder0.pollTimeoutMs;
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 97L + "'", long8 == 97L);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int7 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1;
        int int10 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.regex.Pattern pattern12 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(pattern12);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder4.setKeyDeserializer(objSerializableDeserializer23);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder25 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder25;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = null;
        objBuilder4.retryService = kafkaSpoutRetryService27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder29.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder29.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder33.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder36.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder36.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        objBuilder33.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder33.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder46.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder46.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        objBuilder50.kafkaProps = strMap51;
        long long53 = objBuilder50.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder55 = null;
        objBuilderKafkaSpoutConfig54.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig54.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        objBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        objBuilder45.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        int int61 = objBuilder45.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long63 = objBuilderKafkaSpoutConfig62.pollTimeoutMs;
        long long64 = objBuilderKafkaSpoutConfig62.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long66 = objBuilderKafkaSpoutConfig65.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList67 = objBuilderKafkaSpoutConfig65.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer68 = objBuilderKafkaSpoutConfig65.getValueDeserializer();
        java.util.regex.Pattern pattern69 = objBuilderKafkaSpoutConfig65.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig65.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        objBuilderKafkaSpoutConfig62.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        objBuilder45.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder74 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy70);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 100L + "'", long53 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(charSequenceDeserializer68);
        org.junit.Assert.assertNull(pattern69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder74);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder13.setValueDeserializer(serializableSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder13.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilder17.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder17.kafkaProps;
        objBuilder17.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setKeyDeserializer(objSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder24.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long30 = objBuilderKafkaSpoutConfig29.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList31 = objBuilderKafkaSpoutConfig29.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer32 = objBuilderKafkaSpoutConfig29.getValueDeserializer();
        long long33 = objBuilderKafkaSpoutConfig29.getPollTimeoutMs();
        int int34 = objBuilderKafkaSpoutConfig29.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder35.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder35.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        objBuilder39.kafkaProps = strMap40;
        long long42 = objBuilder39.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder39.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder45.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder49.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder52.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder56 = objBuilder52.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy57);
        objBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        objBuilder44.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        objBuilderKafkaSpoutConfig29.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = objBuilderKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder63 = objBuilderKafkaSpoutConfig29.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = objBuilderKafkaSpoutConfig29.firstPollOffsetStrategy;
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy64;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(charSequenceDeserializer32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 100L + "'", long42 == 100L);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1L);
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 100;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.retryService;
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder4.setKeyDeserializer(objSerializableDeserializer20);
        objBuilder21.maxUncommittedOffsets = 97;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer24 = null;
        objBuilder21.keyDeserializer = objSerializableDeserializer24;
        objBuilder21.pollTimeoutMs = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder21.setPollTimeoutMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder21.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder32 = null;
        objBuilder21.tuplesBuilder = objKafkaSpoutTuplesBuilder32;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilder4.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setOffsetCommitPeriodMs(10L);
        objBuilder8.offsetCommitPeriodMs = 0L;
        int int11 = objBuilder8.maxUncommittedOffsets;
        int int12 = objBuilder8.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNotNull(objBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder4.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        objBuilder4.retryService = kafkaSpoutRetryService21;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder23 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams24 = objBuilder4.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder4.setKeyDeserializer(objSerializableDeserializer25);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder23);
        org.junit.Assert.assertNull(kafkaSpoutStreams24);
        org.junit.Assert.assertNotNull(objBuilder26);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs(35L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilder16.kafkaSpoutStreams = kafkaSpoutStreams17;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder16.setPollTimeoutMs((long) (byte) 0);
        int int21 = objBuilder16.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        long long7 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap8;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap12;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams13;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long16 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long4 = objBuilderKafkaSpoutConfig3.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig3.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig3.getValueDeserializer();
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig3.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig3.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        long long13 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 0;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (short) 100;
        objBuilder9.pollTimeoutMs = 1;
        int int14 = objBuilder9.maxUncommittedOffsets;
        int int15 = objBuilder9.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilder5.kafkaSpoutStreams;
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer9);
        objBuilder10.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setKeyDeserializer(objSerializableDeserializer13);
        objBuilder14.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder17 = null;
        objBuilder14.tuplesBuilder = objKafkaSpoutTuplesBuilder17;
        int int19 = objBuilder14.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder14.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder22.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder22.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = objBuilder26.setValueDeserializer(serializableSerializableDeserializer27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = objBuilder26.retryService;
        objBuilder26.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder26.setKeyDeserializer(objSerializableDeserializer32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder36.firstPollOffsetStrategy;
        objBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder26.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder26.setValueDeserializer(serializableSerializableDeserializer41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder42.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer45 = objBuilder44.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = objBuilder44.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = null;
        objBuilder44.retryService = kafkaSpoutRetryService47;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer49 = null;
        objBuilder44.keyDeserializer = objSerializableDeserializer49;
        objBuilder44.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = objBuilder44.firstPollOffsetStrategy;
        objBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNull(objSerializableDeserializer45);
        org.junit.Assert.assertNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = null;
        objBuilder18.valueDeserializer = serializableSerializableDeserializer19;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder18.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = objBuilder18.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = objBuilder18.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        objBuilder8.keyDeserializer = objSerializableDeserializer10;
        long long12 = objBuilder8.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer9);
        long long11 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setKeyDeserializer(objSerializableDeserializer12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = null;
        objBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy14;
        objBuilder13.pollTimeoutMs = 1L;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig18 = objBuilder13.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        java.util.regex.Pattern pattern8 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(pattern8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        objBuilder8.offsetCommitPeriodMs = (-1);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder8.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long14 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        long long18 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList19 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        java.util.regex.Pattern pattern20 = objBuilderKafkaSpoutConfig13.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer21 = objBuilderKafkaSpoutConfig13.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilderKafkaSpoutConfig13.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder23 = objBuilderKafkaSpoutConfig13.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = objBuilder24.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str27 = objBuilderKafkaSpoutConfig26.toString();
        int int28 = objBuilderKafkaSpoutConfig26.getMaxUncommittedOffsets();
        int int29 = objBuilderKafkaSpoutConfig26.getMaxUncommittedOffsets();
        int int30 = objBuilderKafkaSpoutConfig26.getMaxUncommittedOffsets();
        long long31 = objBuilderKafkaSpoutConfig26.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        objBuilderKafkaSpoutConfig26.kafkaProps = strMap32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = objBuilder34.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder34.setValueDeserializer(serializableSerializableDeserializer38);
        objBuilder39.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        objBuilder39.kafkaProps = strMap42;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer44 = objBuilder39.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = objBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder47.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer55 = null;
        objBuilder8.keyDeserializer = objSerializableDeserializer55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder8.setPollTimeoutMs((long) 97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = objBuilder8.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(pattern20);
        org.junit.Assert.assertNull(objBuilderDeserializer21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder23);
        org.junit.Assert.assertNull(serializableSerializableDeserializer25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str27, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNull(objSerializableDeserializer44);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setKeyDeserializer(objSerializableDeserializer4);
        objBuilder5.offsetCommitPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder8.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setValueDeserializer(serializableSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = objBuilder12.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder12.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder18.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder18.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder22.setValueDeserializer(serializableSerializableDeserializer23);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = objBuilder22.retryService;
        objBuilder22.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder22.setKeyDeserializer(objSerializableDeserializer28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder32.firstPollOffsetStrategy;
        objBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        objBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long38 = objBuilderKafkaSpoutConfig37.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = objBuilderKafkaSpoutConfig37.valueDeserializer;
        int int40 = objBuilderKafkaSpoutConfig37.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = objBuilderKafkaSpoutConfig37.retryService;
        java.util.List<java.lang.String> strList42 = objBuilderKafkaSpoutConfig37.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams43 = objBuilderKafkaSpoutConfig37.getKafkaSpoutStreams();
        java.lang.String str44 = objBuilderKafkaSpoutConfig37.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = objBuilder45.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder49 = objBuilder45.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder50 = objBuilder45.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder51 = objBuilder45.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long53 = objBuilderKafkaSpoutConfig52.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList54 = objBuilderKafkaSpoutConfig52.getSubscribedTopics();
        long long55 = objBuilderKafkaSpoutConfig52.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder56 = null;
        objBuilderKafkaSpoutConfig52.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder56;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = null;
        objBuilderKafkaSpoutConfig52.retryService = kafkaSpoutRetryService58;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer60 = objBuilderKafkaSpoutConfig52.getValueDeserializer();
        int int61 = objBuilderKafkaSpoutConfig52.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams62 = objBuilderKafkaSpoutConfig52.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer64 = objBuilder63.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder66 = objBuilder63.setValueDeserializer(serializableSerializableDeserializer65);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder68 = objBuilder63.setValueDeserializer(serializableSerializableDeserializer67);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams69 = null;
        objBuilder63.kafkaSpoutStreams = kafkaSpoutStreams69;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder72 = objBuilder63.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer73 = null;
        objBuilder63.keyDeserializer = objSerializableDeserializer73;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = objBuilder63.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig52.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder77 = objBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        objBuilderKafkaSpoutConfig37.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder79 = objBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder81 = objBuilder79.setKeyDeserializer(objSerializableDeserializer80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = objBuilder81.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(serializableSerializableDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(kafkaSpoutStreams43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str44, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder49);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder50);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams62);
        org.junit.Assert.assertNull(serializableSerializableDeserializer64);
        org.junit.Assert.assertNotNull(objBuilder66);
        org.junit.Assert.assertNotNull(objBuilder68);
        org.junit.Assert.assertNotNull(objBuilder72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder77);
        org.junit.Assert.assertNotNull(objBuilder79);
        org.junit.Assert.assertNotNull(objBuilder81);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.List<java.lang.String> strList7 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(objBuilderDeserializer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder0.setOffsetCommitPeriodMs((long) (short) 10);
        long long8 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long12 = objBuilderKafkaSpoutConfig11.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList13 = objBuilderKafkaSpoutConfig11.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = objBuilderKafkaSpoutConfig11.getValueDeserializer();
        long long15 = objBuilderKafkaSpoutConfig11.getPollTimeoutMs();
        int int16 = objBuilderKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder17.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder17.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        objBuilder21.kafkaProps = strMap22;
        long long24 = objBuilder21.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder21.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilderKafkaSpoutConfig11.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder44 = objBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder46 = objBuilder10.setValueDeserializer(serializableSerializableDeserializer45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder48 = objBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objSerializableDeserializer5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder44);
        org.junit.Assert.assertNotNull(objBuilder46);
        org.junit.Assert.assertNotNull(objBuilder48);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder2.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder2.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder2.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder10.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = objBuilder12.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer14 = objBuilder12.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilder12.kafkaProps = strMap15;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer17 = objBuilder12.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long19 = objBuilderKafkaSpoutConfig18.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList20 = objBuilderKafkaSpoutConfig18.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer23 = objBuilderKafkaSpoutConfig18.valueDeserializer;
        long long24 = objBuilderKafkaSpoutConfig18.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder25.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = objBuilder25.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig18.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        objBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder2.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder34 = objBuilder2.tuplesBuilder;
        int int35 = objBuilder2.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = objBuilder2.firstPollOffsetStrategy;
        java.lang.Class<?> wildcardClass38 = objBuilder2.getClass();
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNull(serializableSerializableDeserializer4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(kafkaSpoutStreams13);
        org.junit.Assert.assertNull(serializableSerializableDeserializer14);
        org.junit.Assert.assertNull(serializableSerializableDeserializer17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer8;
        long long10 = objBuilder4.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder14 = null;
        objBuilder13.tuplesBuilder = objKafkaSpoutTuplesBuilder14;
        objBuilder13.offsetCommitPeriodMs = (short) 100;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(objBuilder13);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        long long13 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer14;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        long long8 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        int int11 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.regex.Pattern pattern12 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(pattern12);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setPollTimeoutMs(0L);
        long long19 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        objBuilder4.valueDeserializer = serializableSerializableDeserializer20;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long13 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 200L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer16 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder7.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilder7.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str14 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = objBuilder21.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.pollTimeoutMs = ' ';
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer47 = null;
        objBuilder4.keyDeserializer = objSerializableDeserializer47;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService49 = objBuilder4.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(objSerializableDeserializer26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(kafkaSpoutRetryService49);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder5.kafkaSpoutStreams = kafkaSpoutStreams6;
        objBuilder5.maxUncommittedOffsets = 10;
        java.lang.Class<?> wildcardClass10 = objBuilder5.getClass();
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy2 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        long long6 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objBuilderDeserializer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder9.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder9.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setValueDeserializer(serializableSerializableDeserializer13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setKeyDeserializer(objSerializableDeserializer15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder14.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = objBuilder18.firstPollOffsetStrategy;
        objBuilder0.firstPollOffsetStrategy = firstPollOffsetStrategy19;
        java.lang.Class<?> wildcardClass21 = firstPollOffsetStrategy19.getClass();
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(objBuilderDeserializer4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        objBuilder3.offsetCommitPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = objBuilder3.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder3.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder8.offsetCommitPeriodMs = (short) 0;
        long long11 = objBuilder8.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        objBuilder8.keyDeserializer = objSerializableDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long17 = objBuilderKafkaSpoutConfig16.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = objBuilderKafkaSpoutConfig16.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        objBuilderKafkaSpoutConfig16.kafkaProps = strMap19;
        objBuilderKafkaSpoutConfig16.pollTimeoutMs = (short) 100;
        java.lang.String str23 = objBuilderKafkaSpoutConfig16.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder24 = objBuilderKafkaSpoutConfig16.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long26 = objBuilderKafkaSpoutConfig25.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList27 = objBuilderKafkaSpoutConfig25.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = objBuilderKafkaSpoutConfig25.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer29 = null;
        objBuilderKafkaSpoutConfig25.valueDeserializer = charSequenceDeserializer29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = objBuilderKafkaSpoutConfig25.kafkaProps;
        java.lang.String str32 = objBuilderKafkaSpoutConfig25.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = null;
        objBuilderKafkaSpoutConfig25.retryService = kafkaSpoutRetryService33;
        long long35 = objBuilderKafkaSpoutConfig25.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilderKafkaSpoutConfig25.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder37.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder37.setOffsetCommitPeriodMs((long) 100);
        objBuilder41.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer44 = objBuilder41.valueDeserializer;
        objBuilder41.offsetCommitPeriodMs = (short) 1;
        objBuilder41.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder41.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = objBuilder50.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig25.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        objBuilderKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder55 = objBuilder3.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder57 = objBuilder55.setOffsetCommitPeriodMs(0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNull(objSerializableDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str23, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str32, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy36);
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertNull(serializableSerializableDeserializer44);
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNotNull(objBuilder55);
        org.junit.Assert.assertNotNull(objBuilder57);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) -1;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer6 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objBuilderDeserializer6);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder4 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder5 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder0.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer5 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(charSequenceDeserializer5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
        org.junit.Assert.assertNull(objBuilderDeserializer13);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        long long7 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        objBuilder4.offsetCommitPeriodMs = (short) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilder4.kafkaProps = strMap10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder4.setMaxUncommittedOffsets(35);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder14 = objBuilder4.tuplesBuilder;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder16 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder16;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams18;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        int int9 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long10 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str6 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.retryService;
        long long9 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str14 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        objBuilder2.pollTimeoutMs = 200L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = objBuilder2.valueDeserializer;
        objBuilder2.offsetCommitPeriodMs = 32;
        long long8 = objBuilder2.pollTimeoutMs;
        long long9 = objBuilder2.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilder2.retryService;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(serializableSerializableDeserializer5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 200L + "'", long8 == 200L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 32L + "'", long9 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer17;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(pattern9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer19 = objBuilder4.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder4.kafkaProps = strMap20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer23);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder25 = null;
        objBuilder4.tuplesBuilder = objKafkaSpoutTuplesBuilder25;
        objBuilder4.pollTimeoutMs = 1L;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(objSerializableDeserializer19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(objBuilder24);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder10.kafkaProps = strMap13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = objBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilder10.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        int int21 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str22 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str22, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder10;
        long long12 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long15 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        int int13 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) -1;
        java.lang.String str16 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer2 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer3;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder4.retryService;
        objBuilder4.offsetCommitPeriodMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder4.setKeyDeserializer(objSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = null;
        objBuilderKafkaSpoutConfig12.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig12.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder4.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilder4.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = objBuilder4.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.util.List<java.lang.String> strList10 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        long long13 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        long long2 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams3;
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(charSequenceDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService16;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams18;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer12;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder14 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(pattern9);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams2 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        long long6 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        long long14 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        objBuilder18.offsetCommitPeriodMs = 0L;
        objBuilder18.maxUncommittedOffsets = '4';
        objBuilder18.maxUncommittedOffsets = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder18.setMaxUncommittedOffsets((int) (byte) -1);
        objBuilder26.pollTimeoutMs = (short) 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer29 = null;
        objBuilder26.valueDeserializer = serializableSerializableDeserializer29;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder26);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy4 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilderKafkaSpoutConfig0.kafkaProps;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 52;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams8;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        int int5 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setValueDeserializer(serializableSerializableDeserializer7);
        objBuilder8.offsetCommitPeriodMs = (-1);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder8.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long14 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        long long18 = objBuilderKafkaSpoutConfig13.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList19 = objBuilderKafkaSpoutConfig13.getSubscribedTopics();
        java.util.regex.Pattern pattern20 = objBuilderKafkaSpoutConfig13.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer21 = objBuilderKafkaSpoutConfig13.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = objBuilderKafkaSpoutConfig13.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder23 = objBuilderKafkaSpoutConfig13.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = objBuilder24.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str27 = objBuilderKafkaSpoutConfig26.toString();
        int int28 = objBuilderKafkaSpoutConfig26.getMaxUncommittedOffsets();
        int int29 = objBuilderKafkaSpoutConfig26.getMaxUncommittedOffsets();
        int int30 = objBuilderKafkaSpoutConfig26.getMaxUncommittedOffsets();
        long long31 = objBuilderKafkaSpoutConfig26.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        objBuilderKafkaSpoutConfig26.kafkaProps = strMap32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder34.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = objBuilder34.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder39 = objBuilder34.setValueDeserializer(serializableSerializableDeserializer38);
        objBuilder39.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        objBuilder39.kafkaProps = strMap42;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer44 = objBuilder39.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder45.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = objBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = objBuilder47.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder50 = objBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        objBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        objBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer55 = null;
        objBuilder8.keyDeserializer = objSerializableDeserializer55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder8.setPollTimeoutMs((long) 97);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder58.setKeyDeserializer(objSerializableDeserializer59);
        objBuilder60.offsetCommitPeriodMs = 32;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(pattern20);
        org.junit.Assert.assertNull(objBuilderDeserializer21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder23);
        org.junit.Assert.assertNull(serializableSerializableDeserializer25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str27, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(objBuilder39);
        org.junit.Assert.assertNull(objSerializableDeserializer44);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder50);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder60);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer7;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        long long11 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap7 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertNull(strList3);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        java.lang.String str4 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer9;
        java.util.List<java.lang.String> strList11 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long12 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(charSequenceDeserializer7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams8 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        long long12 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutStreams8);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = ' ';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer9;
        objBuilder0.maxUncommittedOffsets = (-1);
        objBuilder0.offsetCommitPeriodMs = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder15 = objBuilder0.tuplesBuilder;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder0.setKeyDeserializer(objSerializableDeserializer16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder0.setMaxUncommittedOffsets(100);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder19);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams4 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        long long5 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder7 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutStreams4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderDeserializer11);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 30000L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder5 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams9 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer10;
        int int12 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long8 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(pattern9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilder2.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder2.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder2.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder2.setMaxUncommittedOffsets(35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder8.setPollTimeoutMs((long) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.io.Serializable> objKafkaSpoutConfig11 = objBuilder10.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        objBuilder4.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder11.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder11.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        objBuilder4.retryService = kafkaSpoutRetryService19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder22 = objBuilder4.setPollTimeoutMs(0L);
        objBuilder22.offsetCommitPeriodMs = 200L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder25 = objBuilder22.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long27 = objBuilderKafkaSpoutConfig26.pollTimeoutMs;
        long long28 = objBuilderKafkaSpoutConfig26.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long30 = objBuilderKafkaSpoutConfig29.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList31 = objBuilderKafkaSpoutConfig29.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer32 = objBuilderKafkaSpoutConfig29.getValueDeserializer();
        java.util.regex.Pattern pattern33 = objBuilderKafkaSpoutConfig29.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig29.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        objBuilderKafkaSpoutConfig26.maxUncommittedOffsets = 0;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = objBuilderKafkaSpoutConfig26.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = objBuilderKafkaSpoutConfig26.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder41 = objBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        long long42 = objBuilder22.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNotNull(objBuilder22);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(charSequenceDeserializer32);
        org.junit.Assert.assertNull(pattern33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilder8.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder8.kafkaProps;
        objBuilder8.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder15 = objBuilder14.tuplesBuilder;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder15);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        objBuilder4.retryService = kafkaSpoutRetryService10;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder4.tuplesBuilder;
        long long13 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder14 = objBuilder4.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilder4.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = objBuilder4.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder14);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder3.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = objBuilder7.valueDeserializer;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(serializableSerializableDeserializer8);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams13 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams13;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder15 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder15;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer17 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNull(objBuilderDeserializer17);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilder8.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder8.valueDeserializer;
        objBuilder8.offsetCommitPeriodMs = 52L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder13 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = objBuilder8.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder8.setPollTimeoutMs((long) 52);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNull(objSerializableDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder17);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder6.setKeyDeserializer(objSerializableDeserializer7);
        objBuilder8.pollTimeoutMs = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder8.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        objBuilder12.retryService = kafkaSpoutRetryService13;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder12);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer11;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer14 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer15;
        java.lang.String str17 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder18 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder19.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        objBuilder23.kafkaProps = strMap24;
        objBuilder23.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder23.setKeyDeserializer(objSerializableDeserializer28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder30.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder30.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy35;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = objBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams39 = null;
        objBuilder23.kafkaSpoutStreams = kafkaSpoutStreams39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder42 = objBuilder23.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = objBuilder42.firstPollOffsetStrategy;
        objBuilder42.pollTimeoutMs = '#';
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str47 = objBuilderKafkaSpoutConfig46.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer48 = null;
        objBuilderKafkaSpoutConfig46.valueDeserializer = charSequenceDeserializer48;
        java.util.regex.Pattern pattern50 = objBuilderKafkaSpoutConfig46.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList51 = objBuilderKafkaSpoutConfig46.getSubscribedTopics();
        int int52 = objBuilderKafkaSpoutConfig46.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer53 = null;
        objBuilderKafkaSpoutConfig46.valueDeserializer = charSequenceDeserializer53;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer55 = null;
        objBuilderKafkaSpoutConfig46.valueDeserializer = charSequenceDeserializer55;
        java.lang.String str57 = objBuilderKafkaSpoutConfig46.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder58.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = objBuilder58.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig46.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = objBuilderKafkaSpoutConfig46.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder64 = objBuilder42.setFirstPollOffsetStrategy(firstPollOffsetStrategy63);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy63;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderDeserializer13);
        org.junit.Assert.assertNull(objBuilderDeserializer14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder18);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(objBuilder42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str47, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str57, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder64);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 10;
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer10 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams11 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer10);
        org.junit.Assert.assertNull(kafkaSpoutStreams11);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        int int6 = objBuilder5.maxUncommittedOffsets;
        objBuilder5.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder5.setKeyDeserializer(objSerializableDeserializer9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder5.setKeyDeserializer(objSerializableDeserializer11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder12.kafkaProps = strMap13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = objBuilder12.keyDeserializer;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(objSerializableDeserializer15);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setKeyDeserializer(objSerializableDeserializer7);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer9);
        objBuilder10.maxUncommittedOffsets = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setKeyDeserializer(objSerializableDeserializer13);
        objBuilder14.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder17 = null;
        objBuilder14.tuplesBuilder = objKafkaSpoutTuplesBuilder17;
        int int19 = objBuilder14.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = objBuilder14.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams21 = null;
        objBuilder14.kafkaSpoutStreams = kafkaSpoutStreams21;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder20);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilder0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder0.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer8;
        int int10 = objBuilder0.maxUncommittedOffsets;
        int int11 = objBuilder0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder12.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams15 = objBuilder14.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = objBuilder14.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        objBuilder14.kafkaProps = strMap17;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder14.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder14.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = objBuilder14.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = objBuilder14.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        int int25 = objBuilder0.maxUncommittedOffsets;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(kafkaSpoutStreams15);
        org.junit.Assert.assertNull(serializableSerializableDeserializer16);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNull(objSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder24);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long11 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int12 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        java.lang.String str15 = objBuilderKafkaSpoutConfig0.toString();
        long long16 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str17 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 97L + "'", long11 == 97L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=97, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=97, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=97, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxUncommittedOffsets=97, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer6 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer6;
        java.util.regex.Pattern pattern8 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str9 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder13 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.lang.String str14 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 32L;
        java.lang.String str17 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer19;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(pattern8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService18);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long9 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer10 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder0.kafkaProps = strMap8;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams10 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder0.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = objBuilder15.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder15.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams19 = null;
        objBuilder18.kafkaSpoutStreams = kafkaSpoutStreams19;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder21 = null;
        objBuilder18.tuplesBuilder = objKafkaSpoutTuplesBuilder21;
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder18);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder1 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder1;
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long6 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.Class<?> wildcardClass7 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        long long5 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = objBuilderKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder6);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str7 = objBuilderKafkaSpoutConfig0.toString();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 'a';
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.pollTimeoutMs = (short) 1;
        long long12 = objBuilder9.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = objBuilder9.keyDeserializer;
        long long14 = objBuilder9.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNull(objSerializableDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer5);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = objBuilder4.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setValueDeserializer(serializableSerializableDeserializer8);
        objBuilder9.offsetCommitPeriodMs = (-1L);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder12 = objBuilder9.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder9.setOffsetCommitPeriodMs((long) 32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams18 = objBuilder17.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer19 = objBuilder17.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        objBuilder17.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = objBuilder17.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long24 = objBuilderKafkaSpoutConfig23.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList25 = objBuilderKafkaSpoutConfig23.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer28 = objBuilderKafkaSpoutConfig23.valueDeserializer;
        long long29 = objBuilderKafkaSpoutConfig23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder30.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = objBuilder30.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder36 = objBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder14.setPollTimeoutMs(52L);
        long long39 = objBuilder14.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(serializableSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder12);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutStreams18);
        org.junit.Assert.assertNull(serializableSerializableDeserializer19);
        org.junit.Assert.assertNull(serializableSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNotNull(objBuilder36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 32L + "'", long39 == 32L);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern2 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str3 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long5 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        java.lang.String str8 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder9.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder9.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        objBuilder13.kafkaProps = strMap14;
        objBuilder13.offsetCommitPeriodMs = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder13.setKeyDeserializer(objSerializableDeserializer18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = objBuilderKafkaSpoutConfig20.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = objBuilderKafkaSpoutConfig20.getRetryService();
        long long23 = objBuilderKafkaSpoutConfig20.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = objBuilderKafkaSpoutConfig20.getFirstPollOffsetStrategy();
        objBuilderKafkaSpoutConfig20.pollTimeoutMs = 0L;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer27 = objBuilderKafkaSpoutConfig20.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder28.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = objBuilder28.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder28.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long36 = objBuilderKafkaSpoutConfig35.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList37 = objBuilderKafkaSpoutConfig35.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = objBuilderKafkaSpoutConfig35.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = null;
        objBuilderKafkaSpoutConfig35.valueDeserializer = charSequenceDeserializer39;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = objBuilderKafkaSpoutConfig35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = objBuilderKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder43.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder43.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder47.setValueDeserializer(serializableSerializableDeserializer48);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = objBuilder47.setKeyDeserializer(objSerializableDeserializer50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder52.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = objBuilder52.firstPollOffsetStrategy;
        objBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        objBuilderKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        objBuilderKafkaSpoutConfig20.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService62 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService62;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str65 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(pattern2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNull(objBuilderDeserializer27);
        org.junit.Assert.assertNotNull(objBuilder32);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(firstPollOffsetStrategy42);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder51);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str65, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams3 = objBuilder0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        objBuilder0.kafkaProps = strMap8;
        objBuilder0.maxUncommittedOffsets = 52;
        org.junit.Assert.assertNull(kafkaSpoutStreams3);
        org.junit.Assert.assertNotNull(objBuilder5);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap6;
        int int8 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long11 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder12 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder12;
        long long14 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        int int15 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(pattern9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str12 = objBuilderKafkaSpoutConfig0.toString();
        long long13 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(charSequenceDeserializer8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams17 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder4.setKeyDeserializer(objSerializableDeserializer20);
        objBuilder21.maxUncommittedOffsets = 97;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer24 = null;
        objBuilder21.keyDeserializer = objSerializableDeserializer24;
        objBuilder21.pollTimeoutMs = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder29 = objBuilder21.setPollTimeoutMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder21.setKeyDeserializer(objSerializableDeserializer30);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams32 = null;
        objBuilder21.kafkaSpoutStreams = kafkaSpoutStreams32;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder29);
        org.junit.Assert.assertNotNull(objBuilder31);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        objBuilder0.kafkaProps = strMap3;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder0.kafkaProps = strMap5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder0.setKeyDeserializer(objSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder8);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer2 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer3 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer3;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        long long6 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 32L;
        int int9 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String str10 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long5 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.regex.Pattern pattern9 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        long long10 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(pattern9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder10.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder10.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        objBuilder14.kafkaProps = strMap15;
        long long17 = objBuilder14.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder14.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        objBuilder21.keyDeserializer = objSerializableDeserializer22;
        int int24 = objBuilder21.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams25 = objBuilder21.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = objBuilder21.setKeyDeserializer(objSerializableDeserializer26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long29 = objBuilderKafkaSpoutConfig28.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList30 = objBuilderKafkaSpoutConfig28.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig28.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = objBuilderKafkaSpoutConfig28.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService34 = objBuilderKafkaSpoutConfig28.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder35 = objBuilderKafkaSpoutConfig28.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilderKafkaSpoutConfig28.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(kafkaSpoutStreams25);
        org.junit.Assert.assertNotNull(objBuilder27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNull(kafkaSpoutRetryService34);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder37);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilder4.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams7;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.List<java.lang.String> strList5 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        int int6 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer7 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer7;
        long long9 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = objBuilderKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer1 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        long long4 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(objBuilderDeserializer1);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder9 = null;
        objBuilder8.tuplesBuilder = objKafkaSpoutTuplesBuilder9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = objBuilder8.valueDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilder8.kafkaProps = strMap12;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = objBuilder8.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(serializableSerializableDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        long long9 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.Class<?> wildcardClass10 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer4);
        int int6 = objBuilder5.maxUncommittedOffsets;
        objBuilder5.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilder5.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder12 = objBuilder5.setValueDeserializer(serializableSerializableDeserializer11);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer13 = objBuilder12.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = objBuilder12.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder12.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder12.setMaxUncommittedOffsets(100);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        objBuilder18.kafkaProps = strMap19;
        long long21 = objBuilder18.pollTimeoutMs;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(objBuilder12);
        org.junit.Assert.assertNull(serializableSerializableDeserializer13);
        org.junit.Assert.assertNull(objSerializableDeserializer14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 30000L + "'", long21 == 30000L);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setPollTimeoutMs((long) (byte) 10);
        objBuilder0.pollTimeoutMs = 52L;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = objBuilder0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilder0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder0.keyDeserializer;
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer9;
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        java.util.regex.Pattern pattern4 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.lang.String str5 = objBuilderKafkaSpoutConfig0.toString();
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 32;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer13;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = (byte) 1;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(pattern4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(kafkaSpoutStreams7);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder8);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder9);
        org.junit.Assert.assertNull(kafkaSpoutStreams12);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer3 = objBuilderKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams6;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(charSequenceDeserializer3);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder4);
        org.junit.Assert.assertNull(objBuilderDeserializer5);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setValueDeserializer(serializableSerializableDeserializer4);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = objBuilder5.setKeyDeserializer(objSerializableDeserializer6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = objBuilder7.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder7.setMaxUncommittedOffsets(100);
        int int11 = objBuilder7.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        objBuilder7.kafkaProps = strMap12;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams14 = objBuilder7.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder7.setOffsetCommitPeriodMs((long) 1);
        long long17 = objBuilder7.pollTimeoutMs;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertNotNull(objBuilder7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNull(kafkaSpoutStreams14);
        org.junit.Assert.assertNotNull(objBuilder16);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 32L + "'", long17 == 32L);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder8 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder8;
        int int10 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer12 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(objBuilderDeserializer12);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder0.kafkaSpoutStreams = kafkaSpoutStreams5;
        long long7 = objBuilder0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = objBuilder8.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder8.setValueDeserializer(serializableSerializableDeserializer10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer16);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer18 = objBuilder0.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder19 = null;
        objBuilder0.tuplesBuilder = objKafkaSpoutTuplesBuilder19;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer21 = null;
        objBuilder0.valueDeserializer = serializableSerializableDeserializer21;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = objBuilder0.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializableSerializableDeserializer9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(objSerializableDeserializer18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService23);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setOffsetCommitPeriodMs((long) 0);
        long long4 = objBuilder3.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilder3.kafkaSpoutStreams = kafkaSpoutStreams5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = objBuilder3.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = objBuilder3.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32L + "'", long4 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        int int5 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern6 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer9 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder10;
        java.util.regex.Pattern pattern12 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(pattern6);
        org.junit.Assert.assertNull(objBuilderDeserializer9);
        org.junit.Assert.assertNull(pattern12);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = objBuilderKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap10;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = objBuilderKafkaSpoutConfig0.getRetryService();
        long long3 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer4;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams6 = objBuilderKafkaSpoutConfig0.kafkaSpoutStreams;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams7 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams7;
        java.lang.Class<?> wildcardClass9 = objBuilderKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutStreams6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        objBuilder4.kafkaProps = strMap5;
        long long7 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder9 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        int int12 = objBuilder11.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        objBuilder11.kafkaProps = strMap13;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = objBuilder11.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder11.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder18 = null;
        objBuilder11.tuplesBuilder = objKafkaSpoutTuplesBuilder18;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams20 = objBuilder11.kafkaSpoutStreams;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(objBuilder9);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(serializableSerializableDeserializer15);
        org.junit.Assert.assertNotNull(objBuilder17);
        org.junit.Assert.assertNull(kafkaSpoutStreams20);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        int int2 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int3 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer5 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer5;
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder9 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder9;
        long long11 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long12 = objBuilderKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder20.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder20.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder20.setValueDeserializer(serializableSerializableDeserializer25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder20.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long29 = objBuilderKafkaSpoutConfig28.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder30 = null;
        objBuilderKafkaSpoutConfig28.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder30;
        int int32 = objBuilderKafkaSpoutConfig28.maxUncommittedOffsets;
        int int33 = objBuilderKafkaSpoutConfig28.maxUncommittedOffsets;
        long long34 = objBuilderKafkaSpoutConfig28.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = objBuilderKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long37 = objBuilderKafkaSpoutConfig36.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder38 = null;
        objBuilderKafkaSpoutConfig36.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder38;
        int int40 = objBuilderKafkaSpoutConfig36.maxUncommittedOffsets;
        int int41 = objBuilderKafkaSpoutConfig36.maxUncommittedOffsets;
        long long42 = objBuilderKafkaSpoutConfig36.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder45 = objBuilder43.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = objBuilder43.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig36.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        objBuilderKafkaSpoutConfig28.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder49 = objBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        objBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer51 = null;
        objBuilder18.keyDeserializer = objSerializableDeserializer51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder54 = objBuilder18.setMaxUncommittedOffsets((int) (short) 0);
        objBuilder18.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder58 = objBuilder18.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder60 = objBuilder18.setValueDeserializer(serializableSerializableDeserializer59);
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(objBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder49);
        org.junit.Assert.assertNotNull(objBuilder54);
        org.junit.Assert.assertNotNull(objBuilder58);
        org.junit.Assert.assertNotNull(objBuilder60);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder6.keyDeserializer;
        objBuilder6.maxUncommittedOffsets = ' ';
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilder6.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        objBuilder6.kafkaProps = strMap11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder6.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = objBuilder14.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder14.setValueDeserializer(serializableSerializableDeserializer16);
        long long18 = objBuilder17.pollTimeoutMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(objBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 32L + "'", long18 == 32L);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.List<java.lang.String> strList3 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams5 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams5;
        int int7 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap12 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long3 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder4 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder4;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder6 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder6;
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer9 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams12 = null;
        objBuilderKafkaSpoutConfig0.kafkaSpoutStreams = kafkaSpoutStreams12;
        long long14 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.List<java.lang.String> strList15 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long16 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService17;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(charSequenceDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str1 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer2 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer2;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer4 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        long long5 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str1, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertNull(objBuilderDeserializer4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.util.List<java.lang.String> strList1 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = objBuilderKafkaSpoutConfig0.getRetryService();
        int int4 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        objBuilderKafkaSpoutConfig0.pollTimeoutMs = 100L;
        int int7 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = null;
        objBuilderKafkaSpoutConfig0.keyDeserializer = objBuilderDeserializer8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap11 = objBuilderKafkaSpoutConfig0.setDefaultsAndGetKafkaProps(strMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        long long19 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams20 = null;
        objBuilder4.kafkaSpoutStreams = kafkaSpoutStreams20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder4.setOffsetCommitPeriodMs((long) 52);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        objBuilder23.kafkaProps = strMap24;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(objBuilder23);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy3;
        long long5 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList6 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.regex.Pattern pattern7 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer8 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = objBuilder11.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        java.lang.String str14 = objBuilderKafkaSpoutConfig13.toString();
        int int15 = objBuilderKafkaSpoutConfig13.getMaxUncommittedOffsets();
        int int16 = objBuilderKafkaSpoutConfig13.getMaxUncommittedOffsets();
        int int17 = objBuilderKafkaSpoutConfig13.getMaxUncommittedOffsets();
        long long18 = objBuilderKafkaSpoutConfig13.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        objBuilderKafkaSpoutConfig13.kafkaProps = strMap19;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder21.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = objBuilder21.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder21.setValueDeserializer(serializableSerializableDeserializer25);
        objBuilder26.pollTimeoutMs = 200L;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        objBuilder26.kafkaProps = strMap29;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = objBuilder26.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = objBuilder32.setPollTimeoutMs((long) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = objBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = objBuilder34.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder37 = objBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        objBuilderKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        objBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        objBuilderKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams45 = objBuilderKafkaSpoutConfig0.getKafkaSpoutStreams();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy3 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy3.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(pattern7);
        org.junit.Assert.assertNull(objBuilderDeserializer8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertNull(serializableSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNull(kafkaSpoutRetryService24);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertNull(objSerializableDeserializer31);
        org.junit.Assert.assertNotNull(objBuilder34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder37);
        org.junit.Assert.assertNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNull(kafkaSpoutStreams45);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList2 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer4 = null;
        objBuilderKafkaSpoutConfig0.valueDeserializer = charSequenceDeserializer4;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer7 = objBuilderKafkaSpoutConfig0.getKeyDeserializer();
        long long8 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder11 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder11;
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>> objBuilderDeserializer13 = objBuilderKafkaSpoutConfig0.keyDeserializer;
        java.util.List<java.lang.String> strList14 = objBuilderKafkaSpoutConfig0.getSubscribedTopics();
        long long15 = objBuilderKafkaSpoutConfig0.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = objBuilderKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(objBuilderDeserializer7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(objBuilderDeserializer13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) (byte) 0);
        objBuilder0.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long8 = objBuilderKafkaSpoutConfig7.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList9 = objBuilderKafkaSpoutConfig7.getSubscribedTopics();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = null;
        objBuilderKafkaSpoutConfig7.valueDeserializer = charSequenceDeserializer11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = objBuilderKafkaSpoutConfig7.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = objBuilderKafkaSpoutConfig7.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder15.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder19 = objBuilder15.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = objBuilder19.setValueDeserializer(serializableSerializableDeserializer20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder23 = objBuilder19.setKeyDeserializer(objSerializableDeserializer22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder26 = objBuilder24.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = objBuilder24.firstPollOffsetStrategy;
        objBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        objBuilderKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder30 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder31 = objBuilder30.tuplesBuilder;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder35 = objBuilder30.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService36 = objBuilder30.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder30.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = null;
        objBuilder38.retryService = kafkaSpoutRetryService39;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams41 = objBuilder38.kafkaSpoutStreams;
        objBuilder38.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long45 = objBuilderKafkaSpoutConfig44.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList46 = objBuilderKafkaSpoutConfig44.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig44.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer49 = objBuilderKafkaSpoutConfig44.valueDeserializer;
        long long50 = objBuilderKafkaSpoutConfig44.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder53 = objBuilder51.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = objBuilder51.firstPollOffsetStrategy;
        objBuilderKafkaSpoutConfig44.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        objBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(objBuilder19);
        org.junit.Assert.assertNotNull(objBuilder21);
        org.junit.Assert.assertNotNull(objBuilder23);
        org.junit.Assert.assertNotNull(objBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(objBuilder30);
        org.junit.Assert.assertNull(objKafkaSpoutTuplesBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder35);
        org.junit.Assert.assertNull(kafkaSpoutRetryService36);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertNull(kafkaSpoutStreams41);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(objBuilder53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = objBuilder4.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = objBuilder4.firstPollOffsetStrategy;
        objBuilder4.pollTimeoutMs = (byte) 1;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(objSerializableDeserializer16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setOffsetCommitPeriodMs((long) 100);
        objBuilder4.maxUncommittedOffsets = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder8 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilder8.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = objBuilder8.valueDeserializer;
        objBuilder8.offsetCommitPeriodMs = 52L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder14 = objBuilder8.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder16 = objBuilder14.setValueDeserializer(serializableSerializableDeserializer15);
        long long17 = objBuilder16.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(serializableSerializableDeserializer10);
        org.junit.Assert.assertNotNull(objBuilder14);
        org.junit.Assert.assertNotNull(objBuilder16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 52L + "'", long17 == 52L);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long1 = objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        int int4 = objBuilderKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.regex.Pattern pattern5 = objBuilderKafkaSpoutConfig0.getTopicWildcardPattern();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = objBuilderKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        objBuilderKafkaSpoutConfig0.kafkaProps = strMap7;
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = '#';
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        java.lang.String str13 = objBuilderKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        objBuilderKafkaSpoutConfig0.retryService = kafkaSpoutRetryService14;
        int int16 = objBuilderKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(pattern5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1L);
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 100;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = objBuilderKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder10 = objBuilderKafkaSpoutConfig0.getTuplesBuilder();
        java.lang.String str11 = objBuilderKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(objBuilderKafkaSpoutTuplesBuilder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, keyDeserializer=null, valueDeserializer=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, kafkaSpoutStreams=null, tuplesBuilder=null, retryService=null, topics=null, topicWildcardPattern=null}");
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder2 = objBuilder0.setMaxUncommittedOffsets(1);
        objBuilder2.maxUncommittedOffsets = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder2.setMaxUncommittedOffsets((int) ' ');
        objBuilder2.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder10 = objBuilder2.setOffsetCommitPeriodMs(0L);
        int int11 = objBuilder2.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        objBuilder2.retryService = kafkaSpoutRetryService12;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder15 = objBuilder2.setKeyDeserializer(objSerializableDeserializer14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder17 = objBuilder2.setKeyDeserializer(objSerializableDeserializer16);
        org.junit.Assert.assertNotNull(objBuilder2);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(objBuilder15);
        org.junit.Assert.assertNotNull(objBuilder17);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer1 = objBuilderKafkaSpoutConfig0.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutTuplesBuilder2 = null;
        objBuilderKafkaSpoutConfig0.tuplesBuilder = objBuilderKafkaSpoutTuplesBuilder2;
        long long4 = objBuilderKafkaSpoutConfig0.getPollTimeoutMs();
        objBuilderKafkaSpoutConfig0.offsetCommitPeriodMs = (-1L);
        objBuilderKafkaSpoutConfig0.maxUncommittedOffsets = (-1);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = objBuilderKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertNull(charSequenceDeserializer1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = objBuilder0.valueDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder3 = objBuilder0.setValueDeserializer(serializableSerializableDeserializer2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder5 = objBuilder3.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = objBuilder3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = objBuilder3.keyDeserializer;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        objBuilder3.keyDeserializer = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder3.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder3.setMaxUncommittedOffsets(0);
        long long14 = objBuilder13.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence> objBuilderKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>, java.lang.CharSequence>();
        long long16 = objBuilderKafkaSpoutConfig15.offsetCommitPeriodMs;
        java.util.List<java.lang.String> strList17 = objBuilderKafkaSpoutConfig15.getSubscribedTopics();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        objBuilderKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = objBuilderKafkaSpoutConfig15.valueDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = objBuilderKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        objBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder24 = objBuilder13.setPollTimeoutMs((long) (byte) -1);
        int int25 = objBuilder13.maxUncommittedOffsets;
        org.junit.Assert.assertNull(serializableSerializableDeserializer1);
        org.junit.Assert.assertNotNull(objBuilder3);
        org.junit.Assert.assertNotNull(objBuilder5);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy6 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy6.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setKeyDeserializer(objSerializableDeserializer17);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = objBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutTuplesBuilder<java.lang.Object, java.io.Serializable> objKafkaSpoutTuplesBuilder20 = null;
        objBuilder18.tuplesBuilder = objKafkaSpoutTuplesBuilder20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        objBuilder18.kafkaProps = strMap22;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder18.setKeyDeserializer(objSerializableDeserializer24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = objBuilder25.firstPollOffsetStrategy;
        objBuilder25.maxUncommittedOffsets = (byte) -1;
        long long29 = objBuilder25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = objBuilder25.keyDeserializer;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = objBuilder25.kafkaProps;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(objSerializableDeserializer30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder0.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = objBuilder0.setFirstPollOffsetStrategy(firstPollOffsetStrategy3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder6 = objBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder7.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder11 = objBuilder7.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder13 = objBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        long long15 = objBuilder4.offsetCommitPeriodMs;
        long long16 = objBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder18 = objBuilder4.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder20 = objBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder21.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder25 = objBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = objBuilder21.keyDeserializer;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder27.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder31 = objBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder33 = objBuilder31.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>();
        objBuilder34.offsetCommitPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder38 = objBuilder34.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder40 = objBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        objBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        objBuilder4.pollTimeoutMs = ' ';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder47 = objBuilder4.setKeyDeserializer(objSerializableDeserializer46);
        objBuilder47.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutStreams kafkaSpoutStreams50 = objBuilder47.kafkaSpoutStreams;
        long long51 = objBuilder47.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = objBuilder47.retryService;
        org.junit.Assert.assertNotNull(objBuilder4);
        org.junit.Assert.assertNotNull(objBuilder6);
        org.junit.Assert.assertNotNull(objBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(objBuilder18);
        org.junit.Assert.assertNotNull(objBuilder20);
        org.junit.Assert.assertNotNull(objBuilder25);
        org.junit.Assert.assertNull(objSerializableDeserializer26);
        org.junit.Assert.assertNotNull(objBuilder31);
        org.junit.Assert.assertNotNull(objBuilder33);
        org.junit.Assert.assertNotNull(objBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(objBuilder40);
        org.junit.Assert.assertNotNull(objBuilder47);
        org.junit.Assert.assertNull(kafkaSpoutStreams50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 32L + "'", long51 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService52);
    }
}
