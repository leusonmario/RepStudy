import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        com.metamx.druid.shard.ShardSpec shardSpec14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment16 = new com.metamx.druid.client.DataSegment("", interval1, "", strMap3, (java.util.List<java.lang.String>) strList7, (java.util.List<java.lang.String>) strList12, shardSpec14, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.lang.Class class0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger(class0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        com.metamx.druid.shard.ShardSpec shardSpec13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment15 = new com.metamx.druid.client.DataSegment("", interval1, "", strMap3, (java.util.List<java.lang.String>) strList6, (java.util.List<java.lang.String>) strList11, shardSpec13, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.model.S3Bucket s3Bucket2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray5 = restS3Service1.listObjects(s3Bucket2, "hi!", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.Jets3tProperties jets3tProperties3 = null;
        org.apache.commons.httpclient.HostConfiguration hostConfiguration4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "", credentialsProvider2, jets3tProperties3, hostConfiguration4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.model.S3Bucket s3Bucket2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket3 = restS3Service1.createBucket(s3Bucket2);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: Create Bucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        java.io.File file7 = new java.io.File("hi!");
        java.io.File file9 = new java.io.File(file7, "");
        boolean boolean11 = file7.setWritable(false);
        org.codehaus.jackson.type.JavaType javaType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable13 = objectMapper5.readValue(file7, javaType12);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file7.getParent() == null", file7.getParent());
        org.junit.Assert.assertEquals(file7.toString(), "hi!");
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.map.DeserializationConfig.Feature feature2 = null;
        org.codehaus.jackson.map.DeserializationConfig.Feature[] featureArray3 = new org.codehaus.jackson.map.DeserializationConfig.Feature[] { feature2 };
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enable(featureArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(featureArray3);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteObject("", "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = org.jets3t.service.S3Service.createSignedUrl("hi!", "hi!", "hi!", "", strMap4, providerCredentials5, (long) (byte) 100, true, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.type.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = objectMapper5.readValue("hi!", javaType7);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.JsonParseException; message: Unexpected character ('h' (code 104)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')? at [Source: java.io.StringReader@43be5d62; line: 1, column: 2]");
        } catch (org.codehaus.jackson.JsonParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.JsonGenerator jsonGenerator2 = null;
        java.io.File file4 = new java.io.File("hi!");
        java.io.File file6 = new java.io.File(file4, "");
        org.codehaus.jackson.map.SerializationConfig serializationConfig7 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(jsonGenerator2, (java.lang.Object) file4, serializationConfig7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNull("file4.getParent() == null", file4.getParent());
        org.junit.Assert.assertEquals(file4.toString(), "hi!");
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        byte[] byteArray4 = new byte[] { (byte) 1, (byte) 10, (byte) 10 };
        org.codehaus.jackson.type.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.StorageService storageService8 = objectMapper0.readValue(byteArray4, (-1), 100, javaType7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1, 10, 10]");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.model.StorageObject storageObject6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap8 = restS3Service1.moveObject("hi!", "", "hi!", storageObject6, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file2 = java.io.File.createTempFile("", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.BaseVersionOrDeleteMarker[] baseVersionOrDeleteMarkerArray5 = restS3Service1.getObjectVersions("hi!", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        java.io.InputStream inputStream2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode3 = objectMapper0.readTree(inputStream2);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema2 = null;
        org.codehaus.jackson.map.ObjectReader objectReader3 = objectMapper0.schemaBasedReader(formatSchema2);
        java.io.File file5 = new java.io.File("hi!");
        boolean boolean6 = file5.mkdirs();
        org.codehaus.jackson.type.TypeReference typeReference7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = objectMapper0.readValue(file5, typeReference7);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectReader3);
        org.junit.Assert.assertNull("file5.getParent() == null", file5.getParent());
        org.junit.Assert.assertEquals(file5.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        java.util.Date date5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = restS3Service1.createSignedHeadUrl("", "", date5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.S3Object s3Object7 = null;
        java.util.Calendar calendar9 = null;
        java.util.Calendar calendar10 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!", "" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "hi!", "" };
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap23 = restS3Service1.copyVersionedObject("", "", "", "hi!", s3Object7, true, calendar9, calendar10, strArray17, strArray22);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyVersionedObject");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        com.metamx.druid.client.DataSegment.delimiter = "";
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        java.io.InputStream inputStream2 = null;
        org.codehaus.jackson.type.JavaType javaType3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.loading.SegmentPusher segmentPusher4 = objectMapper0.readValue(inputStream2, javaType3);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.jets3t.service.acl.AccessControlList accessControlList8 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putVersionedObjectAcl("", "hi!", "hi!", accessControlList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.JsonParser jsonParser6 = null;
        org.codehaus.jackson.type.JavaType javaType7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = objectMapper5.readValue(jsonParser6, javaType7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.lang.String str2 = org.jets3t.service.S3Service.buildPostForm("", "hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>" + "'", str2, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.MultipartUpload multipartUpload3 = null;
        java.util.List<org.jets3t.service.model.MultipartPart> multipartPartList4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartCompleted multipartCompleted5 = restS3Service1.multipartCompleteUpload(multipartUpload3, multipartPartList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema2 = null;
        org.codehaus.jackson.map.ObjectReader objectReader3 = objectMapper0.schemaBasedReader(formatSchema2);
        java.io.File file5 = new java.io.File("hi!");
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(file5, (java.lang.Object) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectReader3);
        org.junit.Assert.assertNull("file5.getParent() == null", file5.getParent());
        org.junit.Assert.assertEquals(file5.toString(), "hi!");
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode7 = objectMapper5.readTree(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        java.io.File file2 = new java.io.File("hi!");
        boolean boolean3 = file2.mkdirs();
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode4 = objectMapper0.readTree(file2);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file2.getParent() == null", file2.getParent());
        org.junit.Assert.assertEquals(file2.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.model.S3Bucket s3Bucket3 = null;
        java.util.Calendar calendar5 = null;
        java.util.Calendar calendar6 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "hi!", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object18 = restS3Service1.getObject(s3Bucket3, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", calendar5, calendar6, strArray12, strArray15, (java.lang.Long) 10L, (java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Object cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.StorageObject storageObject4 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectMaybeAsMultipart("hi!", storageObject4, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.MultipartUpload multipartUpload3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartPart> multipartPartList4 = restS3Service1.multipartListParts(multipartUpload3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteWebsiteConfig("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        org.jets3t.service.model.StorageObject storageObject7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap9 = restS3Service1.moveObject("", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "", storageObject7, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.jets3t.service.model.StorageObject storageObject6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject7 = restS3Service1.putObject("", storageObject6);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Create Object in bucket  cannot be performed with an invalid object: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.metamx.druid.client.DataSegment dataSegment0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment.Builder builder1 = new com.metamx.druid.client.DataSegment.Builder(dataSegment0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.Jets3tProperties jets3tProperties3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "hi!", credentialsProvider2, jets3tProperties3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        com.metamx.druid.client.DataSegment.Builder builder4 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        com.metamx.druid.client.DataSegment.Builder builder9 = builder4.dimensions((java.util.List<java.lang.String>) strList7);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        com.metamx.druid.shard.ShardSpec shardSpec14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment16 = new com.metamx.druid.client.DataSegment("hi!", interval1, "hi!", strMap3, (java.util.List<java.lang.String>) strList7, (java.util.List<java.lang.String>) strList12, shardSpec14, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        com.metamx.druid.shard.ShardSpec shardSpec14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment16 = new com.metamx.druid.client.DataSegment("", interval1, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", strMap3, (java.util.List<java.lang.String>) strList6, (java.util.List<java.lang.String>) strList12, shardSpec14, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.net.URI uRI0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file1 = new java.io.File(uRI0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = restS3Service1.createSignedUrl("hi!", "", "", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", strMap9, providerCredentials10, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig1 = null;
        s3SegmentPusher0.config = s3SegmentPusherConfig1;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig6 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider4, deserializerProvider5, serializationConfig6, deserializationConfig7);
        s3SegmentPusher0.jsonMapper = objectMapper8;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        java.io.File file15 = new java.io.File("hi!");
        java.io.File file17 = new java.io.File(file15, "");
        java.lang.Class<?> wildcardClass18 = file15.getClass();
        org.codehaus.jackson.type.JavaType javaType19 = objectMapper13.constructType((java.lang.reflect.Type) wildcardClass18);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode20 = objectMapper8.readValue("", javaType19);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNull("file15.getParent() == null", file15.getParent());
        org.junit.Assert.assertEquals(file15.toString(), "hi!");
        org.junit.Assert.assertNull("file17.getParent() == null", file17.getParent());
        org.junit.Assert.assertEquals(file17.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(javaType19);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.BaseVersionOrDeleteMarker[] baseVersionOrDeleteMarkerArray8 = restS3Service1.listVersionedObjects("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>/?max-keys=1000&versions&prefix=%3Cform%20action%3D%22https%3A%2F%2F.s3.amazonaws.com%2F%22%20method%3D%22post%22%20enctype%3D%22multipart%2Fform-data%22%3E%0A%3Cinput%20type%3D%22hidden%22%20name%3D%22key%22%20value%3D%22hi%21%22%3E%0A%3Cinput%20name%3D%22file%22%20type%3D%22file%22%3E%0A%3Cbr%3E%0A%3Cinput%20type%3D%22submit%22%20value%3D%22Upload%20to%20Amazon%20S3%22%3E%0A%3C%2Fform%3E&delimiter=hi%21': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        boolean boolean6 = file1.isHidden();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.joda.time.DateTime dateTime1 = null;
        org.joda.time.DateTime dateTime2 = null;
        com.metamx.druid.shard.ShardSpec shardSpec4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = com.metamx.druid.client.DataSegment.makeDataSegmentIdentifier("hi!", dateTime1, dateTime2, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", shardSpec4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.JsonGenerator.Feature feature1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = objectMapper0.isEnabled(feature1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.StorageObject storageObject5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service1.renameObject("", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", storageObject5);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setRequesterPaysBucket("hi!", false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        java.lang.String str2 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("", "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\"\": \"s3.amazonaws.com\"}" + "'", str2, "{\"\": \"s3.amazonaws.com\"}");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object9 = restS3Service1.getObject("{\"\": \"s3.amazonaws.com\"}", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"\": \"s3.amazonaws.com\"}/hi%21': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        org.jets3t.service.model.StorageObject storageObject7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectMaybeAsMultipart("s3.amazonaws.com", storageObject7, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket5 = restS3Service1.getOrCreateBucket("hi!", "{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: Get or Create Bucket with location");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.util.Date date9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = restS3Service1.createSignedDeleteUrl("{\"\": \"s3.amazonaws.com\"}", "", date9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.io.File file3 = new java.io.File("hi!");
        java.io.File file5 = new java.io.File(file3, "");
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file6 = java.io.File.createTempFile("{\"\": \"s3.amazonaws.com\"}", "hi!", file5);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Permission denied");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertNull("file5.getParent() == null", file5.getParent());
        org.junit.Assert.assertEquals(file5.toString(), "hi!");
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList6 = restS3Service1.getObjectAcl("", "{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig1 = null;
        s3SegmentPusher0.config = s3SegmentPusherConfig1;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig6 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider4, deserializerProvider5, serializationConfig6, deserializationConfig7);
        s3SegmentPusher0.jsonMapper = objectMapper8;
        java.io.File file11 = new java.io.File("hi!");
        java.io.File file13 = new java.io.File(file11, "");
        boolean boolean15 = file11.setWritable(false);
        java.io.File file16 = file11.getParentFile();
        com.metamx.druid.client.DataSegment dataSegment17 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment18 = s3SegmentPusher0.push(file16, dataSegment17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
        org.junit.Assert.assertNull("file13.getParent() == null", file13.getParent());
        org.junit.Assert.assertEquals(file13.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.util.Date date9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = restS3Service1.createSignedGetUrl("s3.amazonaws.com", "", date9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory2 = objectMapper0.getNodeFactory();
        org.codehaus.jackson.JsonGenerator.Feature feature3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = objectMapper0.isEnabled(feature3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(jsonNodeFactory2);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        char char0 = java.io.File.separatorChar;
        org.junit.Assert.assertTrue("'" + char0 + "' != '" + '/' + "'", char0 == '/');
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteVersionedObject("hi!", "", "s3.amazonaws.com");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.File file4 = new java.io.File("hi!");
        java.io.File file6 = new java.io.File(file4, "");
        java.lang.Class<?> wildcardClass7 = file4.getClass();
        org.codehaus.jackson.type.JavaType javaType8 = objectMapper2.constructType((java.lang.reflect.Type) wildcardClass7);
        org.codehaus.jackson.map.SerializationConfig serializationConfig9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper2.setSerializationConfig(serializationConfig9);
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = objectMapper12.disableDefaultTyping();
        java.io.File file16 = new java.io.File("hi!");
        java.io.File file18 = new java.io.File(file16, "");
        java.lang.Class<?> wildcardClass19 = file16.getClass();
        org.codehaus.jackson.type.JavaType javaType20 = objectMapper14.constructType((java.lang.reflect.Type) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = objectMapper10.readValue("{\"\": \"s3.amazonaws.com\"}", javaType20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNull("file4.getParent() == null", file4.getParent());
        org.junit.Assert.assertEquals(file4.toString(), "hi!");
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(javaType8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNull("file16.getParent() == null", file16.getParent());
        org.junit.Assert.assertEquals(file16.toString(), "hi!");
        org.junit.Assert.assertNull("file18.getParent() == null", file18.getParent());
        org.junit.Assert.assertEquals(file18.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(javaType20);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = restS3Service1.getBucketLocation("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to parse XML document with handler class org.jets3t.service.impl.rest.XmlResponsesSaxParser$BucketLocationHandler");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2);
        java.io.Reader reader4 = null;
        org.codehaus.jackson.type.TypeReference typeReference5 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = objectMapper3.readValue(reader4, typeReference5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode7 = objectMapper6.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema8 = null;
        org.codehaus.jackson.map.ObjectReader objectReader9 = objectMapper6.schemaBasedReader(formatSchema8);
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode11 = objectMapper10.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema12 = null;
        org.codehaus.jackson.map.ObjectReader objectReader13 = objectMapper10.schemaBasedReader(formatSchema12);
        byte[] byteArray15 = objectMapper10.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode16 = objectMapper6.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.type.TypeReference typeReference17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.GenericDeclaration genericDeclaration18 = objectMapper5.readValue(jsonNode16, typeReference17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode7);
        org.junit.Assert.assertNotNull(objectReader9);
        org.junit.Assert.assertNotNull(objectNode11);
        org.junit.Assert.assertNotNull(objectReader13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode16);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        org.jets3t.service.acl.AccessControlList accessControlList9 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putVersionedObjectAcl("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "{\"\": \"s3.amazonaws.com\"}", accessControlList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        org.jets3t.service.model.MultipartUpload multipartUpload7 = null;
        org.jets3t.service.model.MultipartPart[] multipartPartArray8 = new org.jets3t.service.model.MultipartPart[] {};
        java.util.ArrayList<org.jets3t.service.model.MultipartPart> multipartPartList9 = new java.util.ArrayList<org.jets3t.service.model.MultipartPart>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.jets3t.service.model.MultipartPart>) multipartPartList9, multipartPartArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartCompleted multipartCompleted11 = restS3Service1.multipartCompleteUpload(multipartUpload7, (java.util.List<org.jets3t.service.model.MultipartPart>) multipartPartList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertNotNull(multipartPartArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.model.S3Bucket s3Bucket3 = null;
        org.jets3t.service.model.S3Object s3Object4 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAcl(s3Bucket3, s3Object4);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = restS3Service12.renameMetadataKeys(strMap13);
        org.jets3t.service.security.ProviderCredentials providerCredentials15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = restS3Service1.createSignedUrl("{\"\": \"s3.amazonaws.com\"}", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "", strMap13, providerCredentials15, (long) (byte) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.Jets3tProperties jets3tProperties3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "x-amz-meta-", credentialsProvider2, jets3tProperties3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder13 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder13.dimensions((java.util.List<java.lang.String>) strList16);
        com.metamx.druid.shard.ShardSpec shardSpec19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment21 = new com.metamx.druid.client.DataSegment("{\"\": \"s3.amazonaws.com\"}", interval1, "hi!", strMap6, (java.util.List<java.lang.String>) strList10, (java.util.List<java.lang.String>) strList16, shardSpec19, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.lang.String[] strArray9 = new java.lang.String[] { "x-amz-meta-", "http://s3.amazonaws.com//hi%21?torrent" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        com.metamx.druid.client.DataSegment.Builder builder17 = builder12.dimensions((java.util.List<java.lang.String>) strList15);
        com.metamx.druid.shard.ShardSpec shardSpec18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment20 = new com.metamx.druid.client.DataSegment("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", interval1, "http://s3.amazonaws.com//hi%21?torrent", strMap5, (java.util.List<java.lang.String>) strList10, (java.util.List<java.lang.String>) strList15, shardSpec18, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode8 = objectMapper7.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema9 = null;
        org.codehaus.jackson.map.ObjectReader objectReader10 = objectMapper7.schemaBasedReader(formatSchema9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode12 = objectMapper11.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema13 = null;
        org.codehaus.jackson.map.ObjectReader objectReader14 = objectMapper11.schemaBasedReader(formatSchema13);
        byte[] byteArray16 = objectMapper11.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode17 = objectMapper7.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser18 = objectMapper6.treeAsTokens(jsonNode17);
        org.codehaus.jackson.map.ObjectMapper.DefaultTyping defaultTyping19 = null;
        org.codehaus.jackson.annotate.JsonTypeInfo.As as20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper6.enableDefaultTyping(defaultTyping19, as20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectNode8);
        org.junit.Assert.assertNotNull(objectReader10);
        org.junit.Assert.assertNotNull(objectNode12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(jsonParser18);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        java.io.Reader reader9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode10 = objectMapper8.readTree(reader9);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.BaseVersionOrDeleteMarker[] baseVersionOrDeleteMarkerArray8 = restS3Service1.getObjectVersions("x-amz-meta-", "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.JsonGenerator jsonGenerator5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider9 = objectMapper6.getSerializerProvider();
        java.text.DateFormat dateFormat10 = null;
        objectMapper6.setDateFormat(dateFormat10);
        org.codehaus.jackson.node.ArrayNode arrayNode12 = objectMapper6.createArrayNode();
        org.codehaus.jackson.map.SerializationConfig serializationConfig13 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeTree(jsonGenerator5, (org.codehaus.jackson.JsonNode) arrayNode12, serializationConfig13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(serializerProvider9);
        org.junit.Assert.assertNotNull(arrayNode12);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.File file4 = new java.io.File("hi!");
        java.io.File file6 = new java.io.File(file4, "");
        java.lang.Class<?> wildcardClass7 = file4.getClass();
        org.codehaus.jackson.type.JavaType javaType8 = objectMapper2.constructType((java.lang.reflect.Type) wildcardClass7);
        org.codehaus.jackson.map.SerializationConfig serializationConfig9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper2.setSerializationConfig(serializationConfig9);
        org.codehaus.jackson.map.SerializationConfig.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objectMapper2.isEnabled(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNull("file4.getParent() == null", file4.getParent());
        org.junit.Assert.assertEquals(file4.toString(), "hi!");
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(javaType8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        int int0 = org.jets3t.service.StorageService.BUCKET_STATUS__DOES_NOT_EXIST;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str4 = restS3Service1.getDevPayProductToken();
        org.jets3t.service.model.S3BucketLoggingStatus s3BucketLoggingStatus6 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setBucketLoggingStatus("null", s3BucketLoggingStatus6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.WebsiteConfig websiteConfig7 = restS3Service1.getWebsiteConfig("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to parse XML document with handler class org.jets3t.service.impl.rest.XmlResponsesSaxParser$WebsiteConfigurationHandler");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        org.jets3t.service.model.S3Object s3Object7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object8 = restS3Service1.putObjectWithSignedUrl("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", s3Object7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str4 = restS3Service1.getDevPayProductToken();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.unsetNotificationConfig("http://s3.amazonaws.com//hi%21?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.joda.time.DateTime dateTime1 = null;
        org.joda.time.DateTime dateTime2 = null;
        com.metamx.druid.shard.ShardSpec shardSpec4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = com.metamx.druid.client.DataSegment.makeDataSegmentIdentifier("x-amz-meta-", dateTime1, dateTime2, "hi!", shardSpec4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service9.renameMetadataKeys(strMap10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = restS3Service1.createSignedUrl("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "", "null", strMap10, (long) '4', false, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.util.Calendar calendar7 = null;
        java.util.Calendar calendar8 = null;
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.String[] strArray13 = new java.lang.String[] { "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "x-amz-meta-", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object16 = restS3Service1.getVersionedObject("x-amz-meta-", "s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}", calendar7, calendar8, strArray9, strArray13, (java.lang.Long) (-1L), (java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.NotificationConfig notificationConfig9 = restS3Service1.getNotificationConfig("s3.amazonaws.com");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        java.util.Date date12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = restS3Service1.createSignedPutUrl("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "", strMap9, providerCredentials11, date12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList7 = restS3Service1.getObjectAclWithSignedUrl("{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"\": \"s3.amazonaws.com\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        java.util.Calendar calendar5 = null;
        java.util.Calendar calendar6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "x-amz-meta-" };
        java.lang.String[] strArray14 = new java.lang.String[] { "s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}", "{\"\": \"s3.amazonaws.com\"}", "x-amz-meta-", "{\"\": \"s3.amazonaws.com\"}" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject15 = restS3Service1.getObjectDetails("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "null", calendar5, calendar6, strArray8, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>/null': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0);
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper2.disableDefaultTyping();
        java.io.File file6 = new java.io.File("hi!");
        java.io.File file8 = new java.io.File(file6, "");
        java.lang.Class<?> wildcardClass9 = file6.getClass();
        org.codehaus.jackson.type.JavaType javaType10 = objectMapper4.constructType((java.lang.reflect.Type) wildcardClass9);
        org.codehaus.jackson.map.ObjectWriter objectWriter11 = objectMapper1.writerWithType(javaType10);
        org.codehaus.jackson.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = objectMapper1.isEnabled(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNull("file8.getParent() == null", file8.getParent());
        org.junit.Assert.assertEquals(file8.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(javaType10);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        org.jets3t.service.model.S3Bucket s3Bucket4 = null;
        org.jets3t.service.model.S3Object s3Object5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object6 = restS3Service1.putObject(s3Bucket4, s3Object5);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Create Object in bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.disableMFAForVersionedBucket("hi!", "", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        java.io.File file6 = file1.getParentFile();
        boolean boolean7 = file1.isFile();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.suspendBucketVersioning("hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        boolean boolean4 = file3.isHidden();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertEquals(file3.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file3.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucketPolicy("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        org.jets3t.service.model.StorageObject storageObject7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap9 = restS3Service1.copyObject("http://s3.amazonaws.com//hi%21?torrent", "null", "http://s3.amazonaws.com//hi%21?torrent", storageObject7, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject9 = restS3Service1.getObjectDetails("", "{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = restS3Service1.isObjectInBucket("hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.StorageObjectsChunk storageObjectsChunk11 = restS3Service1.listObjectsChunked("http://s3.amazonaws.com//hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}", "", (long) (byte) 100, "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.metamx.emitter.service.ServiceEmitter serviceEmitter0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.EmittingLogger.registerEmitter(serviceEmitter0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        org.jets3t.service.model.MultipartUpload multipartUpload10 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.multipartAbortUpload(multipartUpload10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.lang.String[] strArray13 = new java.lang.String[] { "http://s3.amazonaws.com//hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}", "x-amz-meta-", "s3.amazonaws.com", "hi!", "http://s3.amazonaws.com//?torrent" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        com.metamx.druid.client.DataSegment.Builder builder16 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        com.metamx.druid.client.DataSegment.Builder builder21 = builder16.dimensions((java.util.List<java.lang.String>) strList19);
        com.metamx.druid.shard.ShardSpec shardSpec22 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment24 = new com.metamx.druid.client.DataSegment("", interval1, "{\"\": \"s3.amazonaws.com\"}", strMap5, (java.util.List<java.lang.String>) strList14, (java.util.List<java.lang.String>) strList19, shardSpec22, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder13 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder13.dimensions((java.util.List<java.lang.String>) strList16);
        com.metamx.druid.shard.ShardSpec shardSpec19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment21 = new com.metamx.druid.client.DataSegment("x-amz-meta-", interval1, "", strMap6, (java.util.List<java.lang.String>) strList10, (java.util.List<java.lang.String>) strList16, shardSpec19, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        java.io.File file2 = new java.io.File("hi!");
        java.io.File file4 = new java.io.File(file2, "");
        com.metamx.druid.client.DataSegment dataSegment5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment6 = s3SegmentPusher0.push(file2, dataSegment5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file2.getParent() == null", file2.getParent());
        org.junit.Assert.assertEquals(file2.toString(), "hi!");
        org.junit.Assert.assertNull("file4.getParent() == null", file4.getParent());
        org.junit.Assert.assertEquals(file4.toString(), "hi!");
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.enableBucketVersioningAndMFA("s3.amazonaws.com");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = s3SegmentPusher5.jsonMapper;
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(objectMapper6);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        java.net.URL uRL11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = objectMapper12.disableDefaultTyping();
        java.io.File file16 = new java.io.File("hi!");
        java.io.File file18 = new java.io.File(file16, "");
        java.lang.Class<?> wildcardClass19 = file16.getClass();
        org.codehaus.jackson.type.JavaType javaType20 = objectMapper14.constructType((java.lang.reflect.Type) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.EmittingLogger emittingLogger21 = objectMapper8.readValue(uRL11, javaType20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNull("file16.getParent() == null", file16.getParent());
        org.junit.Assert.assertEquals(file16.toString(), "hi!");
        org.junit.Assert.assertNull("file18.getParent() == null", file18.getParent());
        org.junit.Assert.assertEquals(file18.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(javaType20);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray8 = restS3Service1.listObjects(s3Bucket5, "x-amz-meta-", "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket[] s3BucketArray6 = restS3Service1.listAllBuckets();
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: List all buckets");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket[] s3BucketArray6 = restS3Service1.listAllBuckets();
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: List all buckets");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "hi!", credentialsProvider2);
        org.jets3t.service.model.StorageObject storageObject7 = null;
        java.util.Calendar calendar9 = null;
        java.util.Calendar calendar10 = null;
        java.lang.String[] strArray11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "x-amz-meta-" };
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap14 = restS3Service3.copyObject("hi!", "null", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", storageObject7, false, calendar9, calendar10, strArray11, strArray13);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.model.S3Bucket s3Bucket3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray4 = restS3Service1.listObjects(s3Bucket3);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setBucketPolicy("s3.amazonaws.com", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object9 = restS3Service1.getVersionedObjectDetails("", "null", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Request Error.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        java.util.Date date9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = restS3Service1.createSignedDeleteUrl("null", "x-amz-meta-", date9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig1 = null;
        s3SegmentPusher0.config = s3SegmentPusherConfig1;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig6 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider4, deserializerProvider5, serializationConfig6, deserializationConfig7);
        s3SegmentPusher0.jsonMapper = objectMapper8;
        org.codehaus.jackson.JsonGenerator.Feature feature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = objectMapper8.isEnabled(feature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.lang.String str2 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "x-amz-meta-");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}" + "'", str2, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}");
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        char char0 = java.io.File.pathSeparatorChar;
        org.junit.Assert.assertTrue("'" + char0 + "' != '" + ':' + "'", char0 == ':');
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.annotate.JsonMethod jsonMethod9 = null;
        org.codehaus.jackson.annotate.JsonAutoDetect.Visibility visibility10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper8.setVisibility(jsonMethod9, visibility10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode8 = objectMapper7.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema9 = null;
        org.codehaus.jackson.map.ObjectReader objectReader10 = objectMapper7.schemaBasedReader(formatSchema9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode12 = objectMapper11.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema13 = null;
        org.codehaus.jackson.map.ObjectReader objectReader14 = objectMapper11.schemaBasedReader(formatSchema13);
        byte[] byteArray16 = objectMapper11.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode17 = objectMapper7.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser18 = objectMapper6.treeAsTokens(jsonNode17);
        org.codehaus.jackson.map.Module module19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper6.withModule(module19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectNode8);
        org.junit.Assert.assertNotNull(objectReader10);
        org.junit.Assert.assertNotNull(objectNode12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(jsonParser18);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.Writer writer3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = restS3Service5.getProviderCredentials();
        java.lang.String str7 = restS3Service5.getInvokingApplicationDescription();
        java.lang.String str10 = restS3Service5.createTorrentUrl("http://s3.amazonaws.com//?torrent", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(writer3, (java.lang.Object) restS3Service5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNull(providerCredentials6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent" + "'", str10, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.lang.String str2 = org.jets3t.service.S3Service.generatePostPolicyCondition_Range((int) ':', (int) (short) 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[\"content-length-range\", 58, 1]" + "'", str2, "[\"content-length-range\", 58, 1]");
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.lang.String str3 = org.jets3t.service.S3Service.generatePostPolicyCondition("", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "null");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]" + "'", str3, "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        org.jets3t.service.model.NotificationConfig notificationConfig11 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setNotificationConfig("http://s3.amazonaws.com//hi%21?torrent", notificationConfig11);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Unable to build NotificationConfig XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.jets3t.service.model.S3Object s3Object9 = null;
        java.util.Calendar calendar11 = null;
        java.util.Calendar calendar12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "x-amz-meta-", "", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent" };
        java.lang.String[] strArray21 = new java.lang.String[] { "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "http://s3.amazonaws.com//hi%21?torrent", "" };
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap22 = restS3Service1.copyVersionedObject("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "x-amz-meta-", "http://s3.amazonaws.com//?torrent", "s3.amazonaws.com", s3Object9, false, calendar11, calendar12, strArray17, strArray21);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyVersionedObject");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "hi!", credentialsProvider2);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject6 = restS3Service3.getObjectDetails("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}/': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper8.writeValue(writer11, (java.lang.Object) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not pass null serializerFactory");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        org.jets3t.service.model.MultipartUpload multipartUpload16 = null;
        org.jets3t.service.model.MultipartPart[] multipartPartArray17 = new org.jets3t.service.model.MultipartPart[] {};
        java.util.ArrayList<org.jets3t.service.model.MultipartPart> multipartPartList18 = new java.util.ArrayList<org.jets3t.service.model.MultipartPart>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jets3t.service.model.MultipartPart>) multipartPartList18, multipartPartArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartCompleted multipartCompleted20 = restS3Service1.multipartCompleteUpload(multipartUpload16, (java.util.List<org.jets3t.service.model.MultipartPart>) multipartPartList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertNotNull(multipartPartArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        org.codehaus.jackson.annotate.JsonMethod jsonMethod11 = null;
        org.codehaus.jackson.annotate.JsonAutoDetect.Visibility visibility12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper8.setVisibility(jsonMethod11, visibility12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        org.jets3t.service.model.S3Bucket s3Bucket16 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket(s3Bucket16);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Delete bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        org.jets3t.service.model.StorageObject storageObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap18 = restS3Service1.copyObject("{\"\": \"s3.amazonaws.com\"}", "null", "[\"content-length-range\", 58, 1]", storageObject16, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.Jets3tProperties jets3tProperties3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "", credentialsProvider2, jets3tProperties3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.lang.String[] strArray12 = new java.lang.String[] { "http://s3.amazonaws.com//hi%21?torrent", "null", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.lang.String[] strArray19 = new java.lang.String[] { "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "null", "s3.amazonaws.com", "http://s3.amazonaws.com//?torrent" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        com.metamx.druid.shard.ShardSpec shardSpec22 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment24 = new com.metamx.druid.client.DataSegment("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", interval1, "null", strMap5, (java.util.List<java.lang.String>) strList13, (java.util.List<java.lang.String>) strList20, shardSpec22, (long) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.lang.String[] strArray15 = new java.lang.String[] { "[\"content-length-range\", 58, 1]", "s3.amazonaws.com", "null", "http://s3.amazonaws.com//hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}", "http://s3.amazonaws.com//?torrent", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "[\"content-length-range\", 58, 1]" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.jets3t.service.security.ProviderCredentials providerCredentials18 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service19 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials18);
        org.jets3t.service.security.ProviderCredentials providerCredentials20 = restS3Service19.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager21 = null;
        restS3Service19.setHttpConnectionManager(httpConnectionManager21);
        java.util.List<java.lang.String> strList23 = restS3Service19.getResourceParameterNames();
        com.metamx.druid.shard.ShardSpec shardSpec24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment26 = new com.metamx.druid.client.DataSegment("", interval1, "s3.amazonaws.com", strMap6, (java.util.List<java.lang.String>) strList16, strList23, shardSpec24, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(providerCredentials20);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider9 = objectMapper6.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory5, serializerProvider9, deserializerProvider10);
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode13 = objectMapper12.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema14 = null;
        org.codehaus.jackson.map.ObjectReader objectReader15 = objectMapper12.schemaBasedReader(formatSchema14);
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode17 = objectMapper16.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema18 = null;
        org.codehaus.jackson.map.ObjectReader objectReader19 = objectMapper16.schemaBasedReader(formatSchema18);
        byte[] byteArray21 = objectMapper16.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode22 = objectMapper12.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser23 = objectMapper11.treeAsTokens(jsonNode22);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode24 = objectMapper0.readTree(jsonParser23);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: Unexpected token (VALUE_NUMBER_INT), expected START_ARRAY: need JSON Array to contain As.WRAPPER_ARRAY type information for class org.codehaus.jackson.JsonNode? at [Source: N/A; line: -1, column: -1]");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(serializerProvider9);
        org.junit.Assert.assertNotNull(objectNode13);
        org.junit.Assert.assertNotNull(objectReader15);
        org.junit.Assert.assertNotNull(objectNode17);
        org.junit.Assert.assertNotNull(objectReader19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode22);
        org.junit.Assert.assertNotNull(jsonParser23);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        java.io.File file6 = file1.getParentFile();
        java.io.File file8 = new java.io.File("hi!");
        java.io.File file10 = new java.io.File(file8, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        boolean boolean11 = file8.delete();
        int int12 = file1.compareTo(file8);
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull("file8.getParent() == null", file8.getParent());
        org.junit.Assert.assertEquals(file8.toString(), "hi!");
        org.junit.Assert.assertEquals(file10.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file10.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
// flaky:         org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        boolean boolean7 = restS3Service1.isAuthenticatedConnection();
        org.jets3t.service.acl.AccessControlList accessControlList9 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAclWithSignedUrl("{\"\": \"s3.amazonaws.com\"}", accessControlList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"\": \"s3.amazonaws.com\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.VersionOrDeleteMarkersChunk versionOrDeleteMarkersChunk12 = restS3Service1.listVersionedObjectsChunked("s3.amazonaws.com", "hi!", "x-amz-meta-", (long) ':', "null", "x-amz-meta-", false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.lang.String str0 = java.io.File.separator;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "/" + "'", str0, "/");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        org.jets3t.service.security.ProviderCredentials providerCredentials18 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service19 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = restS3Service19.renameMetadataKeys(strMap20);
        java.util.Date date22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = restS3Service1.createSignedPutUrl("x-amz-meta-", "x-amz-meta-", strMap21, date22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.StorageObjectsChunk storageObjectsChunk12 = restS3Service1.listObjectsChunked("http://s3.amazonaws.com//?torrent", "hi!", "null", 10L, "", false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.jets3t.service.security.ProviderCredentials providerCredentials9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = restS3Service10.renameMetadataKeys(strMap11);
        java.util.Date date13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = restS3Service1.createSignedPutUrl("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "null", strMap12, date13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider13 = objectMapper12.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper14.disableDefaultTyping();
        java.lang.Object obj17 = null;
        java.lang.String str18 = objectMapper14.writeValueAsString(obj17);
        com.metamx.druid.client.DataSegment.Builder builder19 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder19.dimensions((java.util.List<java.lang.String>) strList22);
        com.metamx.emitter.EmittingLogger emittingLogger26 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray28 = new java.lang.Object[] { objectMapper4, deserializerProvider13, objectMapper14, strList22, emittingLogger26, (byte) 1 };
        emittingLogger1.error(throwable2, "{\"\": \"s3.amazonaws.com\"}", objArray28);
        boolean boolean30 = emittingLogger1.isInfoEnabled();
        com.metamx.emitter.EmittingLogger emittingLogger33 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable34 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = objectMapper36.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = objectMapper36.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory39 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider40 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider41 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig42 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig43 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory39, serializerProvider40, deserializerProvider41, serializationConfig42, deserializationConfig43);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider45 = objectMapper44.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper46 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = objectMapper46.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper46.disableDefaultTyping();
        java.lang.Object obj49 = null;
        java.lang.String str50 = objectMapper46.writeValueAsString(obj49);
        com.metamx.druid.client.DataSegment.Builder builder51 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        com.metamx.druid.client.DataSegment.Builder builder56 = builder51.dimensions((java.util.List<java.lang.String>) strList54);
        com.metamx.emitter.EmittingLogger emittingLogger58 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray60 = new java.lang.Object[] { objectMapper36, deserializerProvider45, objectMapper46, strList54, emittingLogger58, (byte) 1 };
        emittingLogger33.error(throwable34, "{\"\": \"s3.amazonaws.com\"}", objArray60);
        java.lang.Throwable throwable62 = null;
        java.io.File file65 = new java.io.File("hi!");
        java.io.File file67 = new java.io.File(file65, "");
        java.io.File file68 = file65.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper69 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode70 = objectMapper69.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory71 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper72 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = objectMapper72.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper74 = objectMapper72.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider75 = objectMapper72.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider76 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper77 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory71, serializerProvider75, deserializerProvider76);
        org.jets3t.service.security.ProviderCredentials providerCredentials78 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service79 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials78);
        org.jets3t.service.security.ProviderCredentials providerCredentials80 = restS3Service79.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager81 = null;
        restS3Service79.setHttpConnectionManager(httpConnectionManager81);
        java.lang.Object[] objArray85 = new java.lang.Object[] { file68, objectMapper69, objectMapper77, restS3Service79, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger33.info(throwable62, "", objArray85);
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.service.AlertBuilder alertBuilder87 = emittingLogger1.makeAlert("", objArray85);
            org.junit.Assert.fail("Expected exception of type com.metamx.common.ISE; message: Emitter not initialized!  Cannot alert.  Please make sure to call class com.metamx.emitter.EmittingLogger.registerEmitter()");
        } catch (com.metamx.common.ISE e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializerProvider13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "null" + "'", str18, "null");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(deserializerProvider45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "null" + "'", str50, "null");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNull("file65.getParent() == null", file65.getParent());
        org.junit.Assert.assertEquals(file65.toString(), "hi!");
        org.junit.Assert.assertNull("file67.getParent() == null", file67.getParent());
        org.junit.Assert.assertEquals(file67.toString(), "hi!");
        org.junit.Assert.assertNotNull(file68);
// flaky:         org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode70);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(serializerProvider75);
        org.junit.Assert.assertNull(providerCredentials80);
        org.junit.Assert.assertNotNull(objArray85);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema2 = null;
        org.codehaus.jackson.map.ObjectReader objectReader3 = objectMapper0.schemaBasedReader(formatSchema2);
        byte[] byteArray5 = objectMapper0.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.FormatSchema formatSchema6 = null;
        org.codehaus.jackson.map.ObjectReader objectReader7 = objectMapper0.reader(formatSchema6);
        java.io.Reader reader8 = null;
        org.codehaus.jackson.type.TypeReference typeReference9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.common.logger.Logger logger10 = objectMapper0.readValue(reader8, typeReference9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectReader3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[49, 48]");
        org.junit.Assert.assertNotNull(objectReader7);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.io.File file1 = new java.io.File("hi!");
        boolean boolean2 = file1.setReadOnly();
        boolean boolean3 = file1.isHidden();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "hi!", credentialsProvider2);
        org.jets3t.service.model.S3Bucket s3Bucket4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object6 = restS3Service3.getObjectDetails(s3Bucket4, "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action getObjectDetails cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        boolean boolean7 = restS3Service1.isAuthenticatedConnection();
        java.util.Calendar calendar11 = null;
        java.util.Calendar calendar12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "http://s3.amazonaws.com//hi%21?torrent" };
        java.lang.String[] strArray18 = new java.lang.String[] { "http://s3.amazonaws.com//?torrent", "s3.amazonaws.com", "/" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object19 = restS3Service1.getVersionedObjectDetails("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "hi!", "s3.amazonaws.com", calendar11, calendar12, strArray14, strArray18);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Request Error.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.map.DeserializationConfig.Feature[] featureArray5 = new org.codehaus.jackson.map.DeserializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper0.enable(featureArray5);
        byte[] byteArray13 = new byte[] { (byte) 10, (byte) 1, (byte) 100, (byte) -1, (byte) 100, (byte) 0 };
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode14 = objectMapper0.readTree(byteArray13);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.JsonParseException; message: Illegal character ((CTRL-CHAR, code 1)): only regular white space (\\r, \\n, \\t) is allowed between tokens? at [Source: [B@1c8aa1bb; line: 2, column: 2]");
        } catch (org.codehaus.jackson.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(featureArray5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 1, 100, -1, 100, 0]");
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        java.util.Date date18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = restS3Service1.createSignedHeadUrl("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "hi!", date18, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        org.jets3t.service.model.MultipartUpload multipartUpload4 = null;
        org.jets3t.service.model.S3Object s3Object6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartPart multipartPart7 = restS3Service1.multipartUploadPart(multipartUpload4, (java.lang.Integer) 1, s3Object6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str4 = restS3Service1.getDevPayProductToken();
        org.jets3t.service.model.StorageObject storageObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service1.copyObject("hi!", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "http://s3.amazonaws.com//?torrent", storageObject8, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray11 = restS3Service1.listObjects("null");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        java.io.File file14 = new java.io.File("hi!");
        java.io.File file16 = new java.io.File(file14, "");
        boolean boolean18 = file14.setWritable(false);
        boolean boolean19 = file14.delete();
        com.metamx.druid.client.DataSegment dataSegment20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment21 = s3SegmentPusher12.push(file14, dataSegment20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNull("file14.getParent() == null", file14.getParent());
        org.junit.Assert.assertEquals(file14.toString(), "hi!");
        org.junit.Assert.assertNull("file16.getParent() == null", file16.getParent());
        org.junit.Assert.assertEquals(file16.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = restS3Service1.isObjectInBucket("http://s3.amazonaws.com//hi%21?torrent", "[\"content-length-range\", 58, 1]");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.File file4 = new java.io.File("hi!");
        java.io.File file6 = new java.io.File(file4, "");
        java.lang.Class<?> wildcardClass7 = file4.getClass();
        org.codehaus.jackson.type.JavaType javaType8 = objectMapper2.constructType((java.lang.reflect.Type) wildcardClass7);
        org.codehaus.jackson.map.SerializationConfig serializationConfig9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper2.setSerializationConfig(serializationConfig9);
        org.codehaus.jackson.map.ObjectMapper.DefaultTyping defaultTyping11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper10.enableDefaultTyping(defaultTyping11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNull("file4.getParent() == null", file4.getParent());
        org.junit.Assert.assertEquals(file4.toString(), "hi!");
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(javaType8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.S3Object s3Object7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAcl("[\"content-length-range\", 58, 1]", s3Object7);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Object Access Control List cannot be performed with an invalid object: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.model.StorageObject storageObject5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service1.renameObject("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "/", storageObject5);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket("{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"\": \"s3.amazonaws.com\"}/': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2);
        org.codehaus.jackson.JsonGenerator jsonGenerator4 = null;
        org.codehaus.jackson.JsonFactory jsonFactory5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider9 = objectMapper6.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory5, serializerProvider9, deserializerProvider10);
        org.codehaus.jackson.map.jsontype.SubtypeResolver subtypeResolver12 = null;
        objectMapper11.setSubtypeResolver(subtypeResolver12);
        org.codehaus.jackson.JsonFactory jsonFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper15.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper15.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider18 = objectMapper15.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory14, serializerProvider18, deserializerProvider19);
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode22 = objectMapper21.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema23 = null;
        org.codehaus.jackson.map.ObjectReader objectReader24 = objectMapper21.schemaBasedReader(formatSchema23);
        org.codehaus.jackson.map.ObjectMapper objectMapper25 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode26 = objectMapper25.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema27 = null;
        org.codehaus.jackson.map.ObjectReader objectReader28 = objectMapper25.schemaBasedReader(formatSchema27);
        byte[] byteArray30 = objectMapper25.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode31 = objectMapper21.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser32 = objectMapper20.treeAsTokens(jsonNode31);
        org.codehaus.jackson.JsonNode jsonNode33 = objectMapper11.readTree(jsonParser32);
        org.codehaus.jackson.map.SerializationConfig serializationConfig34 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper3.writeTree(jsonGenerator4, jsonNode33, serializationConfig34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(serializerProvider9);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializerProvider18);
        org.junit.Assert.assertNotNull(objectNode22);
        org.junit.Assert.assertNotNull(objectReader24);
        org.junit.Assert.assertNotNull(objectNode26);
        org.junit.Assert.assertNotNull(objectReader28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(jsonParser32);
        org.junit.Assert.assertNotNull(jsonNode33);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        java.util.Calendar calendar9 = null;
        java.util.Calendar calendar10 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "[\"content-length-range\", 58, 1]", "/", "/", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "hi!" };
        java.lang.String[] strArray18 = new java.lang.String[] { "s3.amazonaws.com" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject19 = restS3Service1.getObjectDetails("s3.amazonaws.com", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", calendar9, calendar10, strArray16, strArray18);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        org.jets3t.service.model.StorageBucket storageBucket7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageBucket storageBucket8 = restS3Service1.createBucket(storageBucket7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3);
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper5.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper5.disableDefaultTyping();
        java.io.File file9 = new java.io.File("hi!");
        java.io.File file11 = new java.io.File(file9, "");
        java.lang.Class<?> wildcardClass12 = file9.getClass();
        org.codehaus.jackson.type.JavaType javaType13 = objectMapper7.constructType((java.lang.reflect.Type) wildcardClass12);
        org.codehaus.jackson.map.ObjectWriter objectWriter14 = objectMapper4.writerWithType(javaType13);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode15 = objectMapper0.readValue("", javaType13);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), "hi!");
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(javaType13);
        org.junit.Assert.assertNotNull(objectWriter14);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray8 = restS3Service1.listObjects("", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}", (long) (-1));
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to parse XML document with handler class org.jets3t.service.impl.rest.XmlResponsesSaxParser$ListBucketHandler");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder14 = builder12.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder16 = builder14.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder17 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        com.metamx.druid.client.DataSegment.Builder builder22 = builder17.dimensions((java.util.List<java.lang.String>) strList20);
        com.metamx.druid.client.DataSegment.Builder builder23 = builder16.metrics((java.util.List<java.lang.String>) strList20);
        org.jets3t.service.security.ProviderCredentials providerCredentials24 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service25 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials24);
        org.jets3t.service.security.ProviderCredentials providerCredentials26 = restS3Service25.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager27 = null;
        restS3Service25.setHttpConnectionManager(httpConnectionManager27);
        java.util.List<java.lang.String> strList29 = restS3Service25.getResourceParameterNames();
        com.metamx.druid.shard.ShardSpec shardSpec30 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment32 = new com.metamx.druid.client.DataSegment("", interval1, "", strMap5, (java.util.List<java.lang.String>) strList20, strList29, shardSpec30, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(providerCredentials26);
        org.junit.Assert.assertNotNull(strList29);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("null");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.lang.String[] strArray20 = new java.lang.String[] { "x-amz-meta-", "null", "x-amz-meta-", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "[\"content-length-range\", 58, 1]", "null", "http://s3.amazonaws.com//hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}", "http://s3.amazonaws.com//hi%21?torrent", "hi!", "/", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.jets3t.service.security.ProviderCredentials providerCredentials23 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service24 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials23);
        org.jets3t.service.security.ProviderCredentials providerCredentials25 = restS3Service24.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager26 = null;
        restS3Service24.setHttpConnectionManager(httpConnectionManager26);
        java.util.List<java.lang.String> strList28 = restS3Service24.getResourceParameterNames();
        com.metamx.druid.shard.ShardSpec shardSpec29 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment31 = new com.metamx.druid.client.DataSegment("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", interval1, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", strMap5, (java.util.List<java.lang.String>) strList21, strList28, shardSpec29, (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(providerCredentials25);
        org.junit.Assert.assertNotNull(strList28);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        org.jets3t.service.Jets3tProperties jets3tProperties8 = restS3Service4.getJetS3tProperties();
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", credentialsProvider2, jets3tProperties8);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service9.setRequesterPaysBucket("http://s3.amazonaws.com//?torrent", true);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(jets3tProperties8);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        boolean boolean7 = restS3Service1.isAuthenticatedConnection();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = restS3Service1.checkBucketStatus("hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.map.DeserializationConfig.Feature[] featureArray5 = new org.codehaus.jackson.map.DeserializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper0.enable(featureArray5);
        com.google.common.base.Joiner joiner8 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        com.metamx.emitter.EmittingLogger emittingLogger10 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Throwable throwable11 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials13);
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode16 = objectMapper15.createObjectNode();
        java.lang.Object[] objArray17 = new java.lang.Object[] { providerCredentials13, objectMapper15 };
        emittingLogger10.info(throwable11, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", objArray17);
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper19.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper19.disableDefaultTyping();
        java.io.File file23 = new java.io.File("hi!");
        java.io.File file25 = new java.io.File(file23, "");
        java.lang.Class<?> wildcardClass26 = file23.getClass();
        org.codehaus.jackson.type.JavaType javaType27 = objectMapper21.constructType((java.lang.reflect.Type) wildcardClass26);
        com.metamx.emitter.EmittingLogger emittingLogger29 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable30 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper33 = objectMapper32.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper32.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory35 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider36 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider37 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig38 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig39 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory35, serializerProvider36, deserializerProvider37, serializationConfig38, deserializationConfig39);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider41 = objectMapper40.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = objectMapper42.disableDefaultTyping();
        java.lang.Object obj45 = null;
        java.lang.String str46 = objectMapper42.writeValueAsString(obj45);
        com.metamx.druid.client.DataSegment.Builder builder47 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        com.metamx.druid.client.DataSegment.Builder builder52 = builder47.dimensions((java.util.List<java.lang.String>) strList50);
        com.metamx.emitter.EmittingLogger emittingLogger54 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray56 = new java.lang.Object[] { objectMapper32, deserializerProvider41, objectMapper42, strList50, emittingLogger54, (byte) 1 };
        emittingLogger29.error(throwable30, "{\"\": \"s3.amazonaws.com\"}", objArray56);
        java.lang.Throwable throwable58 = null;
        java.io.File file61 = new java.io.File("hi!");
        java.io.File file63 = new java.io.File(file61, "");
        java.io.File file64 = file61.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper65 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode66 = objectMapper65.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory67 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper68 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper69 = objectMapper68.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper70 = objectMapper68.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider71 = objectMapper68.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider72 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory67, serializerProvider71, deserializerProvider72);
        org.jets3t.service.security.ProviderCredentials providerCredentials74 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service75 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials74);
        org.jets3t.service.security.ProviderCredentials providerCredentials76 = restS3Service75.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager77 = null;
        restS3Service75.setHttpConnectionManager(httpConnectionManager77);
        java.lang.Object[] objArray81 = new java.lang.Object[] { file64, objectMapper65, objectMapper73, restS3Service75, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger29.info(throwable58, "", objArray81);
        java.lang.String str83 = joiner8.join((java.lang.Object) emittingLogger10, (java.lang.Object) javaType27, objArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ClassIntrospector.MixInResolver mixInResolver84 = objectMapper0.readValue("hi!", javaType27);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.JsonParseException; message: Unexpected character ('h' (code 104)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')? at [Source: java.io.StringReader@26c99805; line: 1, column: 2]");
        } catch (org.codehaus.jackson.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(featureArray5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(joiner8);
        org.junit.Assert.assertNotNull(objectNode16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull("file23.getParent() == null", file23.getParent());
        org.junit.Assert.assertEquals(file23.toString(), "hi!");
        org.junit.Assert.assertNull("file25.getParent() == null", file25.getParent());
        org.junit.Assert.assertEquals(file25.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(javaType27);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(deserializerProvider41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "null" + "'", str46, "null");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull("file61.getParent() == null", file61.getParent());
        org.junit.Assert.assertEquals(file61.toString(), "hi!");
        org.junit.Assert.assertNull("file63.getParent() == null", file63.getParent());
        org.junit.Assert.assertEquals(file63.toString(), "hi!");
        org.junit.Assert.assertNotNull(file64);
// flaky:         org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode66);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertNotNull(serializerProvider71);
        org.junit.Assert.assertNull(providerCredentials76);
        org.junit.Assert.assertNotNull(objArray81);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.util.List<java.lang.String> strList5 = restS3Service1.getResourceParameterNames();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.VersionOrDeleteMarkersChunk versionOrDeleteMarkersChunk13 = restS3Service1.listVersionedObjectsChunked("http://s3.amazonaws.com//?torrent", "/", "null", (long) ' ', "s3.amazonaws.com", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory2 = objectMapper0.getNodeFactory();
        org.codehaus.jackson.FormatSchema formatSchema3 = null;
        org.codehaus.jackson.map.ObjectReader objectReader4 = objectMapper0.reader(formatSchema3);
        org.codehaus.jackson.JsonGenerator jsonGenerator5 = null;
        java.lang.Object obj6 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig7 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(jsonGenerator5, obj6, serializationConfig7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(jsonNodeFactory2);
        org.junit.Assert.assertNotNull(objectReader4);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = s3SegmentPusher0.s3Client;
        org.junit.Assert.assertNull(restS3Service1);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.Reader reader3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode4 = objectMapper2.readTree(reader3);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.google.common.base.Joiner joiner0 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        java.lang.StringBuilder stringBuilder1 = null;
        org.codehaus.jackson.JsonFactory jsonFactory2 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider3 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider4 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig5 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory2, serializerProvider3, deserializerProvider4, serializationConfig5, deserializationConfig6);
        org.codehaus.jackson.map.ObjectWriter objectWriter8 = objectMapper7.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper7.setDeserializationConfig(deserializationConfig9);
        com.metamx.druid.client.DataSegment.Builder builder11 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder13 = builder11.size(0L);
        org.joda.time.Interval interval14 = null;
        com.metamx.druid.client.DataSegment.Builder builder15 = builder13.interval(interval14);
        com.metamx.emitter.EmittingLogger emittingLogger17 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable18 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper20.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory23 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider24 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider25 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig26 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig27 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory23, serializerProvider24, deserializerProvider25, serializationConfig26, deserializationConfig27);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider29 = objectMapper28.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = objectMapper30.disableDefaultTyping();
        java.lang.Object obj33 = null;
        java.lang.String str34 = objectMapper30.writeValueAsString(obj33);
        com.metamx.druid.client.DataSegment.Builder builder35 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        com.metamx.druid.client.DataSegment.Builder builder40 = builder35.dimensions((java.util.List<java.lang.String>) strList38);
        com.metamx.emitter.EmittingLogger emittingLogger42 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray44 = new java.lang.Object[] { objectMapper20, deserializerProvider29, objectMapper30, strList38, emittingLogger42, (byte) 1 };
        emittingLogger17.error(throwable18, "{\"\": \"s3.amazonaws.com\"}", objArray44);
        java.lang.Throwable throwable46 = null;
        java.io.File file49 = new java.io.File("hi!");
        java.io.File file51 = new java.io.File(file49, "");
        java.io.File file52 = file49.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper53 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode54 = objectMapper53.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory55 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper56 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper57 = objectMapper56.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper58 = objectMapper56.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider59 = objectMapper56.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider60 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper61 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory55, serializerProvider59, deserializerProvider60);
        org.jets3t.service.security.ProviderCredentials providerCredentials62 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service63 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials62);
        org.jets3t.service.security.ProviderCredentials providerCredentials64 = restS3Service63.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager65 = null;
        restS3Service63.setHttpConnectionManager(httpConnectionManager65);
        java.lang.Object[] objArray69 = new java.lang.Object[] { file52, objectMapper53, objectMapper61, restS3Service63, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger17.info(throwable46, "", objArray69);
        org.codehaus.jackson.map.ObjectMapper objectMapper72 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = objectMapper72.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper74 = objectMapper72.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider75 = objectMapper72.getSerializerProvider();
        java.text.DateFormat dateFormat76 = null;
        objectMapper72.setDateFormat(dateFormat76);
        org.codehaus.jackson.node.ArrayNode arrayNode78 = objectMapper72.createArrayNode();
        com.metamx.druid.client.DataSegment.Builder builder79 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder81 = builder79.size(0L);
        java.lang.Object[] objArray82 = new java.lang.Object[] { objectMapper72, builder79 };
        emittingLogger17.trace("null", objArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuilder stringBuilder84 = joiner0.appendTo(stringBuilder1, (java.lang.Object) objectMapper7, (java.lang.Object) interval14, objArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(joiner0);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(deserializerProvider29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "null" + "'", str34, "null");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull("file49.getParent() == null", file49.getParent());
        org.junit.Assert.assertEquals(file49.toString(), "hi!");
        org.junit.Assert.assertNull("file51.getParent() == null", file51.getParent());
        org.junit.Assert.assertEquals(file51.toString(), "hi!");
        org.junit.Assert.assertNotNull(file52);
// flaky:         org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode54);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(serializerProvider59);
        org.junit.Assert.assertNull(providerCredentials64);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(serializerProvider75);
        org.junit.Assert.assertNotNull(arrayNode78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(objArray82);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        java.lang.String str1 = org.jets3t.service.S3Service.generatePostPolicyCondition_AllowAnyValue("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]" + "'", str1, "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]");
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartUpload> multipartUploadList12 = restS3Service1.multipartListUploads("{\"\": \"s3.amazonaws.com\"}", "null", "x-amz-meta-", (java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"\": \"s3.amazonaws.com\"}/?max-uploads=0&upload-id-marker=x-amz-meta-&key-marker=null&uploads': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean4 = file1.isFile();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        org.jets3t.service.model.S3BucketLoggingStatus s3BucketLoggingStatus7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setBucketLoggingStatus("hi!", s3BucketLoggingStatus7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.util.Calendar calendar5 = null;
        java.util.Calendar calendar6 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "x-amz-meta-", "http://s3.amazonaws.com//?torrent", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "x-amz-meta-", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}" };
        java.lang.String[] strArray16 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}", "x-amz-meta-" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object19 = restS3Service1.getObject("[\"content-length-range\", 58, 1]", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", calendar5, calendar6, strArray13, strArray16, (java.lang.Long) 100L, (java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"content-length-range\", 58, 1]/%3Cform%20action%3D%22https%3A%2F%2F.s3.amazonaws.com%2F%22%20method%3D%22post%22%20enctype%3D%22multipart%2Fform-data%22%3E%0A%3Cinput%20type%3D%22hidden%22%20name%3D%22key%22%20value%3D%22hi%21%22%3E%0A%3Cinput%20name%3D%22file%22%20type%3D%22file%22%3E%0A%3Cbr%3E%0A%3Cinput%20type%3D%22submit%22%20value%3D%22Upload%20to%20Amazon%20S3%22%3E%0A%3C%2Fform%3E': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = restS3Service1.createSignedUrl("x-amz-meta-", "x-amz-meta-", "null", "/", strMap10, providerCredentials11, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.google.common.base.Joiner joiner0 = null;
        com.metamx.druid.loading.S3SegmentPusher.JOINER = joiner0;
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.ObjectWriter objectWriter6 = objectMapper5.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider7 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter8 = objectMapper5.writer(filterProvider7);
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setAnnotationIntrospector(annotationIntrospector10);
        java.lang.Object obj12 = null;
        byte[] byteArray13 = objectMapper11.writeValueAsBytes(obj12);
        org.codehaus.jackson.type.TypeReference typeReference16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement annotatedElement17 = objectMapper5.readValue(byteArray13, (int) '#', (int) (short) 1, typeReference16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[110, 117, 108, 108]");
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        java.io.File file6 = file1.getParentFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file7 = file6.getParentFile();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode17 = objectMapper14.readTree("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.JsonParseException; message: Unexpected character ('<' (code 60)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')? at [Source: java.io.StringReader@557fdfad; line: 1, column: 2]");
        } catch (org.codehaus.jackson.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager7 = restS3Service1.getHttpConnectionManager();
        java.util.Date date10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = restS3Service1.createSignedDeleteUrl("{\"\": \"s3.amazonaws.com\"}", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", date10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(httpConnectionManager7);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.enableBucketVersioning("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager7 = restS3Service1.getHttpConnectionManager();
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = null;
        java.util.Date date11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = restS3Service1.createSignedDeleteUrl("x-amz-meta-", "http://s3.amazonaws.com//?torrent", providerCredentials10, date11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(httpConnectionManager7);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.disableMFAForVersionedBucket("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "/", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        org.codehaus.jackson.map.SerializationConfig.Feature feature17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = objectMapper12.isEnabled(feature17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = restS3Service1.createSignedUrl("", "{\"\": \"s3.amazonaws.com\"}", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", strMap10, providerCredentials11, (long) 4, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray8 = restS3Service1.listObjects(s3Bucket5, "/", "/");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList6 = restS3Service1.getObjectAcl("", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray13 = restS3Service1.listObjects("s3.amazonaws.com", "", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        org.jets3t.service.model.S3Object s3Object7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object8 = restS3Service1.putObject(s3Bucket6, s3Object7);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Create Object in bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider3 = objectMapper0.getSerializerProvider();
        org.codehaus.jackson.JsonParser.Feature feature4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = objectMapper0.isEnabled(feature4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(serializerProvider3);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = restS3Service1.createSignedUrl("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "http://s3.amazonaws.com//?torrent", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "http://s3.amazonaws.com//?torrent", strMap10, providerCredentials11, (long) ':', true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.suspendBucketVersioningWithMFA("s3.amazonaws.com", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "s3.amazonaws.com");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The value of metadata item x-amz-mfa cannot be represented as an HTTP header for the REST S3 interface: [\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"] s3.amazonaws.com");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object9 = restS3Service1.getVersionedObjectDetails("hi!", "x-amz-meta-", "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Request Error.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = restS3Service5.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager7 = null;
        restS3Service5.setHttpConnectionManager(httpConnectionManager7);
        java.util.List<java.lang.String> strList9 = restS3Service5.getResourceParameterNames();
        java.lang.String[] strArray25 = new java.lang.String[] { "/", "null", "http://s3.amazonaws.com//hi%21?torrent", "[\"content-length-range\", 58, 1]", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "x-amz-meta-", "x-amz-meta-", "/", "null", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "[\"content-length-range\", 58, 1]", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "x-amz-meta-", "/", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        com.metamx.druid.shard.ShardSpec shardSpec28 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment30 = new com.metamx.druid.client.DataSegment("/", interval1, "http://s3.amazonaws.com//hi%21?torrent", strMap3, strList9, (java.util.List<java.lang.String>) strList26, shardSpec28, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials6);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.util.List<java.lang.String> strList7 = null;
        com.metamx.druid.client.DataSegment.Builder builder8 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        com.metamx.druid.client.DataSegment.Builder builder13 = builder8.dimensions((java.util.List<java.lang.String>) strList11);
        com.metamx.druid.shard.ShardSpec shardSpec14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment16 = new com.metamx.druid.client.DataSegment("s3.amazonaws.com", interval1, "http://s3.amazonaws.com//?torrent", strMap5, strList7, (java.util.List<java.lang.String>) strList11, shardSpec14, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteVersionedObject("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        java.io.File file15 = new java.io.File("hi!");
        java.io.File file17 = new java.io.File(file15, "");
        java.lang.Class<?> wildcardClass18 = file15.getClass();
        org.codehaus.jackson.type.JavaType javaType19 = objectMapper13.constructType((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = objectMapper8.canDeserialize(javaType19);
        java.io.File file22 = new java.io.File("hi!");
        java.io.File file24 = new java.io.File(file22, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.codehaus.jackson.map.ObjectMapper objectMapper25 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper27 = objectMapper25.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray28 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper25.enable(featureArray28);
        // The following exception was thrown during execution in test generation
{ // flaky:         try {
// flaky:             objectMapper8.writeValue(file22, (java.lang.Object) objectMapper29);
// flaky:             org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (Is a directory)");
// flaky:         } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNull("file15.getParent() == null", file15.getParent());
        org.junit.Assert.assertEquals(file15.toString(), "hi!");
        org.junit.Assert.assertNull("file17.getParent() == null", file17.getParent());
        org.junit.Assert.assertEquals(file17.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(javaType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull("file22.getParent() == null", file22.getParent());
        org.junit.Assert.assertEquals(file22.toString(), "hi!");
        org.junit.Assert.assertEquals(file24.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file24.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(featureArray28);
        org.junit.Assert.assertNotNull(objectMapper29);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object16 = restS3Service1.getVersionedObject("[\"content-length-range\", 58, 1]", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]/&versionId=%5B%22content-length-range%22%2C%2058%2C%201%5D': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        org.jets3t.service.model.S3Object s3Object7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putVersionedObjectAcl("null", s3Bucket6, s3Object7);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Versioned Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        java.lang.String str4 = file3.getName();
        java.net.URL uRL5 = file3.toURL();
        boolean boolean6 = file3.isHidden();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(uRL5);
// flaky:         org.junit.Assert.assertEquals(uRL5.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!/");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        java.io.File file18 = new java.io.File("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.node.ObjectNode objectNode19 = objectMapper12.valueToTree((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: Cannot cast org.codehaus.jackson.node.TextNode to org.codehaus.jackson.node.ObjectNode");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNull("file18.getParent() == null", file18.getParent());
        org.junit.Assert.assertEquals(file18.toString(), "hi!");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = restS3Service5.renameMetadataKeys(strMap6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = org.jets3t.service.S3Service.createSignedUrl("", "", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "[\"content-length-range\", 58, 1]", strMap7, providerCredentials8, (long) (byte) -1, true, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        java.util.Date date8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = restS3Service1.createSignedDeleteUrl("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "[\"content-length-range\", 58, 1]", date8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        org.jets3t.service.model.StorageBucket storageBucket16 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket(storageBucket16);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Delete bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory2 = objectMapper0.getNodeFactory();
        org.codehaus.jackson.FormatSchema formatSchema3 = null;
        org.codehaus.jackson.map.ObjectReader objectReader4 = objectMapper0.reader(formatSchema3);
        org.codehaus.jackson.JsonGenerator jsonGenerator5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode7 = objectMapper6.createObjectNode();
        org.codehaus.jackson.map.SerializationConfig serializationConfig8 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeTree(jsonGenerator5, (org.codehaus.jackson.JsonNode) objectNode7, serializationConfig8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(jsonNodeFactory2);
        org.junit.Assert.assertNotNull(objectReader4);
        org.junit.Assert.assertNotNull(objectNode7);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service0 = null;
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig1 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher3 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service0, s3SegmentPusherConfig1, objectMapper2);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig4 = s3SegmentPusher3.config;
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig5 = null;
        s3SegmentPusher3.config = s3SegmentPusherConfig5;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = s3SegmentPusher3.jsonMapper;
        org.junit.Assert.assertNull(s3SegmentPusherConfig4);
        org.junit.Assert.assertNull(objectMapper7);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        java.io.File file7 = new java.io.File("hi!");
        boolean boolean8 = file7.canRead();
        java.io.File file10 = new java.io.File("hi!");
        java.io.File file12 = new java.io.File(file10, "");
        boolean boolean13 = file7.renameTo(file12);
        com.metamx.druid.client.DataSegment dataSegment14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment15 = s3SegmentPusher5.push(file12, dataSegment14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull("file7.getParent() == null", file7.getParent());
        org.junit.Assert.assertEquals(file7.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull("file10.getParent() == null", file10.getParent());
        org.junit.Assert.assertEquals(file10.toString(), "hi!");
        org.junit.Assert.assertNull("file12.getParent() == null", file12.getParent());
        org.junit.Assert.assertEquals(file12.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager7 = restS3Service1.getHttpConnectionManager();
        org.jets3t.service.model.S3Bucket s3Bucket8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray11 = restS3Service1.listObjects(s3Bucket8, "hi!", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(httpConnectionManager7);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.acl.AccessControlList accessControlList6 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putBucketAcl("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", accessControlList6);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The bucket '[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"]' does not include ACL information");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object8 = restS3Service1.getObjectDetails(s3Bucket6, "/");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action getObjectDetails cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.StorageObject storageObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap9 = restS3Service1.renameObject("[\"content-length-range\", 58, 1]", "hi!", storageObject8);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        java.util.Date date13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = restS3Service1.createSignedDeleteUrl("hi!", "[\"content-length-range\", 58, 1]", providerCredentials12, date13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.util.List<java.lang.String> strList5 = restS3Service1.getResourceParameterNames();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket8 = restS3Service1.getOrCreateBucket("null", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: Get or Create Bucket with location");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.lang.String str0 = java.io.File.pathSeparator;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + ":" + "'", str0, ":");
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.ObjectWriter objectWriter6 = objectMapper5.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider7 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter8 = objectMapper5.writer(filterProvider7);
        org.codehaus.jackson.annotate.JsonMethod jsonMethod9 = null;
        org.codehaus.jackson.annotate.JsonAutoDetect.Visibility visibility10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper5.setVisibility(jsonMethod9, visibility10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectWriter8);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.PrettyPrinter prettyPrinter1 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter2 = objectMapper0.prettyPrintingWriter(prettyPrinter1);
        java.io.Reader reader3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode4 = objectMapper0.readTree(reader3);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter2);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        com.metamx.druid.client.DataSegment.delimiter = "x-amz-meta-";
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        java.util.Date date5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = restS3Service1.createSignedHeadUrl("null", ":", date5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        java.io.File file6 = new java.io.File("hi!");
        java.io.File file8 = new java.io.File(file6, "");
        long long9 = file6.length();
        com.metamx.druid.client.DataSegment.Builder builder10 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials11);
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = restS3Service12.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager14 = null;
        restS3Service12.setHttpConnectionManager(httpConnectionManager14);
        java.util.List<java.lang.String> strList16 = restS3Service12.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder17 = builder10.dimensions(strList16);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(file6, (java.lang.Object) strList16);
// flaky:             org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNull("file8.getParent() == null", file8.getParent());
        org.junit.Assert.assertEquals(file8.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 4096L + "'", long9 == 4096L);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(providerCredentials13);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        boolean boolean6 = file1.delete();
        boolean boolean9 = file1.setWritable(true, false);
        java.lang.String str10 = file1.toString();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.ObjectWriter objectWriter6 = objectMapper5.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper5.setDeserializationConfig(deserializationConfig7);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.acl.AccessControlList accessControlList4 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAcl(":", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", accessControlList4);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The object '[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"]' does not include ACL information");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder14 = builder12.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder16 = builder14.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder17 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        com.metamx.druid.client.DataSegment.Builder builder22 = builder17.dimensions((java.util.List<java.lang.String>) strList20);
        com.metamx.druid.client.DataSegment.Builder builder23 = builder16.metrics((java.util.List<java.lang.String>) strList20);
        java.lang.String[] strArray38 = new java.lang.String[] { "null", "", "/", "x-amz-meta-", "null", "hi!", "http://s3.amazonaws.com//?torrent", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}", "hi!", "null", "null" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        com.metamx.druid.shard.ShardSpec shardSpec41 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment43 = new com.metamx.druid.client.DataSegment("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", interval1, ":", strMap5, (java.util.List<java.lang.String>) strList20, (java.util.List<java.lang.String>) strList39, shardSpec41, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        com.metamx.druid.client.DataSegment.Builder builder4 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        com.metamx.druid.client.DataSegment.Builder builder9 = builder4.dimensions((java.util.List<java.lang.String>) strList7);
        com.metamx.druid.client.DataSegment.Builder builder11 = builder9.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder13 = builder11.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder14 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        com.metamx.druid.client.DataSegment.Builder builder19 = builder14.dimensions((java.util.List<java.lang.String>) strList17);
        com.metamx.druid.client.DataSegment.Builder builder20 = builder13.metrics((java.util.List<java.lang.String>) strList17);
        java.lang.String[] strArray23 = new java.lang.String[] { "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        com.metamx.druid.shard.ShardSpec shardSpec26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment28 = new com.metamx.druid.client.DataSegment("x-amz-meta-", interval1, "http://s3.amazonaws.com//hi%21?torrent", strMap3, (java.util.List<java.lang.String>) strList17, (java.util.List<java.lang.String>) strList24, shardSpec26, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        boolean boolean5 = restS3Service1.isShutdown();
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray7 = restS3Service1.listObjects(s3Bucket6);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.JsonFactory jsonFactory1 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider5 = objectMapper2.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory6 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig9 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory6, serializerProvider7, deserializerProvider8, serializationConfig9, deserializationConfig10);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = objectMapper11.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig13 = null;
        org.codehaus.jackson.JsonFactory jsonFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper15.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper15.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider18 = objectMapper15.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory14, serializerProvider18, deserializerProvider19);
        org.codehaus.jackson.map.SerializerFactory serializerFactory21 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper20.setSerializerFactory(serializerFactory21);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig23 = objectMapper20.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper24 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory1, serializerProvider5, deserializerProvider12, serializationConfig13, deserializationConfig23);
        org.codehaus.jackson.JsonFactory jsonFactory25 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper26 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = objectMapper26.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider29 = objectMapper26.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory30 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider31 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider32 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig33 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig34 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory30, serializerProvider31, deserializerProvider32, serializationConfig33, deserializationConfig34);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider36 = objectMapper35.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig37 = null;
        org.codehaus.jackson.JsonFactory jsonFactory38 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = objectMapper39.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper41 = objectMapper39.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider42 = objectMapper39.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider43 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory38, serializerProvider42, deserializerProvider43);
        org.codehaus.jackson.map.SerializerFactory serializerFactory45 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper46 = objectMapper44.setSerializerFactory(serializerFactory45);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig47 = objectMapper44.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory25, serializerProvider29, deserializerProvider36, serializationConfig37, deserializationConfig47);
        org.codehaus.jackson.map.ObjectMapper objectMapper49 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider5, deserializerProvider36);
        java.io.InputStream inputStream50 = null;
        org.codehaus.jackson.type.TypeReference typeReference51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.schema.JsonSchema jsonSchema52 = objectMapper49.readValue(inputStream50, typeReference51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(serializerProvider5);
        org.junit.Assert.assertNotNull(deserializerProvider12);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializerProvider18);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(deserializationConfig23);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(serializerProvider29);
        org.junit.Assert.assertNotNull(deserializerProvider36);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(serializerProvider42);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(deserializationConfig47);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        java.util.List<java.lang.String> strList7 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = restS3Service9.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager11 = null;
        restS3Service9.setHttpConnectionManager(httpConnectionManager11);
        java.util.List<java.lang.String> strList13 = restS3Service9.getResourceParameterNames();
        com.metamx.druid.shard.ShardSpec shardSpec14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment16 = new com.metamx.druid.client.DataSegment("hi!", interval1, "s3.amazonaws.com", strMap6, strList7, strList13, shardSpec14, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(providerCredentials10);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str4 = restS3Service1.getDevPayProductToken();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList7 = restS3Service1.getObjectAcl("s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        boolean boolean4 = restS3Service1.isShutdown();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartUpload> multipartUploadList9 = restS3Service1.multipartListUploads("", "http://s3.amazonaws.com//?torrent", "/", (java.lang.Integer) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The bucket name parameter must be specified when listing multipart uploads");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig13 = null;
        s3SegmentPusher12.config = s3SegmentPusherConfig13;
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig15 = null;
        s3SegmentPusher12.config = s3SegmentPusherConfig15;
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "s3.amazonaws.com", credentialsProvider2);
        org.apache.commons.httpclient.HttpMethod httpMethod4 = null;
        restS3Service3.authorizeHttpRequest(httpMethod4);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service3.enableBucketVersioningWithMFA("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "x-amz-meta-", "null");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str6 = restS3Service1.createTorrentUrl("http://s3.amazonaws.com//?torrent", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList8 = restS3Service1.getBucketAcl("[\"content-length-range\", 58, 1]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"content-length-range\", 58, 1]/?acl': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent" + "'", str6, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpClient httpClient3 = restS3Service1.getHttpClient();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteObjectWithSignedUrl("{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"\": \"s3.amazonaws.com\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(httpClient3);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.model.S3Bucket s3Bucket3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket4 = restS3Service1.createBucket(s3Bucket3);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: Create Bucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        org.jets3t.service.security.ProviderCredentials providerCredentials15 = null;
        java.util.Date date16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = restS3Service1.createSignedGetUrl(":", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", providerCredentials15, date16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        org.jets3t.service.Jets3tProperties jets3tProperties8 = restS3Service4.getJetS3tProperties();
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", credentialsProvider2, jets3tProperties8);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service9.deleteVersionedObjectWithMFA("null", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "[\"content-length-range\", 58, 1]", "http://s3.amazonaws.com//?torrent", "/");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(jets3tProperties8);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "s3.amazonaws.com", credentialsProvider2);
        org.apache.commons.httpclient.HttpMethod httpMethod4 = null;
        restS3Service3.authorizeHttpRequest(httpMethod4);
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service3.deleteBucket(s3Bucket6);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Delete bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig9 = objectMapper6.copyDeserializationConfig();
        java.io.File file11 = new java.io.File("hi!");
        java.io.File file13 = new java.io.File(file11, "");
        java.lang.String str14 = file13.getName();
        java.net.URL uRL15 = file13.toURL();
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode16 = objectMapper6.readTree(uRL15);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(deserializationConfig9);
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
        org.junit.Assert.assertNull("file13.getParent() == null", file13.getParent());
        org.junit.Assert.assertEquals(file13.toString(), "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(uRL15);
// flaky:         org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.google.common.base.Joiner joiner0 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        java.io.File file2 = new java.io.File("hi!");
        java.io.File file4 = new java.io.File(file2, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        boolean boolean5 = file2.createNewFile();
        org.codehaus.jackson.JsonFactory jsonFactory6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper7.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper7.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = objectMapper7.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory6, serializerProvider10, deserializerProvider11);
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = objectMapper12.setAnnotationIntrospector(annotationIntrospector13);
        java.text.DateFormat dateFormat15 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter16 = objectMapper12.writer(dateFormat15);
        java.lang.Object[] objArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = joiner0.join((java.lang.Object) boolean5, (java.lang.Object) dateFormat15, objArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(joiner0);
        org.junit.Assert.assertNull("file2.getParent() == null", file2.getParent());
        org.junit.Assert.assertEquals(file2.toString(), "hi!");
        org.junit.Assert.assertEquals(file4.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file4.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(serializerProvider10);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectWriter16);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        boolean boolean5 = restS3Service1.isShutdown();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object8 = restS3Service1.getObject("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]/null': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setBucketPolicy("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}/&policy': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.disableMFAForVersionedBucket("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "/", "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        java.lang.String str8 = restS3Service1.createTorrentUrl("s3.amazonaws.com", "");
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket11 = restS3Service1.createBucket("null", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: createBucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" + "'", str8, "http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object18 = restS3Service1.getObject("null", ":");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        java.lang.String str8 = restS3Service1.createTorrentUrl("s3.amazonaws.com", "");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteObjectWithSignedUrl("hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error: java.lang.IllegalArgumentException: host parameter is null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" + "'", str8, "http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.google.common.base.Joiner joiner1 = com.google.common.base.Joiner.on("http://s3.amazonaws.com//?torrent");
        java.lang.StringBuilder stringBuilder2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode4 = objectMapper3.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema5 = null;
        org.codehaus.jackson.map.ObjectReader objectReader6 = objectMapper3.schemaBasedReader(formatSchema5);
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode8 = objectMapper7.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema9 = null;
        org.codehaus.jackson.map.ObjectReader objectReader10 = objectMapper7.schemaBasedReader(formatSchema9);
        byte[] byteArray12 = objectMapper7.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode13 = objectMapper3.valueToTree((java.lang.Object) 10L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuilder stringBuilder14 = joiner1.appendTo(stringBuilder2, (java.lang.Iterable<org.codehaus.jackson.JsonNode>) jsonNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(joiner1);
        org.junit.Assert.assertNotNull(objectNode4);
        org.junit.Assert.assertNotNull(objectReader6);
        org.junit.Assert.assertNotNull(objectNode8);
        org.junit.Assert.assertNotNull(objectReader10);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode13);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        java.lang.String str8 = restS3Service1.createTorrentUrl("s3.amazonaws.com", "");
        org.jets3t.service.model.StorageObject storageObject12 = null;
        java.util.Calendar calendar14 = null;
        java.util.Calendar calendar15 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "null", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>" };
        java.lang.String[] strArray21 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap22 = restS3Service1.copyObject("http://s3.amazonaws.com//hi%21?torrent", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "/", storageObject12, false, calendar14, calendar15, strArray20, strArray21);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" + "'", str8, "http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.jets3t.service.Jets3tProperties jets3tProperties5 = restS3Service1.getJetS3tProperties();
        org.jets3t.service.model.S3Bucket s3Bucket7 = null;
        org.jets3t.service.model.S3Object s3Object8 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putVersionedObjectAcl("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", s3Bucket7, s3Object8);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Versioned Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(jets3tProperties5);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0);
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper2.disableDefaultTyping();
        java.io.File file6 = new java.io.File("hi!");
        java.io.File file8 = new java.io.File(file6, "");
        java.lang.Class<?> wildcardClass9 = file6.getClass();
        org.codehaus.jackson.type.JavaType javaType10 = objectMapper4.constructType((java.lang.reflect.Type) wildcardClass9);
        org.codehaus.jackson.map.ObjectWriter objectWriter11 = objectMapper1.writerWithType(javaType10);
        java.io.File file13 = new java.io.File("hi!");
        java.io.File file15 = new java.io.File(file13, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        boolean boolean16 = file13.delete();
        org.codehaus.jackson.JsonFactory jsonFactory17 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper18.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider21 = objectMapper18.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider22 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory17, serializerProvider21, deserializerProvider22);
        org.codehaus.jackson.map.SerializerFactory serializerFactory24 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper25 = objectMapper23.setSerializerFactory(serializerFactory24);
        org.codehaus.jackson.PrettyPrinter prettyPrinter26 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter27 = objectMapper25.prettyPrintingWriter(prettyPrinter26);
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper28.disableDefaultTyping();
        java.io.File file32 = new java.io.File("hi!");
        java.io.File file34 = new java.io.File(file32, "");
        java.lang.Class<?> wildcardClass35 = file32.getClass();
        org.codehaus.jackson.type.JavaType javaType36 = objectMapper30.constructType((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = objectMapper25.canDeserialize(javaType36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.String> strCollection38 = objectMapper1.readValue(file13, javaType36);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNull("file8.getParent() == null", file8.getParent());
        org.junit.Assert.assertEquals(file8.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(javaType10);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNull("file13.getParent() == null", file13.getParent());
        org.junit.Assert.assertEquals(file13.toString(), "hi!");
        org.junit.Assert.assertEquals(file15.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file15.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNull("file32.getParent() == null", file32.getParent());
        org.junit.Assert.assertEquals(file32.toString(), "hi!");
        org.junit.Assert.assertNull("file34.getParent() == null", file34.getParent());
        org.junit.Assert.assertEquals(file34.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(javaType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service18 = s3SegmentPusher17.s3Client;
        java.io.File file20 = new java.io.File("hi!");
        java.io.File file22 = new java.io.File(file20, "");
        java.lang.String str23 = file22.getName();
        java.net.URL uRL24 = file22.toURL();
        boolean boolean25 = file22.mkdir();
        com.metamx.druid.client.DataSegment dataSegment26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment27 = s3SegmentPusher17.push(file22, dataSegment26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(restS3Service18);
        org.junit.Assert.assertNull("file20.getParent() == null", file20.getParent());
        org.junit.Assert.assertEquals(file20.toString(), "hi!");
        org.junit.Assert.assertNull("file22.getParent() == null", file22.getParent());
        org.junit.Assert.assertEquals(file22.toString(), "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(uRL24);
// flaky:         org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        org.jets3t.service.model.S3Object s3Object6 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putVersionedObjectAcl("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", s3Bucket5, s3Object6);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Versioned Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder12 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        com.metamx.druid.client.DataSegment.Builder builder17 = builder12.dimensions((java.util.List<java.lang.String>) strList15);
        com.metamx.druid.client.DataSegment.Builder builder19 = builder17.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder21 = builder19.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder22 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        com.metamx.druid.client.DataSegment.Builder builder27 = builder22.dimensions((java.util.List<java.lang.String>) strList25);
        com.metamx.druid.client.DataSegment.Builder builder28 = builder21.metrics((java.util.List<java.lang.String>) strList25);
        com.metamx.druid.client.DataSegment.Builder builder29 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        com.metamx.druid.client.DataSegment.Builder builder34 = builder29.dimensions((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder35 = builder28.metrics((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder36 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials37 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service38 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials37);
        org.jets3t.service.security.ProviderCredentials providerCredentials39 = restS3Service38.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager40 = null;
        restS3Service38.setHttpConnectionManager(httpConnectionManager40);
        java.util.List<java.lang.String> strList42 = restS3Service38.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder43 = builder36.dimensions(strList42);
        com.metamx.druid.shard.ShardSpec shardSpec44 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment46 = new com.metamx.druid.client.DataSegment("s3.amazonaws.com", interval1, "{\"\": \"s3.amazonaws.com\"}", strMap9, (java.util.List<java.lang.String>) strList32, strList42, shardSpec44, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(providerCredentials39);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        java.util.List<java.lang.String> strList13 = null;
        com.metamx.druid.shard.ShardSpec shardSpec14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment16 = new com.metamx.druid.client.DataSegment("x-amz-meta-", interval1, "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", strMap6, (java.util.List<java.lang.String>) strList10, strList13, shardSpec14, 967682662400L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartUpload> multipartUploadList11 = restS3Service1.multipartListUploads("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "s3.amazonaws.com", "null", (java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = s3SegmentPusher0.jsonMapper;
        org.junit.Assert.assertNull(objectMapper1);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.metamx.druid.client.DataSegment.Builder builder0 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        com.metamx.druid.client.DataSegment.Builder builder5 = builder0.dimensions((java.util.List<java.lang.String>) strList3);
        com.metamx.druid.client.DataSegment.Builder builder7 = builder5.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder9 = builder7.size((-1L));
        com.metamx.druid.client.DataSegment.Builder builder11 = builder7.dataSource("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket15 = restS3Service1.createBucket("x-amz-meta-", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: createBucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        org.jets3t.service.acl.AccessControlList accessControlList7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAclWithSignedUrl("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", accessControlList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str4 = restS3Service1.getDevPayProductToken();
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray9 = restS3Service1.listObjects(s3Bucket5, "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "/", (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action List objects in bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        java.util.Date date8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = restS3Service1.createSignedHeadUrl("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", date8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.lang.String str2 = org.jets3t.service.S3Service.buildPostForm("http://s3.amazonaws.com//hi%21?torrent", "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>" + "'", str2, "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.disableMFAForVersionedBucket("x-amz-meta-", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The value of metadata item x-amz-mfa cannot be represented as an HTTP header for the REST S3 interface: [\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"] [\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.lang.Object obj3 = null;
        java.lang.String str4 = objectMapper0.writeValueAsString(obj3);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = objectMapper0.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.JsonGenerator.Feature feature7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = objectMapper0.isEnabled(feature7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "null" + "'", str4, "null");
        org.junit.Assert.assertNotNull(deserializerProvider5);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        org.jets3t.service.Jets3tProperties jets3tProperties11 = restS3Service7.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "", credentialsProvider5, jets3tProperties11, hostConfiguration12);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com//hi%21?torrent", credentialsProvider2, jets3tProperties11);
        org.jets3t.service.acl.AccessControlList accessControlList18 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service14.putVersionedObjectAcl("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "/", "", accessControlList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(jets3tProperties11);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.io.File file1 = new java.io.File("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        boolean boolean2 = file1.isAbsolute();
        org.junit.Assert.assertEquals(file1.getParent(), "http:/s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent");
        org.junit.Assert.assertEquals(file1.toString(), "http:/s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.google.common.base.Joiner joiner0 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        // The following exception was thrown during execution in test generation
        try {
            com.google.common.base.Joiner joiner2 = joiner0.useForNull("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(joiner0);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", credentialsProvider2);
        java.util.Calendar calendar7 = null;
        java.util.Calendar calendar8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}", "http://s3.amazonaws.com//hi%21?torrent" };
        java.lang.String[] strArray14 = new java.lang.String[] { "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object15 = restS3Service3.getVersionedObjectDetails("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "s3.amazonaws.com", calendar7, calendar8, strArray11, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}/s3.amazonaws.com&versionId=%5B%22%22%2C%20%22%24http%3A%2F%2Fs3.amazonaws.com%2Fhttp%253A%252F%252Fs3.amazonaws.com%252F%252F%253Ftorrent%2Fhi%2521%3Ftorrent%22%2C%20%22null%22%5D': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        int int0 = org.jets3t.service.StorageService.BUCKET_STATUS__ALREADY_CLAIMED;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.SerializationConfig serializationConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper5.setSerializationConfig(serializationConfig6);
        org.codehaus.jackson.JsonGenerator.Feature feature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = objectMapper5.isEnabled(feature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper7);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        boolean boolean6 = restS3Service1.isRequesterPaysEnabled();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object10 = restS3Service1.getVersionedObjectDetails("", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "/");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>/%2F&versionId': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList3 = restS3Service1.getObjectAclWithSignedUrl("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.ObjectWriter objectWriter6 = objectMapper5.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.SerializationConfig.Feature feature7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper5.configure(feature7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.jets3t.service.Jets3tProperties jets3tProperties5 = restS3Service1.getJetS3tProperties();
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service9.renameMetadataKeys(strMap10);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartUpload multipartUpload12 = restS3Service1.multipartStartUpload("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "", strMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>/?uploads': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(jets3tProperties5);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.JsonGenerator jsonGenerator5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode7 = objectMapper6.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory8, serializerProvider12, deserializerProvider13);
        org.codehaus.jackson.map.jsontype.SubtypeResolver subtypeResolver15 = null;
        objectMapper14.setSubtypeResolver(subtypeResolver15);
        org.codehaus.jackson.map.SerializationConfig serializationConfig17 = objectMapper14.getSerializationConfig();
        // The following exception was thrown during execution in test generation
        try {
            objectMapper4.writeTree(jsonGenerator5, (org.codehaus.jackson.JsonNode) objectNode7, serializationConfig17);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectNode7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(serializationConfig17);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        org.jets3t.service.Jets3tProperties jets3tProperties8 = restS3Service4.getJetS3tProperties();
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", credentialsProvider2, jets3tProperties8);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.StorageObjectsChunk storageObjectsChunk15 = restS3Service9.listObjectsChunked("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "", (long) (byte) 10, "hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Failed to parse XML document with handler class org.jets3t.service.impl.rest.XmlResponsesSaxParser$ListBucketHandler");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(jets3tProperties8);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        org.jets3t.service.model.StorageObject storageObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject10 = restS3Service1.putObject("/", storageObject9);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Create Object in bucket / cannot be performed with an invalid object: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        java.util.Date date8 = restS3Service4.getCurrentTimeWithOffset();
        java.lang.String[] strArray9 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "http://s3.amazonaws.com//?torrent", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "http://s3.amazonaws.com//?torrent", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "null" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = org.jets3t.service.S3Service.buildPostForm("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", providerCredentials2, date8, strArray9, strArray16, "http://s3.amazonaws.com//hi%21?torrent", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(date8);
// flaky:         org.junit.Assert.assertEquals(date8.toString(), "Thu Nov 04 08:16:41 BRT 2021");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.ObjectWriter objectWriter6 = objectMapper5.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider7 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter8 = objectMapper5.writer(filterProvider7);
        org.codehaus.jackson.JsonParser.Feature feature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = objectMapper5.isEnabled(feature9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectWriter8);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray7 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper4.enable(featureArray7);
        emittingLogger1.warn(throwable2, "", (java.lang.Object[]) featureArray7);
        java.lang.Throwable throwable10 = null;
        com.metamx.emitter.EmittingLogger emittingLogger13 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        com.metamx.emitter.EmittingLogger emittingLogger16 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable17 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper19.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper19.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory22 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider23 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider24 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig25 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig26 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper27 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory22, serializerProvider23, deserializerProvider24, serializationConfig25, deserializationConfig26);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider28 = objectMapper27.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper29.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper31 = objectMapper29.disableDefaultTyping();
        java.lang.Object obj32 = null;
        java.lang.String str33 = objectMapper29.writeValueAsString(obj32);
        com.metamx.druid.client.DataSegment.Builder builder34 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        com.metamx.druid.client.DataSegment.Builder builder39 = builder34.dimensions((java.util.List<java.lang.String>) strList37);
        com.metamx.emitter.EmittingLogger emittingLogger41 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray43 = new java.lang.Object[] { objectMapper19, deserializerProvider28, objectMapper29, strList37, emittingLogger41, (byte) 1 };
        emittingLogger16.error(throwable17, "{\"\": \"s3.amazonaws.com\"}", objArray43);
        java.lang.Throwable throwable45 = null;
        java.io.File file48 = new java.io.File("hi!");
        java.io.File file50 = new java.io.File(file48, "");
        java.io.File file51 = file48.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper52 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode53 = objectMapper52.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory54 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper55 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper56 = objectMapper55.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper57 = objectMapper55.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider58 = objectMapper55.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider59 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper60 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory54, serializerProvider58, deserializerProvider59);
        org.jets3t.service.security.ProviderCredentials providerCredentials61 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service62 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials61);
        org.jets3t.service.security.ProviderCredentials providerCredentials63 = restS3Service62.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager64 = null;
        restS3Service62.setHttpConnectionManager(httpConnectionManager64);
        java.lang.Object[] objArray68 = new java.lang.Object[] { file51, objectMapper52, objectMapper60, restS3Service62, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger16.info(throwable45, "", objArray68);
        org.codehaus.jackson.map.ObjectMapper objectMapper71 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper72 = objectMapper71.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = objectMapper71.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider74 = objectMapper71.getSerializerProvider();
        java.text.DateFormat dateFormat75 = null;
        objectMapper71.setDateFormat(dateFormat75);
        org.codehaus.jackson.node.ArrayNode arrayNode77 = objectMapper71.createArrayNode();
        com.metamx.druid.client.DataSegment.Builder builder78 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder80 = builder78.size(0L);
        java.lang.Object[] objArray81 = new java.lang.Object[] { objectMapper71, builder78 };
        emittingLogger16.trace("null", objArray81);
        emittingLogger13.error("[\"content-length-range\", 58, 1]", objArray81);
        // The following exception was thrown during execution in test generation
        try {
            emittingLogger1.wtf(throwable10, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", objArray81);
            org.junit.Assert.fail("Expected exception of type java.util.UnknownFormatConversionException; message: Conversion = 'F'");
        } catch (java.util.UnknownFormatConversionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(featureArray7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(deserializerProvider28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "null" + "'", str33, "null");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNull("file48.getParent() == null", file48.getParent());
        org.junit.Assert.assertEquals(file48.toString(), "hi!");
        org.junit.Assert.assertNull("file50.getParent() == null", file50.getParent());
        org.junit.Assert.assertEquals(file50.toString(), "hi!");
        org.junit.Assert.assertNotNull(file51);
// flaky:         org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode53);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(serializerProvider58);
        org.junit.Assert.assertNull(providerCredentials63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(objectMapper72);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(serializerProvider74);
        org.junit.Assert.assertNotNull(arrayNode77);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(objArray81);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.lang.Object obj3 = null;
        java.lang.String str4 = objectMapper0.writeValueAsString(obj3);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = objectMapper0.getDeserializerProvider();
        java.io.OutputStream outputStream6 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7, "null", credentialsProvider9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = restS3Service12.renameMetadataKeys(strMap13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = restS3Service10.renameMetadataKeys(strMap13);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(outputStream6, (java.lang.Object) strMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "null" + "'", str4, "null");
        org.junit.Assert.assertNotNull(deserializerProvider5);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder12 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials13);
        org.jets3t.service.security.ProviderCredentials providerCredentials15 = restS3Service14.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager16 = null;
        restS3Service14.setHttpConnectionManager(httpConnectionManager16);
        java.util.List<java.lang.String> strList18 = restS3Service14.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder19 = builder12.dimensions(strList18);
        com.metamx.druid.client.DataSegment.Builder builder20 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        com.metamx.druid.client.DataSegment.Builder builder25 = builder20.dimensions((java.util.List<java.lang.String>) strList23);
        com.metamx.druid.client.DataSegment.Builder builder27 = builder25.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder29 = builder27.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder30 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        com.metamx.druid.client.DataSegment.Builder builder35 = builder30.dimensions((java.util.List<java.lang.String>) strList33);
        com.metamx.druid.client.DataSegment.Builder builder36 = builder29.metrics((java.util.List<java.lang.String>) strList33);
        com.metamx.druid.client.DataSegment.Builder builder37 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        com.metamx.druid.client.DataSegment.Builder builder42 = builder37.dimensions((java.util.List<java.lang.String>) strList40);
        com.metamx.druid.client.DataSegment.Builder builder43 = builder36.metrics((java.util.List<java.lang.String>) strList40);
        com.metamx.druid.shard.ShardSpec shardSpec44 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment46 = new com.metamx.druid.client.DataSegment("s3.amazonaws.com", interval1, "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", strMap9, strList18, (java.util.List<java.lang.String>) strList40, shardSpec44, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(providerCredentials15);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        java.lang.String[] strArray23 = new java.lang.String[] { "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "s3.amazonaws.com", "http://s3.amazonaws.com//?torrent", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "x-amz-meta-", "http://s3.amazonaws.com//hi%21?torrent", "/", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "http://s3.amazonaws.com//?torrent", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        com.metamx.druid.client.DataSegment.Builder builder26 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        com.metamx.druid.client.DataSegment.Builder builder31 = builder26.dimensions((java.util.List<java.lang.String>) strList29);
        com.metamx.druid.client.DataSegment.Builder builder33 = builder31.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder35 = builder33.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder36 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        com.metamx.druid.client.DataSegment.Builder builder41 = builder36.dimensions((java.util.List<java.lang.String>) strList39);
        com.metamx.druid.client.DataSegment.Builder builder42 = builder35.metrics((java.util.List<java.lang.String>) strList39);
        com.metamx.druid.shard.ShardSpec shardSpec43 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment45 = new com.metamx.druid.client.DataSegment(":", interval1, "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", strMap11, (java.util.List<java.lang.String>) strList24, (java.util.List<java.lang.String>) strList39, shardSpec43, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        org.jets3t.service.model.NotificationConfig notificationConfig10 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setNotificationConfig("http://s3.amazonaws.com//?torrent", notificationConfig10);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Unable to build NotificationConfig XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        org.jets3t.service.model.StorageBucket storageBucket9 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket(storageBucket9);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Delete bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        org.apache.commons.httpclient.HttpMethod httpMethod7 = null;
        restS3Service1.authorizeHttpRequest(httpMethod7);
        java.lang.String str9 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider14 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service15 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12, "null", credentialsProvider14);
        org.jets3t.service.security.ProviderCredentials providerCredentials16 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service17 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = restS3Service17.renameMetadataKeys(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = restS3Service15.renameMetadataKeys(strMap18);
        org.jets3t.service.security.ProviderCredentials providerCredentials21 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials22 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service23 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials22);
        org.jets3t.service.security.ProviderCredentials providerCredentials24 = restS3Service23.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager25 = null;
        restS3Service23.setHttpConnectionManager(httpConnectionManager25);
        java.util.Date date27 = restS3Service23.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = restS3Service1.createSignedPutUrl("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", strMap20, providerCredentials21, date27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(providerCredentials24);
        org.junit.Assert.assertNotNull(date27);
// flaky:         org.junit.Assert.assertEquals(date27.toString(), "Thu Nov 04 08:16:42 BRT 2021");
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.lang.String str0 = com.metamx.druid.client.DataSegment.delimiter;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "x-amz-meta-" + "'", str0, "x-amz-meta-");
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = s3SegmentPusher8.jsonMapper;
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertNull(objectMapper9);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        org.jets3t.service.model.StorageObject storageObject5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageObject storageObject6 = restS3Service1.putObject("hi!", storageObject5);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Create Object in bucket hi! cannot be performed with an invalid object: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.JsonParser.Feature feature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper0.configure(feature5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "null", credentialsProvider2);
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        java.util.Date date11 = restS3Service7.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = restS3Service3.createSignedDeleteUrl("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "x-amz-meta-", date11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(date11);
// flaky:         org.junit.Assert.assertEquals(date11.toString(), "Thu Nov 04 08:16:42 BRT 2021");
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory4 = objectMapper2.getNodeFactory();
        org.codehaus.jackson.map.ObjectReader objectReader5 = objectMapper0.reader(jsonNodeFactory4);
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray9 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper6.enable(featureArray9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper0.enable(featureArray9);
        org.codehaus.jackson.JsonFactory jsonFactory12 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider13 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider14 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig15 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig16 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory12, serializerProvider13, deserializerProvider14, serializationConfig15, deserializationConfig16);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider18 = objectMapper17.getDeserializerProvider();
        org.codehaus.jackson.node.ArrayNode arrayNode19 = objectMapper17.createArrayNode();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper20.disableDefaultTyping();
        java.io.File file24 = new java.io.File("hi!");
        java.io.File file26 = new java.io.File(file24, "");
        java.lang.Class<?> wildcardClass27 = file24.getClass();
        org.codehaus.jackson.type.JavaType javaType28 = objectMapper22.constructType((java.lang.reflect.Type) wildcardClass27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = objectMapper0.readValue((org.codehaus.jackson.JsonNode) arrayNode19, javaType28);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: Can not deserialize instance of java.io.File out of START_ARRAY token? at [Source: N/A; line: -1, column: -1]");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(jsonNodeFactory4);
        org.junit.Assert.assertNotNull(objectReader5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializerProvider18);
        org.junit.Assert.assertNotNull(arrayNode19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNull("file24.getParent() == null", file24.getParent());
        org.junit.Assert.assertEquals(file24.toString(), "hi!");
        org.junit.Assert.assertNull("file26.getParent() == null", file26.getParent());
        org.junit.Assert.assertEquals(file26.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(javaType28);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.util.List<java.lang.String> strList5 = restS3Service1.getResourceParameterNames();
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        org.jets3t.service.model.S3Object s3Object7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAcl(s3Bucket6, s3Object7);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        com.metamx.emitter.EmittingLogger emittingLogger5 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray11 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper8.enable(featureArray11);
        emittingLogger5.warn(throwable6, "", (java.lang.Object[]) featureArray11);
        emittingLogger1.trace(throwable2, "/", (java.lang.Object[]) featureArray11);
        com.metamx.emitter.EmittingLogger emittingLogger17 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable18 = null;
        com.metamx.emitter.EmittingLogger emittingLogger21 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable22 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper24 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper26 = objectMapper24.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray27 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = objectMapper24.enable(featureArray27);
        emittingLogger21.warn(throwable22, "", (java.lang.Object[]) featureArray27);
        emittingLogger17.trace(throwable18, "/", (java.lang.Object[]) featureArray27);
        // The following exception was thrown during execution in test generation
        try {
            emittingLogger1.wtf("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", (java.lang.Object[]) featureArray27);
            org.junit.Assert.fail("Expected exception of type java.util.UnknownFormatConversionException; message: Conversion = 'F'");
        } catch (java.util.UnknownFormatConversionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        org.jets3t.service.model.S3Bucket s3Bucket7 = null;
        java.util.Calendar calendar9 = null;
        java.util.Calendar calendar10 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "null", ":", "[\"content-length-range\", 58, 1]", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "hi!" };
        java.lang.String[] strArray21 = new java.lang.String[] { "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "null", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "http://s3.amazonaws.com//?torrent" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object24 = restS3Service1.getVersionedObject("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", s3Bucket7, "{\"\": \"s3.amazonaws.com\"}", calendar9, calendar10, strArray16, strArray21, (java.lang.Long) 10L, (java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Versioned Object cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.util.Calendar calendar10 = null;
        java.util.Calendar calendar11 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "http://s3.amazonaws.com//?torrent", ":", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "x-amz-meta-", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "[\"content-length-range\", 58, 1]" };
        java.lang.String[] strArray24 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}", "/", "", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "/" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object27 = restS3Service1.getVersionedObject(":", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "x-amz-meta-", calendar10, calendar11, strArray18, strArray24, (java.lang.Long) 967682662400L, (java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.util.List<java.lang.String> strList5 = restS3Service1.getResourceParameterNames();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteObjectWithSignedUrl("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"]': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", credentialsProvider2);
        org.jets3t.service.acl.AccessControlList accessControlList5 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service3.putBucketAcl("http://s3.amazonaws.com//hi%21?torrent", accessControlList5);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The bucket 'http://s3.amazonaws.com//hi%21?torrent' does not include ACL information");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.google.common.base.Joiner joiner0 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        // The following exception was thrown during execution in test generation
        try {
            com.google.common.base.Joiner joiner1 = joiner0.skipNulls();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(joiner0);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        int int0 = org.jets3t.service.StorageService.BUCKET_STATUS__MY_BUCKET;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        java.io.File file18 = new java.io.File("hi!");
        java.io.File file20 = new java.io.File(file18, "");
        boolean boolean22 = file18.setWritable(false);
        java.io.File file24 = new java.io.File(file18, "http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment dataSegment25 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment26 = s3SegmentPusher16.push(file24, dataSegment25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNull("file18.getParent() == null", file18.getParent());
        org.junit.Assert.assertEquals(file18.toString(), "hi!");
        org.junit.Assert.assertNull("file20.getParent() == null", file20.getParent());
        org.junit.Assert.assertEquals(file20.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(file24.getParent(), "hi!/http:/s3.amazonaws.com");
        org.junit.Assert.assertEquals(file24.toString(), "hi!/http:/s3.amazonaws.com/?torrent");
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.util.List<java.lang.String> strList5 = restS3Service1.getResourceParameterNames();
        org.jets3t.service.model.MultipartUpload multipartUpload6 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.multipartAbortUpload(multipartUpload6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode8 = objectMapper7.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema9 = null;
        org.codehaus.jackson.map.ObjectReader objectReader10 = objectMapper7.schemaBasedReader(formatSchema9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode12 = objectMapper11.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema13 = null;
        org.codehaus.jackson.map.ObjectReader objectReader14 = objectMapper11.schemaBasedReader(formatSchema13);
        byte[] byteArray16 = objectMapper11.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode17 = objectMapper7.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser18 = objectMapper6.treeAsTokens(jsonNode17);
        org.codehaus.jackson.map.SerializationConfig.Feature feature19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper6.configure(feature19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectNode8);
        org.junit.Assert.assertNotNull(objectReader10);
        org.junit.Assert.assertNotNull(objectNode12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(jsonParser18);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        org.jets3t.service.model.S3Object s3Object9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartUpload multipartUpload10 = restS3Service1.multipartStartUpload("", s3Object9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        int int16 = restS3Service1.getInternalErrorRetryMax();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.suspendBucketVersioningWithMFA("{\"\": \"s3.amazonaws.com\"}", "http://s3.amazonaws.com//hi%21?torrent", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12);
        org.jets3t.service.security.ProviderCredentials providerCredentials14 = restS3Service13.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager15 = null;
        restS3Service13.setHttpConnectionManager(httpConnectionManager15);
        java.util.Date date17 = restS3Service13.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = restS3Service1.createSignedPutUrl("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "{\"\": \"s3.amazonaws.com\"}", strMap9, providerCredentials11, date17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(providerCredentials14);
        org.junit.Assert.assertNotNull(date17);
// flaky:         org.junit.Assert.assertEquals(date17.toString(), "Thu Nov 04 08:16:43 BRT 2021");
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartUpload> multipartUploadList10 = restS3Service1.multipartListUploads("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>/?max-uploads=1000&uploads': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.PrettyPrinter prettyPrinter10 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter11 = objectMapper9.prettyPrintingWriter(prettyPrinter10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = objectMapper8.writeValueAsString((java.lang.Object) prettyPrinter10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not pass null serializerFactory");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str6 = restS3Service1.createTorrentUrl("http://s3.amazonaws.com//?torrent", "hi!");
        org.jets3t.service.security.ProviderCredentials providerCredentials9 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service11 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials10);
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = restS3Service11.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager13 = null;
        restS3Service11.setHttpConnectionManager(httpConnectionManager13);
        java.util.Date date15 = restS3Service11.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = restS3Service1.createSignedGetUrl("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", providerCredentials9, date15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent" + "'", str6, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        org.junit.Assert.assertNull(providerCredentials12);
        org.junit.Assert.assertNotNull(date15);
// flaky:         org.junit.Assert.assertEquals(date15.toString(), "Thu Nov 04 08:16:44 BRT 2021");
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        java.io.File file7 = new java.io.File(file1, "http://s3.amazonaws.com//?torrent");
        java.io.File file9 = new java.io.File("hi!");
        java.io.File file11 = new java.io.File(file9, "");
        java.lang.String str12 = file11.getName();
        java.net.URL uRL13 = file11.toURL();
        int int14 = file7.compareTo(file11);
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals(file7.getParent(), "hi!/http:/s3.amazonaws.com");
        org.junit.Assert.assertEquals(file7.toString(), "hi!/http:/s3.amazonaws.com/?torrent");
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), "hi!");
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(uRL13);
// flaky:         org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.io.File file1 = new java.io.File("{\"\": \"s3.amazonaws.com\"}");
        java.nio.file.Path path2 = file1.toPath();
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        boolean boolean7 = restS3Service4.isBucketAccessible("");
        java.lang.String str8 = restS3Service4.getRestMetadataPrefix();
        boolean boolean9 = restS3Service4.isRequesterPaysEnabled();
        boolean boolean10 = file1.equals((java.lang.Object) restS3Service4);
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "{\"\": \"s3.amazonaws.com\"}");
        org.junit.Assert.assertNotNull(path2);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "x-amz-meta-" + "'", str8, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "null", credentialsProvider2);
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = restS3Service5.renameMetadataKeys(strMap6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = restS3Service3.renameMetadataKeys(strMap6);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service3.deleteVersionedObjectWithMFA("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "{\"\": \"s3.amazonaws.com\"}", "s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket4 = restS3Service1.createBucket("[\"content-length-range\", 58, 1]");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: createBucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.io.File file2 = new java.io.File("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
        long long3 = file2.getUsableSpace();
        org.junit.Assert.assertEquals(file2.getParent(), "http:/s3.amazonaws.com.s3.amazonaws.com/?torrent/http:/s3.amazonaws.com.s3.amazonaws.com");
        org.junit.Assert.assertEquals(file2.toString(), "http:/s3.amazonaws.com.s3.amazonaws.com/?torrent/http:/s3.amazonaws.com.s3.amazonaws.com/?torrent");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "s3.amazonaws.com", credentialsProvider2);
        org.jets3t.service.model.MultipartUpload multipartUpload4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartPart> multipartPartList5 = restS3Service3.multipartListParts(multipartUpload4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder13 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder13.dimensions((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("http://s3.amazonaws.com//hi%21?torrent", (java.util.List<java.lang.String>) strList16);
        com.metamx.druid.client.DataSegment.Builder builder21 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        com.metamx.druid.client.DataSegment.Builder builder26 = builder21.dimensions((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("http://s3.amazonaws.com//hi%21?torrent", (java.util.List<java.lang.String>) strList24);
        com.metamx.druid.shard.ShardSpec shardSpec28 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment30 = new com.metamx.druid.client.DataSegment("http://s3.amazonaws.com//hi%21?torrent", interval1, "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", strMap11, (java.util.List<java.lang.String>) strList16, (java.util.List<java.lang.String>) strList24, shardSpec28, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}" + "'", str19, "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}" + "'", str27, "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}");
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        java.util.List<java.lang.String> strList12 = null;
        com.metamx.druid.client.DataSegment.Builder builder13 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder13.dimensions((java.util.List<java.lang.String>) strList16);
        com.metamx.druid.client.DataSegment.Builder builder20 = builder18.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder22 = builder20.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder23 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        com.metamx.druid.client.DataSegment.Builder builder28 = builder23.dimensions((java.util.List<java.lang.String>) strList26);
        com.metamx.druid.client.DataSegment.Builder builder29 = builder22.metrics((java.util.List<java.lang.String>) strList26);
        com.metamx.druid.client.DataSegment.Builder builder30 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        com.metamx.druid.client.DataSegment.Builder builder35 = builder30.dimensions((java.util.List<java.lang.String>) strList33);
        com.metamx.druid.client.DataSegment.Builder builder36 = builder29.metrics((java.util.List<java.lang.String>) strList33);
        com.metamx.druid.shard.ShardSpec shardSpec37 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment39 = new com.metamx.druid.client.DataSegment("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", interval1, "{\"\": \"s3.amazonaws.com\"}/hi!", strMap9, strList12, (java.util.List<java.lang.String>) strList33, shardSpec37, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        boolean boolean7 = restS3Service1.isAuthenticatedConnection();
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = restS3Service13.renameMetadataKeys(strMap14);
        org.jets3t.service.security.ProviderCredentials providerCredentials16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = restS3Service1.createSignedUrl("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "{\"\": \"s3.amazonaws.com\"}/hi!", strMap14, providerCredentials16, (long) (byte) 1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str8 = restS3Service1.createTorrentUrl("", "");
        org.jets3t.service.model.S3Bucket s3Bucket9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList10 = restS3Service1.getBucketAcl(s3Bucket9);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Bucket Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://s3.amazonaws.com//?torrent" + "'", str8, "http://s3.amazonaws.com//?torrent");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode8 = objectMapper7.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema9 = null;
        org.codehaus.jackson.map.ObjectReader objectReader10 = objectMapper7.schemaBasedReader(formatSchema9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode12 = objectMapper11.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema13 = null;
        org.codehaus.jackson.map.ObjectReader objectReader14 = objectMapper11.schemaBasedReader(formatSchema13);
        byte[] byteArray16 = objectMapper11.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode17 = objectMapper7.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser18 = objectMapper6.treeAsTokens(jsonNode17);
        java.io.OutputStream outputStream19 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials20 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service21 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials20);
        org.jets3t.service.security.ProviderCredentials providerCredentials22 = restS3Service21.getProviderCredentials();
        java.lang.String str23 = restS3Service21.getInvokingApplicationDescription();
        restS3Service21.setRequesterPaysEnabled(false);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig26 = null;
        org.codehaus.jackson.JsonFactory jsonFactory27 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider32 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper33 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory27, serializerProvider31, deserializerProvider32);
        org.codehaus.jackson.map.SerializerFactory serializerFactory34 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = objectMapper33.setSerializerFactory(serializerFactory34);
        org.codehaus.jackson.PrettyPrinter prettyPrinter36 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter37 = objectMapper35.prettyPrintingWriter(prettyPrinter36);
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = objectMapper38.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = objectMapper38.disableDefaultTyping();
        java.io.File file42 = new java.io.File("hi!");
        java.io.File file44 = new java.io.File(file42, "");
        java.lang.Class<?> wildcardClass45 = file42.getClass();
        org.codehaus.jackson.type.JavaType javaType46 = objectMapper40.constructType((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = objectMapper35.canDeserialize(javaType46);
        org.codehaus.jackson.map.ser.FilterProvider filterProvider48 = null;
        objectMapper35.setFilters(filterProvider48);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher50 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service21, s3SegmentPusherConfig26, objectMapper35);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper6.writeValue(outputStream19, (java.lang.Object) restS3Service21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectNode8);
        org.junit.Assert.assertNotNull(objectReader10);
        org.junit.Assert.assertNotNull(objectNode12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode17);
        org.junit.Assert.assertNotNull(jsonParser18);
        org.junit.Assert.assertNull(providerCredentials22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNull("file42.getParent() == null", file42.getParent());
        org.junit.Assert.assertEquals(file42.toString(), "hi!");
        org.junit.Assert.assertNull("file44.getParent() == null", file44.getParent());
        org.junit.Assert.assertEquals(file44.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(javaType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        org.jets3t.service.Jets3tProperties jets3tProperties11 = restS3Service7.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "", credentialsProvider5, jets3tProperties11, hostConfiguration12);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com//hi%21?torrent", credentialsProvider2, jets3tProperties11);
        org.jets3t.service.model.StorageObject storageObject18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap20 = restS3Service14.copyObject("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "s3.amazonaws.com", "[\"content-length-range\", 58, 1]", storageObject18, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyObject");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(jets3tProperties11);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "null", credentialsProvider2);
        org.jets3t.service.model.S3Bucket s3Bucket4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList6 = restS3Service3.getObjectAcl(s3Bucket4, "s3.amazonaws.com");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        org.jets3t.service.Jets3tProperties jets3tProperties8 = restS3Service4.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "", credentialsProvider2, jets3tProperties8, hostConfiguration9);
        boolean boolean11 = restS3Service10.isAuthenticatedConnection();
        org.jets3t.service.acl.AccessControlList accessControlList14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket15 = restS3Service10.createBucket("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", ":", accessControlList14);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: createBucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(jets3tProperties8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setBucketPolicy("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}/&policy': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        java.io.File file7 = new java.io.File(file1, "http://s3.amazonaws.com//?torrent");
        boolean boolean8 = file1.isDirectory();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals(file7.getParent(), "hi!/http:/s3.amazonaws.com");
        org.junit.Assert.assertEquals(file7.toString(), "hi!/http:/s3.amazonaws.com/?torrent");
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials2);
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = restS3Service3.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service3.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service3.getEndpoint();
        java.lang.String str8 = restS3Service3.getEndpoint();
        org.apache.commons.httpclient.HttpMethod httpMethod9 = null;
        restS3Service3.authorizeHttpRequest(httpMethod9);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = objectMapper1.writeValueAsBytes((java.lang.Object) restS3Service3);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: Host must be set to create a host URL (through reference chain: org.jets3t.service.impl.rest.httpclient.RestS3Service[\"httpClient\"]->org.apache.commons.httpclient.HttpClient[\"hostConfiguration\"]->org.apache.commons.httpclient.HostConfiguration[\"hostURL\"])");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNull(providerCredentials4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "s3.amazonaws.com" + "'", str7, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "s3.amazonaws.com" + "'", str8, "s3.amazonaws.com");
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        org.jets3t.service.Jets3tProperties jets3tProperties11 = restS3Service7.getJetS3tProperties();
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", credentialsProvider5, jets3tProperties11);
        org.apache.commons.httpclient.HostConfiguration hostConfiguration13 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com//hi%21?torrent", credentialsProvider2, jets3tProperties11, hostConfiguration13);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray18 = restS3Service14.listObjects("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Request Error: java.lang.NullPointerException");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(jets3tProperties11);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider3 = objectMapper0.getSerializerProvider();
        java.text.DateFormat dateFormat4 = null;
        objectMapper0.setDateFormat(dateFormat4);
        org.codehaus.jackson.map.ObjectMapper.DefaultTyping defaultTyping6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper0.enableDefaultTyping(defaultTyping6);
        org.codehaus.jackson.Version version8 = objectMapper0.version();
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(serializerProvider3);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(version8);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        boolean boolean4 = restS3Service1.isRequesterPaysEnabled();
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = restS3Service9.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager11 = null;
        restS3Service9.setHttpConnectionManager(httpConnectionManager11);
        java.util.Date date13 = restS3Service9.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = restS3Service1.createSignedHeadUrl("http://s3.amazonaws.com//hi%21?torrent", "s3.amazonaws.com", providerCredentials7, date13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials10);
        org.junit.Assert.assertNotNull(date13);
// flaky:         org.junit.Assert.assertEquals(date13.toString(), "Thu Nov 04 08:16:46 BRT 2021");
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getEndpoint();
        org.jets3t.service.model.StorageObject storageObject6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap7 = restS3Service1.updateObjectMetadata("null", storageObject6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "s3.amazonaws.com" + "'", str4, "s3.amazonaws.com");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode6 = objectMapper0.readTree("x-amz-meta-");
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.JsonParseException; message: Unexpected character ('x' (code 120)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')? at [Source: java.io.StringReader@2d835d06; line: 1, column: 2]");
        } catch (org.codehaus.jackson.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        java.lang.String str8 = restS3Service1.createTorrentUrl("s3.amazonaws.com", "");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.enableBucketVersioning("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" + "'", str8, "http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            int int11 = restS3Service1.checkBucketStatus("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket7 = restS3Service1.createBucket("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: createBucket");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema2 = null;
        org.codehaus.jackson.map.ObjectReader objectReader3 = objectMapper0.schemaBasedReader(formatSchema2);
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper5.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper5.disableDefaultTyping();
        java.io.File file9 = new java.io.File("hi!");
        java.io.File file11 = new java.io.File(file9, "");
        java.lang.Class<?> wildcardClass12 = file9.getClass();
        org.codehaus.jackson.type.JavaType javaType13 = objectMapper7.constructType((java.lang.reflect.Type) wildcardClass12);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.Versioned versioned14 = objectMapper0.readValue("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", javaType13);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: Can not deserialize instance of java.io.File out of START_ARRAY token? at [Source: java.io.StringReader@2734ed61; line: 1, column: 1]");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectReader3);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), "hi!");
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(javaType13);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.WebsiteConfig websiteConfig6 = restS3Service1.getWebsiteConfig("null");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        java.lang.String str4 = file3.getName();
        java.net.URL uRL5 = file3.toURL();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = file3.setLastModified((long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Negative time");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(uRL5);
// flaky:         org.junit.Assert.assertEquals(uRL5.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setAnnotationIntrospector(annotationIntrospector7);
        org.codehaus.jackson.map.SerializationConfig serializationConfig9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.setSerializationConfig(serializationConfig9);
        org.codehaus.jackson.type.TypeReference typeReference12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.Jets3tProperties jets3tProperties13 = objectMapper10.readValue("[\"content-length-range\", 58, 1]", typeReference12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder14 = builder12.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder16 = builder14.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder17 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        com.metamx.druid.client.DataSegment.Builder builder22 = builder17.dimensions((java.util.List<java.lang.String>) strList20);
        com.metamx.druid.client.DataSegment.Builder builder23 = builder16.metrics((java.util.List<java.lang.String>) strList20);
        com.metamx.druid.client.DataSegment.Builder builder25 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        com.metamx.druid.client.DataSegment.Builder builder30 = builder25.dimensions((java.util.List<java.lang.String>) strList28);
        java.lang.String str31 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("http://s3.amazonaws.com//hi%21?torrent", (java.util.List<java.lang.String>) strList28);
        com.metamx.druid.shard.ShardSpec shardSpec32 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment34 = new com.metamx.druid.client.DataSegment("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", interval1, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", strMap6, (java.util.List<java.lang.String>) strList20, (java.util.List<java.lang.String>) strList28, shardSpec32, (long) '/');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}" + "'", str31, "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}");
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder13 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder13.dimensions((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("http://s3.amazonaws.com//hi%21?torrent", (java.util.List<java.lang.String>) strList16);
        com.metamx.druid.client.DataSegment.Builder builder20 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        com.metamx.druid.client.DataSegment.Builder builder25 = builder20.dimensions((java.util.List<java.lang.String>) strList23);
        com.metamx.druid.shard.ShardSpec shardSpec26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment28 = new com.metamx.druid.client.DataSegment("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", interval1, "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", strMap9, (java.util.List<java.lang.String>) strList16, (java.util.List<java.lang.String>) strList23, shardSpec26, (long) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}" + "'", str19, "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        java.io.File file5 = new java.io.File(file3, "");
        long long6 = file5.getTotalSpace();
        boolean boolean7 = file5.isFile();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertEquals(file3.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file3.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertEquals(file5.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file5.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service18 = s3SegmentPusher17.s3Client;
        org.jets3t.service.security.ProviderCredentials providerCredentials19 = restS3Service18.getAWSCredentials();
        org.jets3t.service.security.ProviderCredentials providerCredentials22 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service23 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = restS3Service23.renameMetadataKeys(strMap24);
        org.jets3t.service.security.ProviderCredentials providerCredentials26 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service27 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials26);
        org.jets3t.service.security.ProviderCredentials providerCredentials28 = restS3Service27.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager29 = null;
        restS3Service27.setHttpConnectionManager(httpConnectionManager29);
        java.util.Date date31 = restS3Service27.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = restS3Service18.createSignedPutUrl("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "{\"\": \"s3.amazonaws.com\"}/hi!", strMap24, date31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(restS3Service18);
        org.junit.Assert.assertNull(providerCredentials19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(providerCredentials28);
        org.junit.Assert.assertNotNull(date31);
// flaky:         org.junit.Assert.assertEquals(date31.toString(), "Thu Nov 04 08:16:49 BRT 2021");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager16 = restS3Service1.getHttpConnectionManager();
        org.jets3t.service.model.S3Bucket s3Bucket17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList19 = restS3Service1.getObjectAcl(s3Bucket17, "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertNull(httpConnectionManager16);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        org.codehaus.jackson.JsonFactory jsonFactory19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory19);
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = objectMapper21.disableDefaultTyping();
        java.io.File file25 = new java.io.File("hi!");
        java.io.File file27 = new java.io.File(file25, "");
        java.lang.Class<?> wildcardClass28 = file25.getClass();
        org.codehaus.jackson.type.JavaType javaType29 = objectMapper23.constructType((java.lang.reflect.Type) wildcardClass28);
        org.codehaus.jackson.map.ObjectWriter objectWriter30 = objectMapper20.writerWithType(javaType29);
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment.Builder builder31 = objectMapper13.readValue("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", javaType29);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.JsonParseException; message: Unexpected character ('/' (code 47)): maybe a (non-standard) comment? (not recognized as one since Feature 'ALLOW_COMMENTS' not enabled for parser)? at [Source: java.io.StringReader@66286442; line: 1, column: 2]");
        } catch (org.codehaus.jackson.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNull("file25.getParent() == null", file25.getParent());
        org.junit.Assert.assertEquals(file25.toString(), "hi!");
        org.junit.Assert.assertNull("file27.getParent() == null", file27.getParent());
        org.junit.Assert.assertEquals(file27.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(javaType29);
        org.junit.Assert.assertNotNull(objectWriter30);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.io.File file1 = new java.io.File("hi!");
        long long2 = file1.getTotalSpace();
        boolean boolean3 = file1.isFile();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        org.jets3t.service.Jets3tProperties jets3tProperties8 = restS3Service4.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "", credentialsProvider2, jets3tProperties8, hostConfiguration9);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object12 = restS3Service10.getObjectWithSignedUrl("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(jets3tProperties8);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        java.io.File file2 = new java.io.File("{\"\": \"s3.amazonaws.com\"}");
        com.metamx.druid.client.DataSegment dataSegment3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment4 = s3SegmentPusher0.push(file2, dataSegment3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull("file2.getParent() == null", file2.getParent());
        org.junit.Assert.assertEquals(file2.toString(), "{\"\": \"s3.amazonaws.com\"}");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("{\"\": \"s3.amazonaws.com\"}");
        boolean boolean2 = emittingLogger1.isDebugEnabled();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray7 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper4.enable(featureArray7);
        // The following exception was thrown during execution in test generation
        try {
            emittingLogger1.info("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", (java.lang.Object[]) featureArray7);
            org.junit.Assert.fail("Expected exception of type java.util.UnknownFormatConversionException; message: Conversion = 'F'");
        } catch (java.util.UnknownFormatConversionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(featureArray7);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        boolean boolean6 = restS3Service1.isRequesterPaysEnabled();
        int int8 = restS3Service1.checkBucketStatus("x-amz-meta-");
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.StorageObjectsChunk storageObjectsChunk14 = restS3Service1.listObjectsChunked("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", 10L, "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.SerializationConfig serializationConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper5.setSerializationConfig(serializationConfig6);
        org.codehaus.jackson.JsonFactory jsonFactory8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory8, serializerProvider12, deserializerProvider13);
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode16 = objectMapper15.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema17 = null;
        org.codehaus.jackson.map.ObjectReader objectReader18 = objectMapper15.schemaBasedReader(formatSchema17);
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode20 = objectMapper19.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema21 = null;
        org.codehaus.jackson.map.ObjectReader objectReader22 = objectMapper19.schemaBasedReader(formatSchema21);
        byte[] byteArray24 = objectMapper19.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode25 = objectMapper15.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser26 = objectMapper14.treeAsTokens(jsonNode25);
        org.codehaus.jackson.type.TypeReference typeReference27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray28 = objectMapper5.readValue(jsonNode25, typeReference27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(objectNode16);
        org.junit.Assert.assertNotNull(objectReader18);
        org.junit.Assert.assertNotNull(objectNode20);
        org.junit.Assert.assertNotNull(objectReader22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode25);
        org.junit.Assert.assertNotNull(jsonParser26);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.io.File file1 = new java.io.File("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        java.io.File file3 = new java.io.File("hi!");
        java.io.File file5 = new java.io.File(file3, "");
        boolean boolean7 = file3.setWritable(false);
        java.io.File file9 = new java.io.File(file3, "http://s3.amazonaws.com//?torrent");
        java.lang.String str10 = file3.getCanonicalPath();
        int int11 = file1.compareTo(file3);
        org.junit.Assert.assertEquals(file1.getParent(), "http:/s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent");
        org.junit.Assert.assertEquals(file1.toString(), "http:/s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertNull("file5.getParent() == null", file5.getParent());
        org.junit.Assert.assertEquals(file5.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals(file9.getParent(), "hi!/http:/s3.amazonaws.com");
        org.junit.Assert.assertEquals(file9.toString(), "hi!/http:/s3.amazonaws.com/?torrent");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 11 + "'", int11 == 11);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.google.common.base.Joiner joiner0 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        java.lang.StringBuilder stringBuilder1 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory6 = objectMapper4.getNodeFactory();
        org.codehaus.jackson.map.ObjectReader objectReader7 = objectMapper2.reader(jsonNodeFactory6);
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray11 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper8.enable(featureArray11);
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper2.enable(featureArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuilder stringBuilder14 = joiner0.appendTo(stringBuilder1, (java.lang.Object[]) featureArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(joiner0);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(jsonNodeFactory6);
        org.junit.Assert.assertNotNull(objectReader7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        org.jets3t.service.Jets3tProperties jets3tProperties11 = restS3Service7.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "", credentialsProvider5, jets3tProperties11, hostConfiguration12);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com//hi%21?torrent", credentialsProvider2, jets3tProperties11);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service14.deleteObject("s3.amazonaws.com", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(jets3tProperties11);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        boolean boolean7 = restS3Service1.isRequesterPaysEnabled();
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials11);
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = restS3Service12.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager14 = null;
        restS3Service12.setHttpConnectionManager(httpConnectionManager14);
        java.util.Date date16 = restS3Service12.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = restS3Service1.createSignedHeadUrl(":", "", providerCredentials10, date16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(providerCredentials13);
        org.junit.Assert.assertNotNull(date16);
// flaky:         org.junit.Assert.assertEquals(date16.toString(), "Thu Nov 04 08:16:51 BRT 2021");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.S3Bucket s3Bucket4 = null;
        java.util.Calendar calendar6 = null;
        java.util.Calendar calendar7 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}/hi!", "/", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]" };
        java.lang.String[] strArray15 = new java.lang.String[] { "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "[\"content-length-range\", 58, 1]" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object18 = restS3Service1.getVersionedObject("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", s3Bucket4, "", calendar6, calendar7, strArray11, strArray15, (java.lang.Long) 100L, (java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Versioned Object cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.jsontype.SubtypeResolver subtypeResolver10 = null;
        objectMapper9.setSubtypeResolver(subtypeResolver10);
        org.codehaus.jackson.JsonFactory jsonFactory12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = objectMapper13.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider16 = objectMapper13.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider17 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory12, serializerProvider16, deserializerProvider17);
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode20 = objectMapper19.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema21 = null;
        org.codehaus.jackson.map.ObjectReader objectReader22 = objectMapper19.schemaBasedReader(formatSchema21);
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode24 = objectMapper23.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema25 = null;
        org.codehaus.jackson.map.ObjectReader objectReader26 = objectMapper23.schemaBasedReader(formatSchema25);
        byte[] byteArray28 = objectMapper23.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode29 = objectMapper19.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser30 = objectMapper18.treeAsTokens(jsonNode29);
        org.codehaus.jackson.JsonNode jsonNode31 = objectMapper9.readTree(jsonParser30);
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper33 = objectMapper32.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper32.disableDefaultTyping();
        java.lang.Object obj35 = null;
        java.lang.String str36 = objectMapper32.writeValueAsString(obj35);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider37 = objectMapper32.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory38 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = objectMapper39.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper41 = objectMapper39.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider42 = objectMapper39.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider43 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory38, serializerProvider42, deserializerProvider43);
        org.codehaus.jackson.map.ObjectMapper objectMapper45 = objectMapper32.setSerializerProvider(serializerProvider42);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig46 = objectMapper32.getDeserializationConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode47 = objectMapper0.readTree(jsonParser30, deserializationConfig46);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(serializerProvider16);
        org.junit.Assert.assertNotNull(objectNode20);
        org.junit.Assert.assertNotNull(objectReader22);
        org.junit.Assert.assertNotNull(objectNode24);
        org.junit.Assert.assertNotNull(objectReader26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode29);
        org.junit.Assert.assertNotNull(jsonParser30);
        org.junit.Assert.assertNotNull(jsonNode31);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "null" + "'", str36, "null");
        org.junit.Assert.assertNotNull(deserializerProvider37);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(serializerProvider42);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(deserializationConfig46);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        boolean boolean6 = file1.delete();
        boolean boolean8 = file1.setExecutable(false);
        java.lang.String str9 = file1.toString();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        restS3Service1.setRequesterPaysEnabled(false);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        org.codehaus.jackson.PrettyPrinter prettyPrinter16 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter17 = objectMapper15.prettyPrintingWriter(prettyPrinter16);
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper18.disableDefaultTyping();
        java.io.File file22 = new java.io.File("hi!");
        java.io.File file24 = new java.io.File(file22, "");
        java.lang.Class<?> wildcardClass25 = file22.getClass();
        org.codehaus.jackson.type.JavaType javaType26 = objectMapper20.constructType((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = objectMapper15.canDeserialize(javaType26);
        org.codehaus.jackson.map.ser.FilterProvider filterProvider28 = null;
        objectMapper15.setFilters(filterProvider28);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher30 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper15);
        java.lang.String str31 = restS3Service1.getInvokingApplicationDescription();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"]/': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNull("file22.getParent() == null", file22.getParent());
        org.junit.Assert.assertEquals(file22.toString(), "hi!");
        org.junit.Assert.assertNull("file24.getParent() == null", file24.getParent());
        org.junit.Assert.assertEquals(file24.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(javaType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        org.apache.commons.httpclient.HttpMethod httpMethod7 = null;
        restS3Service1.authorizeHttpRequest(httpMethod7);
        org.jets3t.service.model.NotificationConfig notificationConfig10 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setNotificationConfig("http://s3.amazonaws.com//?torrent", notificationConfig10);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Unable to build NotificationConfig XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        boolean boolean4 = restS3Service1.isShutdown();
        java.lang.String str5 = restS3Service1.getDevPayProductToken();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.BaseVersionOrDeleteMarker[] baseVersionOrDeleteMarkerArray8 = restS3Service1.getObjectVersions("[\"content-length-range\", 58, 1]", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"content-length-range\", 58, 1]/?max-keys=1000&versions&prefix=%5B%22%22%2C%20%22%24http%3A%2F%2Fs3.amazonaws.com%2Fhttp%253A%252F%252Fs3.amazonaws.com%252F%252F%253Ftorrent%2Fhi%2521%3Ftorrent%22%2C%20%22null%22%5D': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.google.common.base.Joiner joiner0 = com.metamx.druid.loading.S3SegmentPusher.JOINER;
        java.lang.Iterable<org.codehaus.jackson.JsonNode> jsonNodeIterable1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = joiner0.join(jsonNodeIterable1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(joiner0);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder12 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        com.metamx.druid.client.DataSegment.Builder builder17 = builder12.dimensions((java.util.List<java.lang.String>) strList15);
        java.util.List<java.lang.String> strList18 = null;
        com.metamx.druid.shard.ShardSpec shardSpec19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment21 = new com.metamx.druid.client.DataSegment("", interval1, "x-amz-meta-", strMap9, (java.util.List<java.lang.String>) strList15, strList18, shardSpec19, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray3 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enable(featureArray3);
        org.codehaus.jackson.map.ser.FilterProvider filterProvider5 = null;
        objectMapper4.setFilters(filterProvider5);
        org.codehaus.jackson.JsonFactory jsonFactory7 = objectMapper4.getJsonFactory();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7);
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7);
        org.codehaus.jackson.map.Module module10 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.registerModule(module10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(featureArray3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(jsonFactory7);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        org.jets3t.service.security.ProviderCredentials providerCredentials10 = restS3Service9.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager11 = null;
        restS3Service9.setHttpConnectionManager(httpConnectionManager11);
        java.util.List<java.lang.String> strList13 = restS3Service9.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder14 = builder7.dimensions(strList13);
        java.lang.String[] strArray16 = new java.lang.String[] { "[\"content-length-range\", 58, 1]" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        com.metamx.druid.shard.ShardSpec shardSpec19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment21 = new com.metamx.druid.client.DataSegment("http://s3.amazonaws.com//hi%21?torrent", interval1, "", strMap6, strList13, (java.util.List<java.lang.String>) strList17, shardSpec19, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(providerCredentials10);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.joda.time.Interval interval1 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        com.metamx.druid.client.DataSegment.Builder builder4 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        com.metamx.druid.client.DataSegment.Builder builder9 = builder4.dimensions((java.util.List<java.lang.String>) strList7);
        com.metamx.druid.client.DataSegment.Builder builder11 = builder9.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.shard.ShardSpec shardSpec12 = null;
        com.metamx.druid.client.DataSegment.Builder builder13 = builder9.shardSpec(shardSpec12);
        com.metamx.druid.client.DataSegment.Builder builder15 = builder9.version("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
        com.metamx.druid.client.DataSegment.Builder builder16 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        com.metamx.druid.client.DataSegment.Builder builder21 = builder16.dimensions((java.util.List<java.lang.String>) strList19);
        com.metamx.druid.client.DataSegment.Builder builder23 = builder21.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder25 = builder23.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder26 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        com.metamx.druid.client.DataSegment.Builder builder31 = builder26.dimensions((java.util.List<java.lang.String>) strList29);
        com.metamx.druid.client.DataSegment.Builder builder32 = builder25.metrics((java.util.List<java.lang.String>) strList29);
        com.metamx.druid.client.DataSegment.Builder builder33 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        com.metamx.druid.client.DataSegment.Builder builder38 = builder33.dimensions((java.util.List<java.lang.String>) strList36);
        com.metamx.druid.client.DataSegment.Builder builder39 = builder32.metrics((java.util.List<java.lang.String>) strList36);
        com.metamx.druid.client.DataSegment.Builder builder40 = builder9.metrics((java.util.List<java.lang.String>) strList36);
        com.metamx.druid.client.DataSegment.Builder builder41 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder43 = builder41.size(0L);
        com.metamx.druid.client.DataSegment.Builder builder44 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials45 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service46 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials45);
        org.jets3t.service.security.ProviderCredentials providerCredentials47 = restS3Service46.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager48 = null;
        restS3Service46.setHttpConnectionManager(httpConnectionManager48);
        java.util.List<java.lang.String> strList50 = restS3Service46.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder51 = builder44.dimensions(strList50);
        com.metamx.druid.client.DataSegment.Builder builder52 = builder43.dimensions(strList50);
        com.metamx.druid.shard.ShardSpec shardSpec53 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment55 = new com.metamx.druid.client.DataSegment("", interval1, "", strMap3, (java.util.List<java.lang.String>) strList36, strList50, shardSpec53, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(providerCredentials47);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        org.codehaus.jackson.map.type.TypeFactory typeFactory11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper8.setTypeFactory(typeFactory11);
        org.codehaus.jackson.map.PropertyNamingStrategy propertyNamingStrategy13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = objectMapper8.setPropertyNamingStrategy(propertyNamingStrategy13);
        java.io.Reader reader15 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper16.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper18.disableDefaultTyping();
        java.io.File file22 = new java.io.File("hi!");
        java.io.File file24 = new java.io.File(file22, "");
        java.lang.Class<?> wildcardClass25 = file22.getClass();
        org.codehaus.jackson.type.JavaType javaType26 = objectMapper20.constructType((java.lang.reflect.Type) wildcardClass25);
        com.metamx.emitter.EmittingLogger emittingLogger27 = new com.metamx.emitter.EmittingLogger((java.lang.Class) wildcardClass25);
        org.codehaus.jackson.type.JavaType javaType28 = objectMapper16.constructType((java.lang.reflect.Type) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = objectMapper14.readValue(reader15, javaType28);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: No content to map to Object due to end of input");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNull("file22.getParent() == null", file22.getParent());
        org.junit.Assert.assertEquals(file22.toString(), "hi!");
        org.junit.Assert.assertNull("file24.getParent() == null", file24.getParent());
        org.junit.Assert.assertEquals(file24.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(javaType26);
        org.junit.Assert.assertNotNull(javaType28);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteObjectWithSignedUrl("");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error: java.lang.IllegalArgumentException: host parameter is null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.lang.Object obj3 = null;
        java.lang.String str4 = objectMapper0.writeValueAsString(obj3);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = objectMapper0.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper0.disableDefaultTyping();
        java.text.DateFormat dateFormat7 = null;
        objectMapper6.setDateFormat(dateFormat7);
        java.io.Writer writer9 = null;
        java.io.File file11 = new java.io.File("hi!");
        boolean boolean12 = file11.mkdirs();
        // The following exception was thrown during execution in test generation
        try {
            objectMapper6.writeValue(writer9, (java.lang.Object) boolean12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "null" + "'", str4, "null");
        org.junit.Assert.assertNotNull(deserializerProvider5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray13 = restS3Service1.listObjects("http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "{\"\": \"s3.amazonaws.com\"}/hi!", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", 10L);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema2 = null;
        org.codehaus.jackson.map.ObjectReader objectReader3 = objectMapper0.schemaBasedReader(formatSchema2);
        byte[] byteArray5 = objectMapper0.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray6 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper0.disable(featureArray6);
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper10.disableDefaultTyping();
        java.io.File file14 = new java.io.File("hi!");
        java.io.File file16 = new java.io.File(file14, "");
        java.lang.Class<?> wildcardClass17 = file14.getClass();
        org.codehaus.jackson.type.JavaType javaType18 = objectMapper12.constructType((java.lang.reflect.Type) wildcardClass17);
        com.metamx.emitter.EmittingLogger emittingLogger19 = new com.metamx.emitter.EmittingLogger((java.lang.Class) wildcardClass17);
        org.codehaus.jackson.type.JavaType javaType20 = objectMapper8.constructType((java.lang.reflect.Type) wildcardClass17);
        org.codehaus.jackson.map.ObjectReader objectReader21 = objectMapper0.reader(javaType20);
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectReader3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[49, 48]");
        org.junit.Assert.assertNotNull(featureArray6);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull("file14.getParent() == null", file14.getParent());
        org.junit.Assert.assertEquals(file14.toString(), "hi!");
        org.junit.Assert.assertNull("file16.getParent() == null", file16.getParent());
        org.junit.Assert.assertEquals(file16.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(javaType18);
        org.junit.Assert.assertNotNull(javaType20);
        org.junit.Assert.assertNotNull(objectReader21);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        boolean boolean4 = restS3Service1.isRequesterPaysEnabled();
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        java.util.Calendar calendar7 = null;
        java.util.Calendar calendar8 = null;
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.String[] strArray11 = new java.lang.String[] { "s3.amazonaws.com" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object12 = restS3Service1.getObjectDetails(s3Bucket5, "", calendar7, calendar8, strArray9, strArray11);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Object Details cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        org.jets3t.service.Jets3tProperties jets3tProperties11 = restS3Service7.getJetS3tProperties();
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", credentialsProvider5, jets3tProperties11);
        org.apache.commons.httpclient.HostConfiguration hostConfiguration13 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com//hi%21?torrent", credentialsProvider2, jets3tProperties11, hostConfiguration13);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service14.suspendBucketVersioningWithMFA("<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "/");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(jets3tProperties11);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket s3Bucket18 = restS3Service1.getOrCreateBucket("null");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: Get or Create Bucket with location");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.joda.time.DateTime dateTime1 = null;
        org.joda.time.DateTime dateTime2 = null;
        com.metamx.druid.shard.ShardSpec shardSpec4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = com.metamx.druid.client.DataSegment.makeDataSegmentIdentifier("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", dateTime1, dateTime2, "null", shardSpec4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        org.codehaus.jackson.map.type.TypeFactory typeFactory11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper8.setTypeFactory(typeFactory11);
        org.codehaus.jackson.map.ObjectMapper.DefaultTyping defaultTyping13 = null;
        org.codehaus.jackson.annotate.JsonTypeInfo.As as14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper8.enableDefaultTyping(defaultTyping13, as14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        org.jets3t.service.model.S3Bucket s3Bucket17 = null;
        java.util.Calendar calendar19 = null;
        java.util.Calendar calendar20 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "http://s3.amazonaws.com//?torrent", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "s3.amazonaws.com" };
        java.lang.String[] strArray29 = new java.lang.String[] { "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "http://s3.amazonaws.com//hi%21?torrent", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "[\"content-length-range\", 58, 1]" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object30 = restS3Service1.getVersionedObjectDetails("", s3Bucket17, ":", calendar19, calendar20, strArray24, strArray29);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Versioned Object Details cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        org.apache.commons.httpclient.HttpMethod httpMethod7 = null;
        restS3Service1.authorizeHttpRequest(httpMethod7);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3BucketLoggingStatus s3BucketLoggingStatus10 = restS3Service1.getBucketLoggingStatus("{\"\": \"s3.amazonaws.com\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"\": \"s3.amazonaws.com\"}/?logging': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        boolean boolean4 = restS3Service1.isShutdown();
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        java.util.Calendar calendar7 = null;
        java.util.Calendar calendar8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]" };
        java.lang.String[] strArray15 = new java.lang.String[] { "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object16 = restS3Service1.getObjectDetails(s3Bucket5, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", calendar7, calendar8, strArray10, strArray15);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get Object Details cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file2 = java.io.File.createTempFile("hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Unable to create temporary file, /tmp/hi!9088332665311912720/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        org.jets3t.service.model.StorageBucket storageBucket17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.StorageBucket storageBucket18 = restS3Service1.createBucket(storageBucket17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        java.util.Date date8 = restS3Service4.getCurrentTimeWithOffset();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "hi!", "http://s3.amazonaws.com//hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}/hi!" };
        java.lang.String[] strArray17 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}/hi!" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = org.jets3t.service.S3Service.buildPostForm("<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "s3.amazonaws.com", providerCredentials2, date8, strArray15, strArray17, "http://s3.amazonaws.com//hi%21?torrent", true, false, "/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(date8);
// flaky:         org.junit.Assert.assertEquals(date8.toString(), "Thu Nov 04 08:16:54 BRT 2021");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        java.lang.Object obj7 = null;
        java.lang.String str8 = objectMapper4.writeValueAsString(obj7);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = objectMapper4.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider14 = objectMapper11.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider15 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory10, serializerProvider14, deserializerProvider15);
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper4.setSerializerProvider(serializerProvider14);
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper18.setAnnotationIntrospector(annotationIntrospector19);
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = objectMapper21.disableDefaultTyping();
        java.lang.Object obj24 = null;
        java.lang.String str25 = objectMapper21.writeValueAsString(obj24);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider26 = objectMapper21.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory27 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider32 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper33 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory27, serializerProvider31, deserializerProvider32);
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper21.setSerializerProvider(serializerProvider31);
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = objectMapper35.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = objectMapper35.disableDefaultTyping();
        java.lang.Object obj38 = null;
        java.lang.String str39 = objectMapper35.writeValueAsString(obj38);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider40 = objectMapper35.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory41 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider45 = objectMapper42.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider46 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory41, serializerProvider45, deserializerProvider46);
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper35.setSerializerProvider(serializerProvider45);
        org.jets3t.service.security.ProviderCredentials providerCredentials49 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider51 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials52 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service53 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials52);
        org.jets3t.service.security.ProviderCredentials providerCredentials54 = restS3Service53.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager55 = null;
        restS3Service53.setHttpConnectionManager(httpConnectionManager55);
        org.jets3t.service.Jets3tProperties jets3tProperties57 = restS3Service53.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration58 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service59 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials49, "", credentialsProvider51, jets3tProperties57, hostConfiguration58);
        java.lang.Object[] objArray60 = new java.lang.Object[] { objectMapper4, objectMapper18, objectMapper21, serializerProvider45, restS3Service59 };
        emittingLogger1.warn(throwable2, "s3.amazonaws.com", objArray60);
        java.lang.Throwable throwable62 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials64 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service65 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials64);
        org.jets3t.service.security.ProviderCredentials providerCredentials66 = restS3Service65.getProviderCredentials();
        java.lang.String str67 = restS3Service65.getInvokingApplicationDescription();
        restS3Service65.setRequesterPaysEnabled(false);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig70 = null;
        org.codehaus.jackson.JsonFactory jsonFactory71 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper72 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = objectMapper72.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper74 = objectMapper72.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider75 = objectMapper72.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider76 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper77 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory71, serializerProvider75, deserializerProvider76);
        org.codehaus.jackson.map.SerializerFactory serializerFactory78 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper79 = objectMapper77.setSerializerFactory(serializerFactory78);
        org.codehaus.jackson.PrettyPrinter prettyPrinter80 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter81 = objectMapper79.prettyPrintingWriter(prettyPrinter80);
        org.codehaus.jackson.map.ObjectMapper objectMapper82 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper83 = objectMapper82.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper84 = objectMapper82.disableDefaultTyping();
        java.io.File file86 = new java.io.File("hi!");
        java.io.File file88 = new java.io.File(file86, "");
        java.lang.Class<?> wildcardClass89 = file86.getClass();
        org.codehaus.jackson.type.JavaType javaType90 = objectMapper84.constructType((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = objectMapper79.canDeserialize(javaType90);
        org.codehaus.jackson.map.ser.FilterProvider filterProvider92 = null;
        objectMapper79.setFilters(filterProvider92);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher94 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service65, s3SegmentPusherConfig70, objectMapper79);
        org.codehaus.jackson.map.DeserializationConfig.Feature[] featureArray95 = new org.codehaus.jackson.map.DeserializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper96 = objectMapper79.disable(featureArray95);
        // The following exception was thrown during execution in test generation
        try {
            emittingLogger1.error(throwable62, "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", (java.lang.Object[]) featureArray95);
            org.junit.Assert.fail("Expected exception of type java.util.UnknownFormatConversionException; message: Conversion = '2'");
        } catch (java.util.UnknownFormatConversionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(deserializerProvider9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializerProvider14);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "null" + "'", str25, "null");
        org.junit.Assert.assertNotNull(deserializerProvider26);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "null" + "'", str39, "null");
        org.junit.Assert.assertNotNull(deserializerProvider40);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(serializerProvider45);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNull(providerCredentials54);
        org.junit.Assert.assertNotNull(jets3tProperties57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNull(providerCredentials66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(serializerProvider75);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(objectWriter81);
        org.junit.Assert.assertNotNull(objectMapper83);
        org.junit.Assert.assertNotNull(objectMapper84);
        org.junit.Assert.assertNull("file86.getParent() == null", file86.getParent());
        org.junit.Assert.assertEquals(file86.toString(), "hi!");
        org.junit.Assert.assertNull("file88.getParent() == null", file88.getParent());
        org.junit.Assert.assertEquals(file88.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(javaType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(featureArray95);
        org.junit.Assert.assertNotNull(objectMapper96);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray17 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = objectMapper14.enable(featureArray17);
        org.codehaus.jackson.map.ser.FilterProvider filterProvider19 = null;
        objectMapper18.setFilters(filterProvider19);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher21 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig13, objectMapper18);
        org.jets3t.service.model.S3Bucket s3Bucket22 = null;
        org.jets3t.service.model.S3Object s3Object23 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putObjectAcl(s3Bucket22, s3Object23);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        boolean boolean5 = restS3Service1.isShutdown();
        restS3Service1.setRequesterPaysEnabled(false);
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = restS3Service13.renameMetadataKeys(strMap14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = restS3Service1.createSignedUrl("", "x-amz-meta-", "hi!", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", strMap15, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        java.io.File file19 = new java.io.File("http://s3.amazonaws.com//hi%21?torrent", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        com.metamx.druid.client.DataSegment dataSegment20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment21 = s3SegmentPusher16.push(file19, dataSegment20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertEquals(file19.getParent(), "http:/s3.amazonaws.com/hi%21?torrent/<form action=\"https:/http:/s3.amazonaws.com/hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file19.toString(), "http:/s3.amazonaws.com/hi%21?torrent/<form action=\"https:/http:/s3.amazonaws.com/hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.google.common.base.Joiner joiner1 = com.google.common.base.Joiner.on("http://s3.amazonaws.com//?torrent");
        com.google.common.base.Joiner.MapJoiner mapJoiner3 = joiner1.withKeyValueSeparator("http://s3.amazonaws.com//?torrent");
        com.metamx.emitter.EmittingLogger emittingLogger5 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Throwable throwable6 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode11 = objectMapper10.createObjectNode();
        java.lang.Object[] objArray12 = new java.lang.Object[] { providerCredentials8, objectMapper10 };
        emittingLogger5.info(throwable6, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = joiner1.join(objArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(joiner1);
        org.junit.Assert.assertNotNull(mapJoiner3);
        org.junit.Assert.assertNotNull(objectNode11);
        org.junit.Assert.assertNotNull(objArray12);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder8 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder10 = builder8.size(0L);
        com.metamx.druid.client.DataSegment.Builder builder11 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12);
        org.jets3t.service.security.ProviderCredentials providerCredentials14 = restS3Service13.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager15 = null;
        restS3Service13.setHttpConnectionManager(httpConnectionManager15);
        java.util.List<java.lang.String> strList17 = restS3Service13.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder18 = builder11.dimensions(strList17);
        com.metamx.druid.client.DataSegment.Builder builder19 = builder10.dimensions(strList17);
        java.lang.String str20 = org.jets3t.service.S3Service.generatePostPolicyCondition_Equality("{\"\": \"s3.amazonaws.com\"}", strList17);
        org.jets3t.service.security.ProviderCredentials providerCredentials21 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service22 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials21);
        org.jets3t.service.security.ProviderCredentials providerCredentials23 = restS3Service22.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager24 = null;
        restS3Service22.setHttpConnectionManager(httpConnectionManager24);
        java.util.List<java.lang.String> strList26 = restS3Service22.getResourceParameterNames();
        com.metamx.druid.shard.ShardSpec shardSpec27 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment29 = new com.metamx.druid.client.DataSegment("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", interval1, "", strMap5, strList17, strList26, shardSpec27, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(providerCredentials14);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}" + "'", str20, "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}");
        org.junit.Assert.assertNull(providerCredentials23);
        org.junit.Assert.assertNotNull(strList26);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = com.metamx.druid.client.DataSegment.builder();
        com.metamx.druid.client.DataSegment.Builder builder8 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        com.metamx.druid.client.DataSegment.Builder builder13 = builder8.dimensions((java.util.List<java.lang.String>) strList11);
        com.metamx.druid.client.DataSegment.Builder builder15 = builder13.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder17 = builder15.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder18 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        com.metamx.druid.client.DataSegment.Builder builder23 = builder18.dimensions((java.util.List<java.lang.String>) strList21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder17.metrics((java.util.List<java.lang.String>) strList21);
        com.metamx.druid.client.DataSegment.Builder builder25 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        com.metamx.druid.client.DataSegment.Builder builder30 = builder25.dimensions((java.util.List<java.lang.String>) strList28);
        com.metamx.druid.client.DataSegment.Builder builder31 = builder24.metrics((java.util.List<java.lang.String>) strList28);
        com.metamx.druid.client.DataSegment.Builder builder32 = builder7.metrics((java.util.List<java.lang.String>) strList28);
        org.jets3t.service.security.ProviderCredentials providerCredentials33 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service34 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials33);
        org.jets3t.service.security.ProviderCredentials providerCredentials35 = restS3Service34.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager36 = null;
        restS3Service34.setHttpConnectionManager(httpConnectionManager36);
        java.util.List<java.lang.String> strList38 = restS3Service34.getResourceParameterNames();
        com.metamx.druid.shard.ShardSpec shardSpec39 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment41 = new com.metamx.druid.client.DataSegment("{\"\": \"s3.amazonaws.com\"}", interval1, "{\"\": \"s3.amazonaws.com\"}", strMap6, (java.util.List<java.lang.String>) strList28, strList38, shardSpec39, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(providerCredentials35);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig2 = null;
        org.codehaus.jackson.JsonFactory jsonFactory3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider7 = objectMapper4.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider8 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory3, serializerProvider7, deserializerProvider8);
        org.codehaus.jackson.map.SerializerFactory serializerFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper9.setSerializerFactory(serializerFactory10);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher12 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig2, objectMapper9);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig13 = null;
        org.codehaus.jackson.JsonFactory jsonFactory14 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider15 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider16 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig17 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig18 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory14, serializerProvider15, deserializerProvider16, serializationConfig17, deserializationConfig18);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider20 = objectMapper19.getDeserializerProvider();
        org.codehaus.jackson.node.ArrayNode arrayNode21 = objectMapper19.createArrayNode();
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher22 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig13, objectMapper19);
        org.codehaus.jackson.map.ObjectMapper.DefaultTyping defaultTyping23 = null;
        org.codehaus.jackson.annotate.JsonTypeInfo.As as24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper25 = objectMapper19.enableDefaultTyping(defaultTyping23, as24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializerProvider7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializerProvider20);
        org.junit.Assert.assertNotNull(arrayNode21);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.google.common.base.Joiner joiner1 = com.google.common.base.Joiner.on('/');
        java.lang.StringBuilder stringBuilder2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper3.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper3.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray6 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper3.enable(featureArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuilder stringBuilder8 = joiner1.appendTo(stringBuilder2, (java.lang.Object[]) featureArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(joiner1);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(featureArray6);
        org.junit.Assert.assertNotNull(objectMapper7);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        boolean boolean9 = restS3Service1.isShutdown();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.setBucketPolicy("", "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.metamx.druid.client.DataSegment dataSegment0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment.Builder builder1 = com.metamx.druid.client.DataSegment.builder(dataSegment0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.lang.String str1 = org.jets3t.service.S3Service.generatePostPolicyCondition_AllowAnyValue("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]" + "'", str1, "[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        org.jets3t.service.model.S3Bucket s3Bucket6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray9 = restS3Service1.listObjects(s3Bucket6, ":", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action listObjects cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode1 = objectMapper0.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema2 = null;
        org.codehaus.jackson.map.ObjectReader objectReader3 = objectMapper0.schemaBasedReader(formatSchema2);
        byte[] byteArray5 = objectMapper0.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.FormatSchema formatSchema6 = null;
        org.codehaus.jackson.map.ObjectReader objectReader7 = objectMapper0.reader(formatSchema6);
        java.text.DateFormat dateFormat8 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter9 = objectMapper0.writer(dateFormat8);
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory12 = objectMapper10.getNodeFactory();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper0.setNodeFactory(jsonNodeFactory12);
        java.io.File file15 = new java.io.File("hi!");
        java.io.File file17 = new java.io.File(file15, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        boolean boolean18 = file15.setReadOnly();
        java.lang.String str19 = file15.getPath();
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        org.codehaus.jackson.node.JsonNodeFactory jsonNodeFactory22 = objectMapper20.getNodeFactory();
        org.codehaus.jackson.FormatSchema formatSchema23 = null;
        org.codehaus.jackson.map.ObjectReader objectReader24 = objectMapper20.reader(formatSchema23);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper0.writeValue(file15, (java.lang.Object) objectMapper20);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi! (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectNode1);
        org.junit.Assert.assertNotNull(objectReader3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[49, 48]");
        org.junit.Assert.assertNotNull(objectReader7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(jsonNodeFactory12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNull("file15.getParent() == null", file15.getParent());
        org.junit.Assert.assertEquals(file15.toString(), "hi!");
        org.junit.Assert.assertEquals(file17.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file17.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(jsonNodeFactory22);
        org.junit.Assert.assertNotNull(objectReader24);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        java.lang.Object obj7 = null;
        java.lang.String str8 = objectMapper4.writeValueAsString(obj7);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = objectMapper4.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider14 = objectMapper11.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider15 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory10, serializerProvider14, deserializerProvider15);
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper4.setSerializerProvider(serializerProvider14);
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper18.setAnnotationIntrospector(annotationIntrospector19);
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = objectMapper21.disableDefaultTyping();
        java.lang.Object obj24 = null;
        java.lang.String str25 = objectMapper21.writeValueAsString(obj24);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider26 = objectMapper21.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory27 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider32 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper33 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory27, serializerProvider31, deserializerProvider32);
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper21.setSerializerProvider(serializerProvider31);
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = objectMapper35.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = objectMapper35.disableDefaultTyping();
        java.lang.Object obj38 = null;
        java.lang.String str39 = objectMapper35.writeValueAsString(obj38);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider40 = objectMapper35.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory41 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider45 = objectMapper42.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider46 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory41, serializerProvider45, deserializerProvider46);
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper35.setSerializerProvider(serializerProvider45);
        org.jets3t.service.security.ProviderCredentials providerCredentials49 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider51 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials52 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service53 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials52);
        org.jets3t.service.security.ProviderCredentials providerCredentials54 = restS3Service53.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager55 = null;
        restS3Service53.setHttpConnectionManager(httpConnectionManager55);
        org.jets3t.service.Jets3tProperties jets3tProperties57 = restS3Service53.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration58 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service59 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials49, "", credentialsProvider51, jets3tProperties57, hostConfiguration58);
        java.lang.Object[] objArray60 = new java.lang.Object[] { objectMapper4, objectMapper18, objectMapper21, serializerProvider45, restS3Service59 };
        emittingLogger1.warn(throwable2, "s3.amazonaws.com", objArray60);
        com.metamx.emitter.EmittingLogger emittingLogger64 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable65 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper67 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper68 = objectMapper67.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper69 = objectMapper67.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray70 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper71 = objectMapper67.enable(featureArray70);
        emittingLogger64.warn(throwable65, "", (java.lang.Object[]) featureArray70);
        // The following exception was thrown during execution in test generation
        try {
            emittingLogger1.error("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", (java.lang.Object[]) featureArray70);
            org.junit.Assert.fail("Expected exception of type java.util.UnknownFormatConversionException; message: Conversion = 'F'");
        } catch (java.util.UnknownFormatConversionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(deserializerProvider9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializerProvider14);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "null" + "'", str25, "null");
        org.junit.Assert.assertNotNull(deserializerProvider26);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "null" + "'", str39, "null");
        org.junit.Assert.assertNotNull(deserializerProvider40);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(serializerProvider45);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNull(providerCredentials54);
        org.junit.Assert.assertNotNull(jets3tProperties57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertNotNull(featureArray70);
        org.junit.Assert.assertNotNull(objectMapper71);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode15 = objectMapper14.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema16 = null;
        org.codehaus.jackson.map.ObjectReader objectReader17 = objectMapper14.schemaBasedReader(formatSchema16);
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode19 = objectMapper18.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema20 = null;
        org.codehaus.jackson.map.ObjectReader objectReader21 = objectMapper18.schemaBasedReader(formatSchema20);
        byte[] byteArray23 = objectMapper18.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode24 = objectMapper14.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser25 = objectMapper13.treeAsTokens(jsonNode24);
        org.codehaus.jackson.JsonNode jsonNode26 = objectMapper6.readTree(jsonParser25);
        org.codehaus.jackson.map.ObjectMapper objectMapper27 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode28 = objectMapper27.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema29 = null;
        org.codehaus.jackson.map.ObjectReader objectReader30 = objectMapper27.schemaBasedReader(formatSchema29);
        byte[] byteArray32 = objectMapper27.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonFactory jsonFactory35 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = objectMapper36.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = objectMapper36.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider39 = objectMapper36.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider40 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper41 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory35, serializerProvider39, deserializerProvider40);
        org.codehaus.jackson.map.SerializerFactory serializerFactory42 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = objectMapper41.setSerializerFactory(serializerFactory42);
        org.codehaus.jackson.PrettyPrinter prettyPrinter44 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter45 = objectMapper43.prettyPrintingWriter(prettyPrinter44);
        org.codehaus.jackson.map.ObjectMapper objectMapper46 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = objectMapper46.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper46.disableDefaultTyping();
        java.io.File file50 = new java.io.File("hi!");
        java.io.File file52 = new java.io.File(file50, "");
        java.lang.Class<?> wildcardClass53 = file50.getClass();
        org.codehaus.jackson.type.JavaType javaType54 = objectMapper48.constructType((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = objectMapper43.canDeserialize(javaType54);
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.EmittingLogger emittingLogger56 = objectMapper6.readValue(byteArray32, (int) '/', 11, javaType54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 47");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectNode15);
        org.junit.Assert.assertNotNull(objectReader17);
        org.junit.Assert.assertNotNull(objectNode19);
        org.junit.Assert.assertNotNull(objectReader21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode24);
        org.junit.Assert.assertNotNull(jsonParser25);
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(objectNode28);
        org.junit.Assert.assertNotNull(objectReader30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[49, 48]");
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(serializerProvider39);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNull("file50.getParent() == null", file50.getParent());
        org.junit.Assert.assertEquals(file50.toString(), "hi!");
        org.junit.Assert.assertNull("file52.getParent() == null", file52.getParent());
        org.junit.Assert.assertEquals(file52.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.io.File file1 = new java.io.File("hi!");
        boolean boolean2 = file1.canRead();
        boolean boolean3 = file1.mkdirs();
        boolean boolean6 = file1.setExecutable(false, true);
        boolean boolean7 = file1.createNewFile();
        java.io.File file9 = new java.io.File("hi!");
        java.io.File file11 = new java.io.File(file9, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        java.io.File file13 = new java.io.File(file11, "");
        int int14 = file1.compareTo(file11);
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), "hi!");
        org.junit.Assert.assertEquals(file11.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file11.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertEquals(file13.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file13.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-226) + "'", int14 == (-226));
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object21 = restS3Service1.getVersionedObjectDetails("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "hi!", "{\"\": \"s3.amazonaws.com\"}/hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Request Error.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getRestMetadataPrefix();
        boolean boolean5 = restS3Service1.isShutdown();
        restS3Service1.setRequesterPaysEnabled(false);
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = restS3Service13.renameMetadataKeys(strMap14);
        org.jets3t.service.security.ProviderCredentials providerCredentials16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = restS3Service1.createSignedUrl("/", "{\"\": \"s3.amazonaws.com\"}/hi!", "http://s3.amazonaws.com//?torrent", "http://s3.amazonaws.com//hi%21?torrent", strMap14, providerCredentials16, (long) '/', false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "x-amz-meta-" + "'", str4, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        boolean boolean6 = restS3Service1.isRequesterPaysEnabled();
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider7 = restS3Service1.getCredentialsProvider();
        org.jets3t.service.model.S3Object s3Object12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap14 = restS3Service1.copyVersionedObject("{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}", "{\"\": \"s3.amazonaws.com\"}", "{\"\": \"s3.amazonaws.com\"}", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", s3Object12, false);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyVersionedObject");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(credentialsProvider7);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7, "null", credentialsProvider9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = restS3Service12.renameMetadataKeys(strMap13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = restS3Service10.renameMetadataKeys(strMap13);
        org.jets3t.service.security.ProviderCredentials providerCredentials16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = restS3Service1.createSignedUrl("{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "", "/", "http://s3.amazonaws.com.s3.amazonaws.com/?torrent", strMap13, providerCredentials16, (long) (-226));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        java.util.Calendar calendar9 = null;
        java.util.Calendar calendar10 = null;
        java.lang.String[] strArray11 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object17 = restS3Service1.getVersionedObjectDetails("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "x-amz-meta-", calendar9, calendar10, strArray11, strArray16);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Request Error.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.NotificationConfig notificationConfig17 = restS3Service1.getNotificationConfig("http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager4 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.jets3t.service.model.MultipartUpload> multipartUploadList7 = restS3Service1.multipartListUploads("s3.amazonaws.com");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.File file4 = new java.io.File("hi!");
        java.io.File file6 = new java.io.File(file4, "");
        java.lang.Class<?> wildcardClass7 = file4.getClass();
        org.codehaus.jackson.type.JavaType javaType8 = objectMapper2.constructType((java.lang.reflect.Type) wildcardClass7);
        org.codehaus.jackson.map.SerializationConfig serializationConfig9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper2.setSerializationConfig(serializationConfig9);
        java.io.File file11 = null;
        java.io.File file13 = new java.io.File(file11, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.JsonNode jsonNode14 = objectMapper10.readTree(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNull("file4.getParent() == null", file4.getParent());
        org.junit.Assert.assertEquals(file4.toString(), "hi!");
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(javaType8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertEquals(file13.getParent(), "http:/s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent");
        org.junit.Assert.assertEquals(file13.toString(), "http:/s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.lang.String str2 = org.jets3t.service.S3Service.generatePostPolicyCondition_Range((-226), (-226));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[\"content-length-range\", -226, -226]" + "'", str2, "[\"content-length-range\", -226, -226]");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "s3.amazonaws.com", credentialsProvider2);
        org.apache.commons.httpclient.HttpMethod httpMethod4 = null;
        restS3Service3.authorizeHttpRequest(httpMethod4);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = restS3Service10.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager12 = null;
        restS3Service10.setHttpConnectionManager(httpConnectionManager12);
        java.util.Date date14 = restS3Service10.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = restS3Service3.createSignedHeadUrl("[\"content-length-range\", 58, 1]", "null", providerCredentials8, date14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials11);
        org.junit.Assert.assertNotNull(date14);
// flaky:         org.junit.Assert.assertEquals(date14.toString(), "Thu Nov 04 08:16:58 BRT 2021");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.io.File file1 = new java.io.File("");
        java.lang.String str2 = file1.toString();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.jets3t.service.model.S3Object s3Object11 = null;
        java.util.Calendar calendar13 = null;
        java.util.Calendar calendar14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", ":" };
        java.lang.String[] strArray22 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}/hi!", "[\"content-length-range\", -226, -226]" };
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap23 = restS3Service1.copyVersionedObject("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "/", "s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}", s3Object11, false, calendar13, calendar14, strArray19, strArray22);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyVersionedObject");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.jsontype.SubtypeResolver subtypeResolver7 = null;
        objectMapper6.setSubtypeResolver(subtypeResolver7);
        org.codehaus.jackson.map.SerializationConfig.Feature feature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper6.configure(feature9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.BaseVersionOrDeleteMarker[] baseVersionOrDeleteMarkerArray8 = restS3Service1.getObjectVersions("{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "http://s3.amazonaws.com//hi%21?torrent");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}/&max-keys=1000&versions&prefix=http%3A%2F%2Fs3.amazonaws.com%2F%2Fhi%2521%3Ftorrent': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter2 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper0.writer(prettyPrinter2);
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper0.enableDefaultTyping();
        org.codehaus.jackson.map.DeserializationConfig.Feature[] featureArray5 = new org.codehaus.jackson.map.DeserializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper0.enable(featureArray5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.lang.String str9 = restS3Service8.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig10 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service12 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials11);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig13 = null;
        org.codehaus.jackson.JsonFactory jsonFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper15.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper15.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider18 = objectMapper15.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory14, serializerProvider18, deserializerProvider19);
        org.codehaus.jackson.map.SerializerFactory serializerFactory21 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper20.setSerializerFactory(serializerFactory21);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher23 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service12, s3SegmentPusherConfig13, objectMapper20);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher24 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service8, s3SegmentPusherConfig10, objectMapper20);
        org.codehaus.jackson.map.ObjectReader objectReader25 = objectMapper0.updatingReader((java.lang.Object) objectMapper20);
        org.codehaus.jackson.FormatSchema formatSchema26 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter27 = objectMapper0.schemaBasedWriter(formatSchema26);
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(featureArray5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializerProvider18);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectReader25);
        org.junit.Assert.assertNotNull(objectWriter27);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.JsonParser.Feature feature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = objectMapper8.isEnabled(feature9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service18 = s3SegmentPusher17.s3Client;
        org.jets3t.service.security.ProviderCredentials providerCredentials19 = restS3Service18.getAWSCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray24 = restS3Service18.listObjects("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", "s3.amazonaws.com", "/", (long) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>\", \"\"]/?max-keys=5&prefix=s3.amazonaws.com&delimiter=%2F': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(restS3Service18);
        org.junit.Assert.assertNull(providerCredentials19);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.io.File file1 = new java.io.File("hi!");
        boolean boolean2 = file1.createNewFile();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider13 = objectMapper12.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper14.disableDefaultTyping();
        java.lang.Object obj17 = null;
        java.lang.String str18 = objectMapper14.writeValueAsString(obj17);
        com.metamx.druid.client.DataSegment.Builder builder19 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder19.dimensions((java.util.List<java.lang.String>) strList22);
        com.metamx.emitter.EmittingLogger emittingLogger26 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray28 = new java.lang.Object[] { objectMapper4, deserializerProvider13, objectMapper14, strList22, emittingLogger26, (byte) 1 };
        emittingLogger1.error(throwable2, "{\"\": \"s3.amazonaws.com\"}", objArray28);
        java.lang.Throwable throwable30 = null;
        java.io.File file33 = new java.io.File("hi!");
        java.io.File file35 = new java.io.File(file33, "");
        java.io.File file36 = file33.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode38 = objectMapper37.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory39 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper41 = objectMapper40.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = objectMapper40.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider43 = objectMapper40.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider44 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper45 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory39, serializerProvider43, deserializerProvider44);
        org.jets3t.service.security.ProviderCredentials providerCredentials46 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service47 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials46);
        org.jets3t.service.security.ProviderCredentials providerCredentials48 = restS3Service47.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager49 = null;
        restS3Service47.setHttpConnectionManager(httpConnectionManager49);
        java.lang.Object[] objArray53 = new java.lang.Object[] { file36, objectMapper37, objectMapper45, restS3Service47, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger1.info(throwable30, "", objArray53);
        org.codehaus.jackson.map.ObjectMapper objectMapper56 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper57 = objectMapper56.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper58 = objectMapper56.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider59 = objectMapper56.getSerializerProvider();
        java.text.DateFormat dateFormat60 = null;
        objectMapper56.setDateFormat(dateFormat60);
        org.codehaus.jackson.node.ArrayNode arrayNode62 = objectMapper56.createArrayNode();
        com.metamx.druid.client.DataSegment.Builder builder63 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder65 = builder63.size(0L);
        java.lang.Object[] objArray66 = new java.lang.Object[] { objectMapper56, builder63 };
        emittingLogger1.trace("null", objArray66);
        java.lang.Throwable throwable68 = null;
        java.lang.Object[] objArray70 = null;
        emittingLogger1.debug(throwable68, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", objArray70);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializerProvider13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "null" + "'", str18, "null");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull("file33.getParent() == null", file33.getParent());
        org.junit.Assert.assertEquals(file33.toString(), "hi!");
        org.junit.Assert.assertNull("file35.getParent() == null", file35.getParent());
        org.junit.Assert.assertEquals(file35.toString(), "hi!");
        org.junit.Assert.assertNotNull(file36);
// flaky:         org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode38);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(serializerProvider43);
        org.junit.Assert.assertNull(providerCredentials48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(serializerProvider59);
        org.junit.Assert.assertNotNull(arrayNode62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(objArray66);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider8 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials9 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service10 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials9);
        org.jets3t.service.security.ProviderCredentials providerCredentials11 = restS3Service10.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager12 = null;
        restS3Service10.setHttpConnectionManager(httpConnectionManager12);
        org.jets3t.service.Jets3tProperties jets3tProperties14 = restS3Service10.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration15 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service16 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6, "", credentialsProvider8, jets3tProperties14, hostConfiguration15);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service17 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "http://s3.amazonaws.com//hi%21?torrent", credentialsProvider5, jets3tProperties14);
        org.apache.commons.httpclient.HostConfiguration hostConfiguration18 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service19 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, ":", credentialsProvider2, jets3tProperties14, hostConfiguration18);
        java.util.Calendar calendar22 = null;
        java.util.Calendar calendar23 = null;
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.String[] strArray31 = new java.lang.String[] { "x-amz-meta-", "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "{\"\": \"s3.amazonaws.com\"}/hi!", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "{\"\": \"s3.amazonaws.com\"}/hi!", "/" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object34 = restS3Service19.getObject("[\"content-length-range\", -226, -226]", "", calendar22, calendar23, strArray24, strArray31, (java.lang.Long) 100L, (java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"content-length-range\", -226, -226]/': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials11);
        org.junit.Assert.assertNotNull(jets3tProperties14);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.PrettyPrinter prettyPrinter9 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter10 = objectMapper8.prettyPrintingWriter(prettyPrinter9);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        java.io.File file15 = new java.io.File("hi!");
        java.io.File file17 = new java.io.File(file15, "");
        java.lang.Class<?> wildcardClass18 = file15.getClass();
        org.codehaus.jackson.type.JavaType javaType19 = objectMapper13.constructType((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = objectMapper8.canDeserialize(javaType19);
        org.codehaus.jackson.map.ser.FilterProvider filterProvider21 = null;
        objectMapper8.setFilters(filterProvider21);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider23 = objectMapper8.getDeserializerProvider();
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNull("file15.getParent() == null", file15.getParent());
        org.junit.Assert.assertEquals(file15.toString(), "hi!");
        org.junit.Assert.assertNull("file17.getParent() == null", file17.getParent());
        org.junit.Assert.assertEquals(file17.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(javaType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(deserializerProvider23);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper2.disableDefaultTyping();
        java.io.File file6 = new java.io.File("hi!");
        java.io.File file8 = new java.io.File(file6, "");
        java.lang.Class<?> wildcardClass9 = file6.getClass();
        org.codehaus.jackson.type.JavaType javaType10 = objectMapper4.constructType((java.lang.reflect.Type) wildcardClass9);
        com.metamx.emitter.EmittingLogger emittingLogger11 = new com.metamx.emitter.EmittingLogger((java.lang.Class) wildcardClass9);
        org.codehaus.jackson.type.JavaType javaType12 = objectMapper0.constructType((java.lang.reflect.Type) wildcardClass9);
        com.metamx.emitter.EmittingLogger emittingLogger13 = new com.metamx.emitter.EmittingLogger((java.lang.Class) wildcardClass9);
        java.lang.Throwable throwable14 = null;
        com.metamx.emitter.EmittingLogger emittingLogger17 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Throwable throwable18 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials20 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service21 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials20);
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode23 = objectMapper22.createObjectNode();
        java.lang.Object[] objArray24 = new java.lang.Object[] { providerCredentials20, objectMapper22 };
        emittingLogger17.info(throwable18, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", objArray24);
        java.lang.Throwable throwable26 = null;
        org.codehaus.jackson.JsonFactory jsonFactory29 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = objectMapper30.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider33 = objectMapper30.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider34 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory29, serializerProvider33, deserializerProvider34);
        org.codehaus.jackson.map.jsontype.SubtypeResolver subtypeResolver36 = null;
        objectMapper35.setSubtypeResolver(subtypeResolver36);
        org.codehaus.jackson.map.SerializationConfig serializationConfig38 = objectMapper35.getSerializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.PrettyPrinter prettyPrinter40 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter41 = objectMapper39.prettyPrintingWriter(prettyPrinter40);
        org.jets3t.service.security.ProviderCredentials providerCredentials42 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service43 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials42);
        org.jets3t.service.security.ProviderCredentials providerCredentials44 = restS3Service43.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager45 = null;
        restS3Service43.setHttpConnectionManager(httpConnectionManager45);
        java.lang.String str47 = restS3Service43.getEndpoint();
        java.lang.String str50 = restS3Service43.createTorrentUrl("", "");
        java.lang.String str51 = restS3Service43.getRestMetadataPrefix();
        java.lang.Object[] objArray52 = new java.lang.Object[] { "[\"content-length-range\", 58, 1]", serializationConfig38, objectMapper39, restS3Service43 };
        emittingLogger17.trace(throwable26, ":", objArray52);
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.service.AlertBuilder alertBuilder54 = emittingLogger13.makeAlert(throwable14, "null", objArray52);
            org.junit.Assert.fail("Expected exception of type com.metamx.common.ISE; message: Emitter not initialized!  Cannot alert.  Please make sure to call class com.metamx.emitter.EmittingLogger.registerEmitter()");
        } catch (com.metamx.common.ISE e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "hi!");
        org.junit.Assert.assertNull("file8.getParent() == null", file8.getParent());
        org.junit.Assert.assertEquals(file8.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(javaType10);
        org.junit.Assert.assertNotNull(javaType12);
        org.junit.Assert.assertNotNull(objectNode23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(serializerProvider33);
        org.junit.Assert.assertNotNull(serializationConfig38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNull(providerCredentials44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "s3.amazonaws.com" + "'", str47, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://s3.amazonaws.com//?torrent" + "'", str50, "http://s3.amazonaws.com//?torrent");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "x-amz-meta-" + "'", str51, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objArray52);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        java.lang.String str6 = restS3Service1.getDevPayProductToken();
        org.jets3t.service.model.StorageBucket storageBucket7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket(storageBucket7);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Delete bucket cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.lang.String str1 = org.jets3t.service.S3Service.generatePostPolicyCondition_AllowAnyValue("[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]" + "'", str1, "[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]");
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager7 = restS3Service1.getHttpConnectionManager();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Bucket[] s3BucketArray8 = restS3Service1.listAllBuckets();
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: List all buckets");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(httpConnectionManager7);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray7 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper4.enable(featureArray7);
        emittingLogger1.warn(throwable2, "", (java.lang.Object[]) featureArray7);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider14 = objectMapper11.getSerializerProvider();
        java.text.DateFormat dateFormat15 = null;
        objectMapper11.setDateFormat(dateFormat15);
        org.codehaus.jackson.node.ArrayNode arrayNode17 = objectMapper11.createArrayNode();
        com.metamx.emitter.EmittingLogger emittingLogger19 = new com.metamx.emitter.EmittingLogger("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        java.lang.Throwable throwable20 = null;
        com.metamx.emitter.EmittingLogger emittingLogger23 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable24 = null;
        com.metamx.emitter.EmittingLogger emittingLogger27 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable28 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = objectMapper30.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray33 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper30.enable(featureArray33);
        emittingLogger27.warn(throwable28, "", (java.lang.Object[]) featureArray33);
        emittingLogger23.trace(throwable24, "/", (java.lang.Object[]) featureArray33);
        emittingLogger19.trace(throwable20, "x-amz-meta-", (java.lang.Object[]) featureArray33);
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = objectMapper11.enable(featureArray33);
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.emitter.service.AlertBuilder alertBuilder39 = emittingLogger1.makeAlert("[\"content-length-range\", 58, 1]", (java.lang.Object[]) featureArray33);
            org.junit.Assert.fail("Expected exception of type com.metamx.common.ISE; message: Emitter not initialized!  Cannot alert.  Please make sure to call class com.metamx.emitter.EmittingLogger.registerEmitter()");
        } catch (com.metamx.common.ISE e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(featureArray7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializerProvider14);
        org.junit.Assert.assertNotNull(arrayNode17);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", credentialsProvider2);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray7 = restS3Service3.listObjects("{\"\": \"s3.amazonaws.com\"}", ":", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/{\"\": \"s3.amazonaws.com\"}/?max-keys=1000&prefix=%3A&delimiter=%2Fhome%2FCIN%2Flmps2%2Fsemantic-conflict-study%2FSMAT%2Foutput-test-dest%2Fdruid%2F05168808c278c080c59c19e858d9471b316cd1f5%2Frandoop-modified_4%2Fhi%21': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        java.lang.String str9 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.suspendBucketVersioningWithMFA("[\"content-length-range\", 58, 1]", "null", "[\"content-length-range\", -226, -226]");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "x-amz-meta-" + "'", str9, "x-amz-meta-");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        java.lang.String str6 = restS3Service1.getDevPayProductToken();
        org.apache.commons.httpclient.HttpClient httpClient7 = null;
        restS3Service1.setHttpClient(httpClient7);
        org.jets3t.service.model.MultipartUpload multipartUpload9 = null;
        org.jets3t.service.model.S3Object s3Object11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartPart multipartPart12 = restS3Service1.multipartUploadPart(multipartUpload9, (java.lang.Integer) 5, s3Object11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder14 = builder12.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder16 = builder14.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder17 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        com.metamx.druid.client.DataSegment.Builder builder22 = builder17.dimensions((java.util.List<java.lang.String>) strList20);
        com.metamx.druid.client.DataSegment.Builder builder23 = builder16.metrics((java.util.List<java.lang.String>) strList20);
        com.metamx.druid.client.DataSegment.Builder builder24 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        com.metamx.druid.client.DataSegment.Builder builder29 = builder24.dimensions((java.util.List<java.lang.String>) strList27);
        com.metamx.druid.client.DataSegment.Builder builder31 = builder29.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder33 = builder31.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder34 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        com.metamx.druid.client.DataSegment.Builder builder39 = builder34.dimensions((java.util.List<java.lang.String>) strList37);
        com.metamx.druid.client.DataSegment.Builder builder40 = builder33.metrics((java.util.List<java.lang.String>) strList37);
        com.metamx.druid.client.DataSegment.Builder builder41 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        com.metamx.druid.client.DataSegment.Builder builder46 = builder41.dimensions((java.util.List<java.lang.String>) strList44);
        com.metamx.druid.client.DataSegment.Builder builder47 = builder40.metrics((java.util.List<java.lang.String>) strList44);
        com.metamx.druid.shard.ShardSpec shardSpec48 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment50 = new com.metamx.druid.client.DataSegment("{\"\": \"s3.amazonaws.com\"}/hi!", interval1, "{\"\": \"s3.amazonaws.com\"}/hi!", strMap5, (java.util.List<java.lang.String>) strList20, (java.util.List<java.lang.String>) strList44, shardSpec48, 967682662400L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder14 = builder12.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.shard.ShardSpec shardSpec15 = null;
        com.metamx.druid.client.DataSegment.Builder builder16 = builder12.shardSpec(shardSpec15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder12.version("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
        com.metamx.druid.client.DataSegment.Builder builder19 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder19.dimensions((java.util.List<java.lang.String>) strList22);
        com.metamx.druid.client.DataSegment.Builder builder26 = builder24.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder28 = builder26.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder29 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        com.metamx.druid.client.DataSegment.Builder builder34 = builder29.dimensions((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder35 = builder28.metrics((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder36 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        com.metamx.druid.client.DataSegment.Builder builder41 = builder36.dimensions((java.util.List<java.lang.String>) strList39);
        com.metamx.druid.client.DataSegment.Builder builder42 = builder35.metrics((java.util.List<java.lang.String>) strList39);
        com.metamx.druid.client.DataSegment.Builder builder43 = builder12.metrics((java.util.List<java.lang.String>) strList39);
        java.util.List<java.lang.String> strList44 = null;
        com.metamx.druid.shard.ShardSpec shardSpec45 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment47 = new com.metamx.druid.client.DataSegment("[\"content-length-range\", 58, 1]", interval1, "s3.amazonaws.com", strMap5, (java.util.List<java.lang.String>) strList39, strList44, shardSpec45, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        java.util.Date date8 = restS3Service4.getCurrentTimeWithOffset();
        java.lang.String[] strArray10 = new java.lang.String[] { "/" };
        java.lang.String[] strArray16 = new java.lang.String[] { "[\"content-length-range\", -226, -226]", "{\"\": \"s3.amazonaws.com\"}", "/", "[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = org.jets3t.service.S3Service.buildPostForm("[\"content-length-range\", -226, -226]", "", providerCredentials2, date8, strArray10, strArray16, "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", false, true, ":");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(date8);
// flaky:         org.junit.Assert.assertEquals(date8.toString(), "Thu Nov 04 08:16:59 BRT 2021");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = restS3Service7.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager9 = null;
        restS3Service7.setHttpConnectionManager(httpConnectionManager9);
        org.jets3t.service.Jets3tProperties jets3tProperties11 = restS3Service7.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "", credentialsProvider5, jets3tProperties11, hostConfiguration12);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}", credentialsProvider2, jets3tProperties11);
        org.jets3t.service.model.MultipartUpload multipartUpload15 = null;
        org.jets3t.service.model.S3Object s3Object17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartPart multipartPart18 = restS3Service14.multipartUploadPart(multipartUpload15, (java.lang.Integer) 3, s3Object17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials8);
        org.junit.Assert.assertNotNull(jets3tProperties11);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector1 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.setAnnotationIntrospector(annotationIntrospector1);
        org.codehaus.jackson.map.ObjectWriter objectWriter3 = objectMapper2.writerWithDefaultPrettyPrinter();
        org.codehaus.jackson.JsonFactory jsonFactory4 = null;
        org.codehaus.jackson.JsonFactory jsonFactory5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider9 = objectMapper6.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory5, serializerProvider9, deserializerProvider10);
        org.codehaus.jackson.JsonFactory jsonFactory12 = null;
        org.codehaus.jackson.JsonFactory jsonFactory13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider17 = objectMapper14.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory18 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider19 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider20 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig21 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig22 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory18, serializerProvider19, deserializerProvider20, serializationConfig21, deserializationConfig22);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider24 = objectMapper23.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig25 = null;
        org.codehaus.jackson.JsonFactory jsonFactory26 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper27 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = objectMapper27.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper27.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider30 = objectMapper27.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider31 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory26, serializerProvider30, deserializerProvider31);
        org.codehaus.jackson.map.SerializerFactory serializerFactory33 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper32.setSerializerFactory(serializerFactory33);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig35 = objectMapper32.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory13, serializerProvider17, deserializerProvider24, serializationConfig25, deserializationConfig35);
        org.codehaus.jackson.JsonFactory jsonFactory37 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = objectMapper38.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = objectMapper38.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider41 = objectMapper38.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory42 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider43 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider44 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig45 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig46 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory42, serializerProvider43, deserializerProvider44, serializationConfig45, deserializationConfig46);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider48 = objectMapper47.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig49 = null;
        org.codehaus.jackson.JsonFactory jsonFactory50 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper51 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper52 = objectMapper51.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper53 = objectMapper51.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider54 = objectMapper51.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider55 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper56 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory50, serializerProvider54, deserializerProvider55);
        org.codehaus.jackson.map.SerializerFactory serializerFactory57 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper58 = objectMapper56.setSerializerFactory(serializerFactory57);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig59 = objectMapper56.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper60 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory37, serializerProvider41, deserializerProvider48, serializationConfig49, deserializationConfig59);
        org.codehaus.jackson.map.ObjectMapper objectMapper61 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory12, serializerProvider17, deserializerProvider48);
        org.codehaus.jackson.map.SerializationConfig serializationConfig62 = null;
        org.codehaus.jackson.JsonFactory jsonFactory63 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper64 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper65 = objectMapper64.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper66 = objectMapper64.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider67 = objectMapper64.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory68 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider69 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider70 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig71 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig72 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory68, serializerProvider69, deserializerProvider70, serializationConfig71, deserializationConfig72);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider74 = objectMapper73.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig75 = null;
        org.codehaus.jackson.JsonFactory jsonFactory76 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper77 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper78 = objectMapper77.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper79 = objectMapper77.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider80 = objectMapper77.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider81 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper82 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory76, serializerProvider80, deserializerProvider81);
        org.codehaus.jackson.map.SerializerFactory serializerFactory83 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper84 = objectMapper82.setSerializerFactory(serializerFactory83);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig85 = objectMapper82.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper86 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory63, serializerProvider67, deserializerProvider74, serializationConfig75, deserializationConfig85);
        org.codehaus.jackson.map.ObjectMapper objectMapper87 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory4, serializerProvider9, deserializerProvider48, serializationConfig62, deserializationConfig85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = objectMapper2.writeValueAsString((java.lang.Object) deserializationConfig85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectWriter3);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(serializerProvider9);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(serializerProvider17);
        org.junit.Assert.assertNotNull(deserializerProvider24);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializerProvider30);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(deserializationConfig35);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(serializerProvider41);
        org.junit.Assert.assertNotNull(deserializerProvider48);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertNotNull(serializerProvider54);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(deserializationConfig59);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertNotNull(deserializerProvider74);
        org.junit.Assert.assertNotNull(objectMapper78);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(serializerProvider80);
        org.junit.Assert.assertNotNull(objectMapper84);
        org.junit.Assert.assertNotNull(deserializationConfig85);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        restS3Service1.setDevPayProductToken("http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
        org.jets3t.service.model.S3Bucket s3Bucket12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.acl.AccessControlList accessControlList14 = restS3Service1.getVersionedObjectAcl("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", s3Bucket12, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Get versioned Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector1 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.setAnnotationIntrospector(annotationIntrospector1);
        org.codehaus.jackson.map.Module module3 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper2.registerModule(module3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        org.jets3t.service.acl.AccessControlList accessControlList4 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putBucketAcl("null", accessControlList4);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The bucket 'null' does not include ACL information");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "null", credentialsProvider2);
        org.jets3t.service.model.S3Bucket s3Bucket5 = null;
        org.jets3t.service.model.S3Object s3Object6 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service3.putVersionedObjectAcl(":", s3Bucket5, s3Object6);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The action Put Versioned Object Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.SerializationConfig serializationConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper5.setSerializationConfig(serializationConfig6);
        org.codehaus.jackson.map.ObjectMapper.DefaultTyping defaultTyping8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper5.enableDefaultTypingAsProperty(defaultTyping8, "<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper7);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = restS3Service1.isObjectInBucket("/", ":");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: Request Error.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteVersionedObjectWithMFA("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", "http://s3.amazonaws.com//hi%21?torrent", "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        boolean boolean6 = restS3Service1.isRequesterPaysEnabled();
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider7 = restS3Service1.getCredentialsProvider();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.suspendBucketVersioning("http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(credentialsProvider7);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.lang.Object obj3 = null;
        java.lang.String str4 = objectMapper0.writeValueAsString(obj3);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = objectMapper0.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper7.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper7.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = objectMapper7.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory6, serializerProvider10, deserializerProvider11);
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper0.setSerializerProvider(serializerProvider10);
        org.codehaus.jackson.JsonFactory jsonFactory14 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider15 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider16 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig17 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig18 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory14, serializerProvider15, deserializerProvider16, serializationConfig17, deserializationConfig18);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider20 = objectMapper19.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = objectMapper13.setDeserializerProvider(deserializerProvider20);
        byte[] byteArray26 = new byte[] { (byte) 10, (byte) 10, (byte) 100, (byte) 1 };
        org.codehaus.jackson.type.TypeReference typeReference29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.String> strCollection30 = objectMapper13.readValue(byteArray26, (int) (byte) 1, 0, typeReference29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "null" + "'", str4, "null");
        org.junit.Assert.assertNotNull(deserializerProvider5);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(serializerProvider10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(deserializerProvider20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 10, 100, 1]");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.google.common.base.Joiner joiner1 = com.google.common.base.Joiner.on("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        java.lang.StringBuilder stringBuilder2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode4 = objectMapper3.createObjectNode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuilder stringBuilder5 = joiner1.appendTo(stringBuilder2, (java.lang.Iterable<org.codehaus.jackson.JsonNode>) objectNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(joiner1);
        org.junit.Assert.assertNotNull(objectNode4);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = s3SegmentPusher8.jsonMapper;
        java.io.File file11 = new java.io.File("hi!");
        java.io.File file13 = new java.io.File(file11, "");
        com.metamx.druid.client.DataSegment dataSegment14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment15 = s3SegmentPusher8.push(file13, dataSegment14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull("file11.getParent() == null", file11.getParent());
        org.junit.Assert.assertEquals(file11.toString(), "hi!");
        org.junit.Assert.assertNull("file13.getParent() == null", file13.getParent());
        org.junit.Assert.assertEquals(file13.toString(), "hi!");
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.lang.String str3 = org.jets3t.service.S3Service.generatePostPolicyCondition("{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "[\"content-length-range\", 58, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[\"{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}\", \"${\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}\", \"[\"content-length-range\", 58, 1]\"]" + "'", str3, "[\"{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}\", \"${\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}\", \"[\"content-length-range\", 58, 1]\"]");
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        boolean boolean2 = emittingLogger1.isInfoEnabled();
        java.lang.Object[] objArray4 = new java.lang.Object[] {};
        emittingLogger1.debug("http://s3.amazonaws.com//hi%21?torrent", objArray4);
        boolean boolean6 = emittingLogger1.isTraceEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        java.lang.String str4 = restS3Service1.getDevPayProductToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode7 = objectMapper6.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema8 = null;
        org.codehaus.jackson.map.ObjectReader objectReader9 = objectMapper6.schemaBasedReader(formatSchema8);
        byte[] byteArray11 = objectMapper6.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.FormatSchema formatSchema12 = null;
        org.codehaus.jackson.map.ObjectReader objectReader13 = objectMapper6.reader(formatSchema12);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher14 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig5, objectMapper6);
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteWebsiteConfig("[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]/?website': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objectNode7);
        org.junit.Assert.assertNotNull(objectReader9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[49, 48]");
        org.junit.Assert.assertNotNull(objectReader13);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.jsontype.SubtypeResolver subtypeResolver7 = null;
        objectMapper6.setSubtypeResolver(subtypeResolver7);
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper10.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider13 = objectMapper10.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider13, deserializerProvider14);
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode17 = objectMapper16.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema18 = null;
        org.codehaus.jackson.map.ObjectReader objectReader19 = objectMapper16.schemaBasedReader(formatSchema18);
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode21 = objectMapper20.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema22 = null;
        org.codehaus.jackson.map.ObjectReader objectReader23 = objectMapper20.schemaBasedReader(formatSchema22);
        byte[] byteArray25 = objectMapper20.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.JsonNode jsonNode26 = objectMapper16.valueToTree((java.lang.Object) 10L);
        org.codehaus.jackson.JsonParser jsonParser27 = objectMapper15.treeAsTokens(jsonNode26);
        org.codehaus.jackson.JsonNode jsonNode28 = objectMapper6.readTree(jsonParser27);
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        org.codehaus.jackson.PrettyPrinter prettyPrinter32 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter33 = objectMapper30.writer(prettyPrinter32);
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper30.enableDefaultTyping();
        org.codehaus.jackson.FormatSchema formatSchema35 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter36 = objectMapper34.schemaBasedWriter(formatSchema35);
        org.codehaus.jackson.JsonFactory jsonFactory37 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory37);
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = objectMapper39.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper41 = objectMapper39.disableDefaultTyping();
        java.io.File file43 = new java.io.File("hi!");
        java.io.File file45 = new java.io.File(file43, "");
        java.lang.Class<?> wildcardClass46 = file43.getClass();
        org.codehaus.jackson.type.JavaType javaType47 = objectMapper41.constructType((java.lang.reflect.Type) wildcardClass46);
        org.codehaus.jackson.map.ObjectWriter objectWriter48 = objectMapper38.writerWithType(javaType47);
        org.codehaus.jackson.map.ObjectWriter objectWriter49 = objectMapper34.typedWriter(javaType47);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.JsonSerializableWithType jsonSerializableWithType50 = objectMapper6.readValue("{\"\": \"s3.amazonaws.com\"}", javaType47);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: No suitable constructor found for type [simple type, class java.io.File]: can not instantiate from JSON object (need to add/enable type information?)? at [Source: java.io.StringReader@58779032; line: 1, column: 2]");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(objectNode17);
        org.junit.Assert.assertNotNull(objectReader19);
        org.junit.Assert.assertNotNull(objectNode21);
        org.junit.Assert.assertNotNull(objectReader23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[49, 48]");
        org.junit.Assert.assertNotNull(jsonNode26);
        org.junit.Assert.assertNotNull(jsonParser27);
        org.junit.Assert.assertNotNull(jsonNode28);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNull("file43.getParent() == null", file43.getParent());
        org.junit.Assert.assertEquals(file43.toString(), "hi!");
        org.junit.Assert.assertNull("file45.getParent() == null", file45.getParent());
        org.junit.Assert.assertEquals(file45.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(javaType47);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(objectWriter49);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.google.common.base.Joiner joiner1 = com.google.common.base.Joiner.on("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        com.metamx.emitter.EmittingLogger emittingLogger3 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider15 = objectMapper14.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper16.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = objectMapper16.disableDefaultTyping();
        java.lang.Object obj19 = null;
        java.lang.String str20 = objectMapper16.writeValueAsString(obj19);
        com.metamx.druid.client.DataSegment.Builder builder21 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        com.metamx.druid.client.DataSegment.Builder builder26 = builder21.dimensions((java.util.List<java.lang.String>) strList24);
        com.metamx.emitter.EmittingLogger emittingLogger28 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray30 = new java.lang.Object[] { objectMapper6, deserializerProvider15, objectMapper16, strList24, emittingLogger28, (byte) 1 };
        emittingLogger3.error(throwable4, "{\"\": \"s3.amazonaws.com\"}", objArray30);
        java.lang.Throwable throwable32 = null;
        java.io.File file35 = new java.io.File("hi!");
        java.io.File file37 = new java.io.File(file35, "");
        java.io.File file38 = file35.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper39 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode40 = objectMapper39.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory41 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider45 = objectMapper42.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider46 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory41, serializerProvider45, deserializerProvider46);
        org.jets3t.service.security.ProviderCredentials providerCredentials48 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service49 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials48);
        org.jets3t.service.security.ProviderCredentials providerCredentials50 = restS3Service49.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager51 = null;
        restS3Service49.setHttpConnectionManager(httpConnectionManager51);
        java.lang.Object[] objArray55 = new java.lang.Object[] { file38, objectMapper39, objectMapper47, restS3Service49, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger3.info(throwable32, "", objArray55);
        org.codehaus.jackson.map.ObjectMapper objectMapper58 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper59 = objectMapper58.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper60 = objectMapper58.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider61 = objectMapper58.getSerializerProvider();
        java.text.DateFormat dateFormat62 = null;
        objectMapper58.setDateFormat(dateFormat62);
        org.codehaus.jackson.node.ArrayNode arrayNode64 = objectMapper58.createArrayNode();
        com.metamx.druid.client.DataSegment.Builder builder65 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder67 = builder65.size(0L);
        java.lang.Object[] objArray68 = new java.lang.Object[] { objectMapper58, builder65 };
        emittingLogger3.trace("null", objArray68);
        com.metamx.emitter.EmittingLogger emittingLogger72 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Throwable throwable73 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials75 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service76 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials75);
        org.codehaus.jackson.map.ObjectMapper objectMapper77 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode78 = objectMapper77.createObjectNode();
        java.lang.Object[] objArray79 = new java.lang.Object[] { providerCredentials75, objectMapper77 };
        emittingLogger72.info(throwable73, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", objArray79);
        emittingLogger3.error("", objArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = joiner1.join(objArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(joiner1);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(deserializerProvider15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "null" + "'", str20, "null");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNull("file35.getParent() == null", file35.getParent());
        org.junit.Assert.assertEquals(file35.toString(), "hi!");
        org.junit.Assert.assertNull("file37.getParent() == null", file37.getParent());
        org.junit.Assert.assertEquals(file37.toString(), "hi!");
        org.junit.Assert.assertNotNull(file38);
// flaky:         org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode40);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(serializerProvider45);
        org.junit.Assert.assertNull(providerCredentials50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(serializerProvider61);
        org.junit.Assert.assertNotNull(arrayNode64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(objectNode78);
        org.junit.Assert.assertNotNull(objArray79);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper1.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider4 = objectMapper1.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider5 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider4, deserializerProvider5);
        org.codehaus.jackson.map.SerializerFactory serializerFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper6.setSerializerFactory(serializerFactory7);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig9 = objectMapper6.copyDeserializationConfig();
        org.codehaus.jackson.Version version10 = objectMapper6.version();
        org.codehaus.jackson.JsonGenerator.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper6.configure(feature11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper2);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(serializerProvider4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(deserializationConfig9);
        org.junit.Assert.assertNotNull(version10);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.io.File file0 = null;
        java.io.File file2 = new java.io.File(file0, "x-amz-meta-");
        long long3 = file2.getUsableSpace();
        long long4 = file2.length();
        java.lang.String str5 = file2.getAbsolutePath();
        org.junit.Assert.assertNull("file2.getParent() == null", file2.getParent());
        org.junit.Assert.assertEquals(file2.toString(), "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/x-amz-meta-" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/x-amz-meta-");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object4 = restS3Service1.getObjectWithSignedUrl("{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service18 = s3SegmentPusher17.s3Client;
        org.jets3t.service.security.ProviderCredentials providerCredentials19 = restS3Service18.getAWSCredentials();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service18.suspendBucketVersioningWithMFA("<form action=\"https://http://s3.amazonaws.com//hi%21?torrent.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "{\"\": \"s3.amazonaws.com\"}/hi!", "http://s3.amazonaws.com//?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(restS3Service18);
        org.junit.Assert.assertNull(providerCredentials19);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        boolean boolean4 = restS3Service1.isShutdown();
        org.jets3t.service.model.StorageBucket storageBucket5 = null;
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.putBucketAcl(storageBucket5);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: The action Put Bucket Access Control List cannot be performed with an invalid bucket: null");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider1 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider2 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig3 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig4 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider1, deserializerProvider2, serializationConfig3, deserializationConfig4);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider6 = objectMapper5.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectWriter objectWriter7 = objectMapper5.writerWithDefaultPrettyPrinter();
        org.junit.Assert.assertNotNull(deserializerProvider6);
        org.junit.Assert.assertNotNull(objectWriter7);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        boolean boolean9 = restS3Service1.isShutdown();
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service13 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = restS3Service13.renameMetadataKeys(strMap14);
        org.jets3t.service.security.ProviderCredentials providerCredentials16 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials17 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service18 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials17);
        org.jets3t.service.security.ProviderCredentials providerCredentials19 = restS3Service18.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager20 = null;
        restS3Service18.setHttpConnectionManager(httpConnectionManager20);
        java.util.Date date22 = restS3Service18.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = restS3Service1.createSignedPutUrl("{\"\": \"s3.amazonaws.com\"}/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!", strMap14, providerCredentials16, date22, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(providerCredentials19);
        org.junit.Assert.assertNotNull(date22);
// flaky:         org.junit.Assert.assertEquals(date22.toString(), "Thu Nov 04 08:17:01 BRT 2021");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider13 = objectMapper12.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper14.disableDefaultTyping();
        java.lang.Object obj17 = null;
        java.lang.String str18 = objectMapper14.writeValueAsString(obj17);
        com.metamx.druid.client.DataSegment.Builder builder19 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder19.dimensions((java.util.List<java.lang.String>) strList22);
        com.metamx.emitter.EmittingLogger emittingLogger26 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray28 = new java.lang.Object[] { objectMapper4, deserializerProvider13, objectMapper14, strList22, emittingLogger26, (byte) 1 };
        emittingLogger1.error(throwable2, "{\"\": \"s3.amazonaws.com\"}", objArray28);
        java.lang.Throwable throwable30 = null;
        java.io.File file33 = new java.io.File("hi!");
        java.io.File file35 = new java.io.File(file33, "");
        java.io.File file36 = file33.getAbsoluteFile();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode38 = objectMapper37.createObjectNode();
        org.codehaus.jackson.JsonFactory jsonFactory39 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper40 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper41 = objectMapper40.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = objectMapper40.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider43 = objectMapper40.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider44 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper45 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory39, serializerProvider43, deserializerProvider44);
        org.jets3t.service.security.ProviderCredentials providerCredentials46 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service47 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials46);
        org.jets3t.service.security.ProviderCredentials providerCredentials48 = restS3Service47.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager49 = null;
        restS3Service47.setHttpConnectionManager(httpConnectionManager49);
        java.lang.Object[] objArray53 = new java.lang.Object[] { file36, objectMapper37, objectMapper45, restS3Service47, 100.0f, "{\"\": \"s3.amazonaws.com\"}" };
        emittingLogger1.info(throwable30, "", objArray53);
        org.codehaus.jackson.map.ObjectMapper objectMapper56 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper57 = objectMapper56.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper58 = objectMapper56.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider59 = objectMapper56.getSerializerProvider();
        java.text.DateFormat dateFormat60 = null;
        objectMapper56.setDateFormat(dateFormat60);
        org.codehaus.jackson.node.ArrayNode arrayNode62 = objectMapper56.createArrayNode();
        com.metamx.druid.client.DataSegment.Builder builder63 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder65 = builder63.size(0L);
        java.lang.Object[] objArray66 = new java.lang.Object[] { objectMapper56, builder63 };
        emittingLogger1.trace("null", objArray66);
        com.metamx.emitter.EmittingLogger emittingLogger70 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Throwable throwable71 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials73 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service74 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials73);
        org.codehaus.jackson.map.ObjectMapper objectMapper75 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode76 = objectMapper75.createObjectNode();
        java.lang.Object[] objArray77 = new java.lang.Object[] { providerCredentials73, objectMapper75 };
        emittingLogger70.info(throwable71, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", objArray77);
        emittingLogger1.error("", objArray77);
        java.lang.Throwable throwable80 = null;
        com.metamx.emitter.EmittingLogger emittingLogger83 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        boolean boolean84 = emittingLogger83.isInfoEnabled();
        java.lang.Object[] objArray86 = new java.lang.Object[] {};
        emittingLogger83.debug("http://s3.amazonaws.com//hi%21?torrent", objArray86);
        emittingLogger1.info(throwable80, "", objArray86);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializerProvider13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "null" + "'", str18, "null");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull("file33.getParent() == null", file33.getParent());
        org.junit.Assert.assertEquals(file33.toString(), "hi!");
        org.junit.Assert.assertNull("file35.getParent() == null", file35.getParent());
        org.junit.Assert.assertEquals(file35.toString(), "hi!");
        org.junit.Assert.assertNotNull(file36);
// flaky:         org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertNotNull(objectNode38);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(serializerProvider43);
        org.junit.Assert.assertNull(providerCredentials48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(serializerProvider59);
        org.junit.Assert.assertNotNull(arrayNode62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objectNode76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        java.lang.String str4 = file1.getAbsolutePath();
        boolean boolean5 = file1.isDirectory();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!" + "'", str4, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service18 = s3SegmentPusher17.s3Client;
        org.jets3t.service.security.ProviderCredentials providerCredentials19 = restS3Service18.getAWSCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object23 = restS3Service18.getVersionedObject(":", "null", "");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(restS3Service18);
        org.junit.Assert.assertNull(providerCredentials19);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service4.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager6 = null;
        restS3Service4.setHttpConnectionManager(httpConnectionManager6);
        java.util.Date date8 = restS3Service4.getCurrentTimeWithOffset();
        java.lang.String[] strArray11 = new java.lang.String[] { "[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]", "null" };
        java.lang.String[] strArray14 = new java.lang.String[] { "{\"\": \"s3.amazonaws.com\"}", "http://s3.amazonaws.com//?torrent" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = org.jets3t.service.S3Service.buildPostForm("[\"starts-with\", \"$[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]\", \"\"]", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", providerCredentials2, date8, strArray11, strArray14, "{\"\": \"s3.amazonaws.com\"}", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(date8);
// flaky:         org.junit.Assert.assertEquals(date8.toString(), "Thu Nov 04 08:17:02 BRT 2021");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        java.lang.String str6 = restS3Service1.getEndpoint();
        org.apache.commons.httpclient.HttpMethod httpMethod7 = null;
        restS3Service1.authorizeHttpRequest(httpMethod7);
        boolean boolean9 = restS3Service1.isShutdown();
        org.jets3t.service.security.ProviderCredentials providerCredentials12 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials13);
        org.jets3t.service.security.ProviderCredentials providerCredentials15 = restS3Service14.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager16 = null;
        restS3Service14.setHttpConnectionManager(httpConnectionManager16);
        java.util.Date date18 = restS3Service14.getCurrentTimeWithOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = restS3Service1.createSignedGetUrl("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "hi!", providerCredentials12, date18, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "s3.amazonaws.com" + "'", str6, "s3.amazonaws.com");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(providerCredentials15);
        org.junit.Assert.assertNotNull(date18);
// flaky:         org.junit.Assert.assertEquals(date18.toString(), "Thu Nov 04 08:17:02 BRT 2021");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        int int18 = restS3Service1.getInternalErrorRetryMax();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = restS3Service1.createSignedUrl("null", "http://s3.amazonaws.com//hi%21?torrent", "{\"\": \"s3.amazonaws.com\"}/hi!", "{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}", strMap23, (long) ':', false, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.io.File file0 = null;
        java.io.File file2 = new java.io.File(file0, "x-amz-meta-");
        boolean boolean3 = file2.setReadOnly();
        java.io.File file4 = file2.getAbsoluteFile();
        java.io.File file6 = new java.io.File(file2, "");
        org.junit.Assert.assertNull("file2.getParent() == null", file2.getParent());
        org.junit.Assert.assertEquals(file2.toString(), "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(file4);
// flaky:         org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/x-amz-meta-");
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), "x-amz-meta-");
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        int int16 = restS3Service1.getInternalErrorRetryMax();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object19 = restS3Service1.getObject("", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder12 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service14 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials13);
        org.jets3t.service.security.ProviderCredentials providerCredentials15 = restS3Service14.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager16 = null;
        restS3Service14.setHttpConnectionManager(httpConnectionManager16);
        java.util.List<java.lang.String> strList18 = restS3Service14.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder19 = builder12.dimensions(strList18);
        com.metamx.druid.client.DataSegment.Builder builder20 = new com.metamx.druid.client.DataSegment.Builder();
        com.metamx.druid.client.DataSegment.Builder builder22 = builder20.size(0L);
        com.metamx.druid.client.DataSegment.Builder builder23 = com.metamx.druid.client.DataSegment.builder();
        org.jets3t.service.security.ProviderCredentials providerCredentials24 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service25 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials24);
        org.jets3t.service.security.ProviderCredentials providerCredentials26 = restS3Service25.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager27 = null;
        restS3Service25.setHttpConnectionManager(httpConnectionManager27);
        java.util.List<java.lang.String> strList29 = restS3Service25.getResourceParameterNames();
        com.metamx.druid.client.DataSegment.Builder builder30 = builder23.dimensions(strList29);
        com.metamx.druid.client.DataSegment.Builder builder31 = builder22.dimensions(strList29);
        com.metamx.druid.shard.ShardSpec shardSpec32 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment34 = new com.metamx.druid.client.DataSegment(":", interval1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/x-amz-meta-", strMap9, strList18, strList29, shardSpec32, (long) 11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(providerCredentials15);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(providerCredentials26);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.Jets3tProperties jets3tProperties3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", credentialsProvider2, jets3tProperties3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service4 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = restS3Service4.renameMetadataKeys(strMap5);
        com.metamx.druid.client.DataSegment.Builder builder7 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        com.metamx.druid.client.DataSegment.Builder builder12 = builder7.dimensions((java.util.List<java.lang.String>) strList10);
        com.metamx.druid.client.DataSegment.Builder builder14 = builder12.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.shard.ShardSpec shardSpec15 = null;
        com.metamx.druid.client.DataSegment.Builder builder16 = builder12.shardSpec(shardSpec15);
        com.metamx.druid.client.DataSegment.Builder builder18 = builder12.version("[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]");
        com.metamx.druid.client.DataSegment.Builder builder19 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder19.dimensions((java.util.List<java.lang.String>) strList22);
        com.metamx.druid.client.DataSegment.Builder builder26 = builder24.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder28 = builder26.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder29 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        com.metamx.druid.client.DataSegment.Builder builder34 = builder29.dimensions((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder35 = builder28.metrics((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder36 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        com.metamx.druid.client.DataSegment.Builder builder41 = builder36.dimensions((java.util.List<java.lang.String>) strList39);
        com.metamx.druid.client.DataSegment.Builder builder42 = builder35.metrics((java.util.List<java.lang.String>) strList39);
        com.metamx.druid.client.DataSegment.Builder builder43 = builder12.metrics((java.util.List<java.lang.String>) strList39);
        java.util.List<java.lang.String> strList44 = null;
        com.metamx.druid.shard.ShardSpec shardSpec45 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment47 = new com.metamx.druid.client.DataSegment("{\"\": \"s3.amazonaws.com\"}", interval1, "null", strMap6, (java.util.List<java.lang.String>) strList39, strList44, shardSpec45, (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean5 = file1.setWritable(false);
        boolean boolean6 = file1.delete();
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = objectMapper7.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper7.disableDefaultTyping();
        org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion inclusion10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper7.setSerializationInclusion(inclusion10);
        boolean boolean12 = file1.equals((java.lang.Object) objectMapper11);
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.codehaus.jackson.JsonFactory jsonFactory0 = null;
        org.codehaus.jackson.JsonFactory jsonFactory1 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper3 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = objectMapper2.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider5 = objectMapper2.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory1, serializerProvider5, deserializerProvider6);
        org.codehaus.jackson.JsonFactory jsonFactory8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper10.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider13 = objectMapper10.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory14 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider15 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider16 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig17 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig18 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper19 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory14, serializerProvider15, deserializerProvider16, serializationConfig17, deserializationConfig18);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider20 = objectMapper19.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig21 = null;
        org.codehaus.jackson.JsonFactory jsonFactory22 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper24 = objectMapper23.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper25 = objectMapper23.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider26 = objectMapper23.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider27 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory22, serializerProvider26, deserializerProvider27);
        org.codehaus.jackson.map.SerializerFactory serializerFactory29 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper28.setSerializerFactory(serializerFactory29);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig31 = objectMapper28.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper32 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider13, deserializerProvider20, serializationConfig21, deserializationConfig31);
        org.codehaus.jackson.JsonFactory jsonFactory33 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = objectMapper34.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory38 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider39 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider40 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig41 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig42 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory38, serializerProvider39, deserializerProvider40, serializationConfig41, deserializationConfig42);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider44 = objectMapper43.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig45 = null;
        org.codehaus.jackson.JsonFactory jsonFactory46 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper47.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper49 = objectMapper47.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider50 = objectMapper47.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider51 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper52 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory46, serializerProvider50, deserializerProvider51);
        org.codehaus.jackson.map.SerializerFactory serializerFactory53 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper54 = objectMapper52.setSerializerFactory(serializerFactory53);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig55 = objectMapper52.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper56 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory33, serializerProvider37, deserializerProvider44, serializationConfig45, deserializationConfig55);
        org.codehaus.jackson.map.ObjectMapper objectMapper57 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory8, serializerProvider13, deserializerProvider44);
        org.codehaus.jackson.map.SerializationConfig serializationConfig58 = null;
        org.codehaus.jackson.JsonFactory jsonFactory59 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper60 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper61 = objectMapper60.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper62 = objectMapper60.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider63 = objectMapper60.getSerializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory64 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider65 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider66 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig67 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig68 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper69 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory64, serializerProvider65, deserializerProvider66, serializationConfig67, deserializationConfig68);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider70 = objectMapper69.getDeserializerProvider();
        org.codehaus.jackson.map.SerializationConfig serializationConfig71 = null;
        org.codehaus.jackson.JsonFactory jsonFactory72 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper73 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper74 = objectMapper73.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper75 = objectMapper73.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider76 = objectMapper73.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider77 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper78 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory72, serializerProvider76, deserializerProvider77);
        org.codehaus.jackson.map.SerializerFactory serializerFactory79 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper80 = objectMapper78.setSerializerFactory(serializerFactory79);
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig81 = objectMapper78.copyDeserializationConfig();
        org.codehaus.jackson.map.ObjectMapper objectMapper82 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory59, serializerProvider63, deserializerProvider70, serializationConfig71, deserializationConfig81);
        org.codehaus.jackson.map.ObjectMapper objectMapper83 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory0, serializerProvider5, deserializerProvider44, serializationConfig58, deserializationConfig81);
        org.codehaus.jackson.JsonFactory jsonFactory84 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper85 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory84);
        org.codehaus.jackson.map.ObjectMapper objectMapper86 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper87 = objectMapper86.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper88 = objectMapper86.disableDefaultTyping();
        java.io.File file90 = new java.io.File("hi!");
        java.io.File file92 = new java.io.File(file90, "");
        java.lang.Class<?> wildcardClass93 = file90.getClass();
        org.codehaus.jackson.type.JavaType javaType94 = objectMapper88.constructType((java.lang.reflect.Type) wildcardClass93);
        org.codehaus.jackson.map.ObjectWriter objectWriter95 = objectMapper85.writerWithType(javaType94);
        org.codehaus.jackson.map.ObjectWriter objectWriter96 = objectMapper83.writerWithType(javaType94);
        org.codehaus.jackson.map.PropertyNamingStrategy propertyNamingStrategy97 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper98 = objectMapper83.setPropertyNamingStrategy(propertyNamingStrategy97);
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(serializerProvider5);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(deserializerProvider20);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializerProvider26);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(deserializationConfig31);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertNotNull(deserializerProvider44);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(serializerProvider50);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertNotNull(deserializationConfig55);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(serializerProvider63);
        org.junit.Assert.assertNotNull(deserializerProvider70);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(serializerProvider76);
        org.junit.Assert.assertNotNull(objectMapper80);
        org.junit.Assert.assertNotNull(deserializationConfig81);
        org.junit.Assert.assertNotNull(objectMapper87);
        org.junit.Assert.assertNotNull(objectMapper88);
        org.junit.Assert.assertNull("file90.getParent() == null", file90.getParent());
        org.junit.Assert.assertEquals(file90.toString(), "hi!");
        org.junit.Assert.assertNull("file92.getParent() == null", file92.getParent());
        org.junit.Assert.assertEquals(file92.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(javaType94);
        org.junit.Assert.assertNotNull(objectWriter95);
        org.junit.Assert.assertNotNull(objectWriter96);
        org.junit.Assert.assertNotNull(objectMapper98);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteBucket("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        java.lang.String str5 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = restS3Service1.isRequesterPaysBucket("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/x-amz-meta-");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "s3.amazonaws.com" + "'", str5, "s3.amazonaws.com");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        org.jets3t.service.model.S3Object s3Object10 = null;
        java.util.Calendar calendar12 = null;
        java.util.Calendar calendar13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "null" };
        java.lang.String[] strArray21 = new java.lang.String[] { "s3.amazonaws.com", "{\"\": \"s3.amazonaws.com\"}/hi!", ":", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}" };
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap22 = restS3Service1.copyVersionedObject("[\"content-length-range\", -226, -226]", "", "/", "hi!", s3Object10, true, calendar12, calendar13, strArray15, strArray21);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: The requested action cannot be performed with a non-authenticated service: copyVersionedObject");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        java.io.File file5 = new java.io.File(file3, "");
        java.io.File file6 = file3.getParentFile();
        boolean boolean7 = file6.mkdir();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertEquals(file3.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file3.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertEquals(file5.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertEquals(file5.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart");
        org.junit.Assert.assertEquals(file6.toString(), "hi!/<form action=\"https:/.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n<");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.io.File file1 = new java.io.File("hi!");
        java.io.File file3 = new java.io.File(file1, "");
        boolean boolean4 = file3.canWrite();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), "hi!");
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), "hi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider13 = objectMapper12.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = objectMapper14.disableDefaultTyping();
        java.lang.Object obj17 = null;
        java.lang.String str18 = objectMapper14.writeValueAsString(obj17);
        com.metamx.druid.client.DataSegment.Builder builder19 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        com.metamx.druid.client.DataSegment.Builder builder24 = builder19.dimensions((java.util.List<java.lang.String>) strList22);
        com.metamx.emitter.EmittingLogger emittingLogger26 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray28 = new java.lang.Object[] { objectMapper4, deserializerProvider13, objectMapper14, strList22, emittingLogger26, (byte) 1 };
        emittingLogger1.error(throwable2, "{\"\": \"s3.amazonaws.com\"}", objArray28);
        java.lang.Throwable throwable30 = null;
        com.metamx.emitter.EmittingLogger emittingLogger33 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable34 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = objectMapper36.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper38 = objectMapper36.disableDefaultTyping();
        org.codehaus.jackson.JsonFactory jsonFactory39 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider40 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider41 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig42 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig43 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory39, serializerProvider40, deserializerProvider41, serializationConfig42, deserializationConfig43);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider45 = objectMapper44.getDeserializerProvider();
        org.codehaus.jackson.map.ObjectMapper objectMapper46 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = objectMapper46.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper46.disableDefaultTyping();
        java.lang.Object obj49 = null;
        java.lang.String str50 = objectMapper46.writeValueAsString(obj49);
        com.metamx.druid.client.DataSegment.Builder builder51 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        com.metamx.druid.client.DataSegment.Builder builder56 = builder51.dimensions((java.util.List<java.lang.String>) strList54);
        com.metamx.emitter.EmittingLogger emittingLogger58 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Object[] objArray60 = new java.lang.Object[] { objectMapper36, deserializerProvider45, objectMapper46, strList54, emittingLogger58, (byte) 1 };
        emittingLogger33.error(throwable34, "{\"\": \"s3.amazonaws.com\"}", objArray60);
        boolean boolean62 = emittingLogger33.isInfoEnabled();
        com.metamx.emitter.EmittingLogger emittingLogger65 = new com.metamx.emitter.EmittingLogger("s3.amazonaws.com");
        java.lang.Throwable throwable66 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials68 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service69 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials68);
        org.codehaus.jackson.map.ObjectMapper objectMapper70 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode71 = objectMapper70.createObjectNode();
        java.lang.Object[] objArray72 = new java.lang.Object[] { providerCredentials68, objectMapper70 };
        emittingLogger65.info(throwable66, "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", objArray72);
        emittingLogger33.wtf("[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]", objArray72);
        // The following exception was thrown during execution in test generation
        try {
            emittingLogger1.wtf(throwable30, "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", objArray72);
            org.junit.Assert.fail("Expected exception of type java.util.UnknownFormatConversionException; message: Conversion = 'F'");
        } catch (java.util.UnknownFormatConversionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializerProvider13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "null" + "'", str18, "null");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(deserializerProvider45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "null" + "'", str50, "null");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objectNode71);
        org.junit.Assert.assertNotNull(objArray72);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.lang.String str2 = restS3Service1.getDevPayUserToken();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper8 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper9 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper10 = objectMapper8.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider11 = objectMapper8.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider12 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider11, deserializerProvider12);
        org.codehaus.jackson.map.SerializerFactory serializerFactory14 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper15 = objectMapper13.setSerializerFactory(serializerFactory14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service5, s3SegmentPusherConfig6, objectMapper13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher17 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper13);
        int int18 = restS3Service1.getInternalErrorRetryMax();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteVersionedObjectWithMFA("[\"{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}\", \"${\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}\", \"[\"content-length-range\", 58, 1]\"]", "", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>", "null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">?<input type=\"hidden\" name=\"key\" value=\"hi!\">?<input name=\"file\" type=\"file\">?<br>?<input type=\"submit\" value=\"Upload to Amazon S3\">?</form>/null?versionId=%5B%22%7B%22%7B%22%22%3A%20%22s3.amazonaws.com%22%7D%22%3A%20%22acl%2Cpolicy%2Ctorrent%2Clogging%2Clocation%2CrequestPayment%2Cversions%2Cversioning%2CversionId%2Cuploads%2CuploadId%2CpartNumber%2Cwebsite%2Cnotification%22%7D%22%2C%20%22%24%7B%22http%3A%2F%2Fs3.amazonaws.com%2Fhttp%253A%252F%252Fs3.amazonaws.com%252F%252F%253Ftorrent%2Fhi%2521%3Ftorrent%22%3A%20%22x-amz-meta-%22%7D%22%2C%20%22%5B%22content-length-range%22%2C%2058%2C%201%5D%22%5D': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str9 = restS3Service1.createTorrentUrl("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.enableBucketVersioningAndMFA("{\"\": \"s3.amazonaws.com\"}/hi!");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to PUT request containing an XML document");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://s3.amazonaws.com//hi%21?torrent" + "'", str9, "http://s3.amazonaws.com//hi%21?torrent");
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.metamx.druid.client.DataSegment.Builder builder0 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        com.metamx.druid.client.DataSegment.Builder builder5 = builder0.dimensions((java.util.List<java.lang.String>) strList3);
        com.metamx.druid.client.DataSegment.Builder builder7 = builder5.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder9 = builder5.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder11 = builder9.size((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper2 = objectMapper0.disableDefaultTyping();
        java.io.InputStream inputStream3 = null;
        org.codehaus.jackson.type.TypeReference typeReference4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.node.ContainerNode containerNode5 = objectMapper0.readValue(inputStream3, typeReference4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper1);
        org.junit.Assert.assertNotNull(objectMapper2);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.metamx.druid.client.DataSegment.delimiter = "http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent";
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        boolean boolean4 = restS3Service1.isRequesterPaysEnabled();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = restS3Service1.isBucketAccessible("[\"content-length-range\", 58, 1]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"content-length-range\", 58, 1]/': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        java.lang.String str8 = restS3Service1.createTorrentUrl("s3.amazonaws.com", "");
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.deleteObjectWithSignedUrl("{\"\": \"s3.amazonaws.com\"}/hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri '{\"\": \"s3.amazonaws.com\"}/hi!': incorrect scheme");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" + "'", str8, "http://s3.amazonaws.com.s3.amazonaws.com/?torrent");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = restS3Service1.renameMetadataKeys(strMap2);
        java.lang.String str4 = restS3Service1.getEndpoint();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.StorageObjectsChunk storageObjectsChunk11 = restS3Service1.listObjectsChunked("[\"{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}\", \"${\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}\", \"[\"content-length-range\", 58, 1]\"]", "[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]", "", (long) (byte) 1, "[\"content-length-range\", 58, 1]", false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}\", \"${\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}\", \"[\"content-length-range\", 58, 1]\"]/&max-keys=1&prefix=%5B%22starts-with%22%2C%20%22%24%2Fhome%2FCIN%2Flmps2%2Fsemantic-conflict-study%2FSMAT%2Foutput-test-dest%2Fdruid%2F05168808c278c080c59c19e858d9471b316cd1f5%2Frandoop-modified_4%2Fhi%21%22%2C%20%22%22%5D&delimiter&marker=%5B%22content-length-range%22%2C%2058%2C%201%5D': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "s3.amazonaws.com" + "'", str4, "s3.amazonaws.com");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider6 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service7 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials4, "null", credentialsProvider6);
        org.jets3t.service.security.ProviderCredentials providerCredentials8 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service9 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service9.renameMetadataKeys(strMap10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = restS3Service7.renameMetadataKeys(strMap10);
        org.jets3t.service.security.ProviderCredentials providerCredentials13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = org.jets3t.service.S3Service.createSignedUrl("null", "{\"\": \"s3.amazonaws.com\"}/hi!", "[\"\", \"$http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\", \"null\"]", "{\"http://s3.amazonaws.com//hi%21?torrent\": \"\"}", strMap12, providerCredentials13, (long) 1, true, true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        java.lang.String str5 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.JsonFactory jsonFactory7 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider8 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig10 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig11 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory7, serializerProvider8, deserializerProvider9, serializationConfig10, deserializationConfig11);
        org.codehaus.jackson.map.ObjectWriter objectWriter13 = objectMapper12.defaultPrettyPrintingWriter();
        org.codehaus.jackson.map.ser.FilterProvider filterProvider14 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter15 = objectMapper12.writer(filterProvider14);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher16 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper12);
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object[] s3ObjectArray21 = restS3Service1.listObjects("", "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", "{\"\": \"s3.amazonaws.com\"}/hi!", (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: Failed to parse XML document with handler class org.jets3t.service.impl.rest.XmlResponsesSaxParser$ListBucketHandler");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "x-amz-meta-" + "'", str5, "x-amz-meta-");
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectWriter15);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        java.lang.String str3 = restS3Service1.getInvokingApplicationDescription();
        // The following exception was thrown during execution in test generation
        try {
            restS3Service1.enableBucketVersioning("/");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher5 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig3, objectMapper4);
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig6 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper7 = null;
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher8 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig6, objectMapper7);
        java.util.Calendar calendar12 = null;
        java.util.Calendar calendar13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "[\"starts-with\", \"$<form action=\"https://.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\n<input type=\"hidden\" name=\"key\" value=\"hi!\">\n<input name=\"file\" type=\"file\">\n<br>\n<input type=\"submit\" value=\"Upload to Amazon S3\">\n</form>\", \"\"]" };
        java.lang.String[] strArray17 = new java.lang.String[] { "http://s3.amazonaws.com.s3.amazonaws.com/?torrent" };
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3Object s3Object20 = restS3Service1.getVersionedObject("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent", "[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]", "{\"\": \"s3.amazonaws.com\"}/hi!", calendar12, calendar13, strArray15, strArray17, (java.lang.Long) 100L, (java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid uri 'https://s3.amazonaws.com:443/[\"starts-with\", \"$/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!\", \"\"]/%7B%22%22%3A%20%22s3.amazonaws.com%22%7D%2Fhi%21?versionId=http%3A%2F%2Fs3.amazonaws.com%2Fhttp%253A%252F%252Fs3.amazonaws.com%252F%252F%253Ftorrent%2Fhi%2521%3Ftorrent': escaped absolute path not valid");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher0 = new com.metamx.druid.loading.S3SegmentPusher();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig1 = null;
        s3SegmentPusher0.config = s3SegmentPusherConfig1;
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig3 = null;
        s3SegmentPusher0.config = s3SegmentPusherConfig3;
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        boolean boolean4 = restS3Service1.isBucketAccessible("");
        org.jets3t.service.security.ProviderCredentials providerCredentials5 = restS3Service1.getProviderCredentials();
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.S3BucketVersioningStatus s3BucketVersioningStatus7 = restS3Service1.getBucketVersioningStatus("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
            org.junit.Assert.fail("Expected exception of type org.jets3t.service.S3ServiceException; message: S3 Error Message.");
        } catch (org.jets3t.service.S3ServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(providerCredentials5);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.metamx.emitter.EmittingLogger emittingLogger1 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable2 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper4 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = objectMapper4.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper6 = objectMapper4.disableDefaultTyping();
        java.lang.Object obj7 = null;
        java.lang.String str8 = objectMapper4.writeValueAsString(obj7);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider9 = objectMapper4.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory10 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider14 = objectMapper11.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider15 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper16 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory10, serializerProvider14, deserializerProvider15);
        org.codehaus.jackson.map.ObjectMapper objectMapper17 = objectMapper4.setSerializerProvider(serializerProvider14);
        org.codehaus.jackson.map.ObjectMapper objectMapper18 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.AnnotationIntrospector annotationIntrospector19 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper18.setAnnotationIntrospector(annotationIntrospector19);
        org.codehaus.jackson.map.ObjectMapper objectMapper21 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper23 = objectMapper21.disableDefaultTyping();
        java.lang.Object obj24 = null;
        java.lang.String str25 = objectMapper21.writeValueAsString(obj24);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider26 = objectMapper21.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory27 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper28 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper30 = objectMapper28.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider32 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper33 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory27, serializerProvider31, deserializerProvider32);
        org.codehaus.jackson.map.ObjectMapper objectMapper34 = objectMapper21.setSerializerProvider(serializerProvider31);
        org.codehaus.jackson.map.ObjectMapper objectMapper35 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper36 = objectMapper35.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper37 = objectMapper35.disableDefaultTyping();
        java.lang.Object obj38 = null;
        java.lang.String str39 = objectMapper35.writeValueAsString(obj38);
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider40 = objectMapper35.getDeserializerProvider();
        org.codehaus.jackson.JsonFactory jsonFactory41 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper42 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper44 = objectMapper42.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider45 = objectMapper42.getSerializerProvider();
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider46 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper47 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory41, serializerProvider45, deserializerProvider46);
        org.codehaus.jackson.map.ObjectMapper objectMapper48 = objectMapper35.setSerializerProvider(serializerProvider45);
        org.jets3t.service.security.ProviderCredentials providerCredentials49 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider51 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials52 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service53 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials52);
        org.jets3t.service.security.ProviderCredentials providerCredentials54 = restS3Service53.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager55 = null;
        restS3Service53.setHttpConnectionManager(httpConnectionManager55);
        org.jets3t.service.Jets3tProperties jets3tProperties57 = restS3Service53.getJetS3tProperties();
        org.apache.commons.httpclient.HostConfiguration hostConfiguration58 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service59 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials49, "", credentialsProvider51, jets3tProperties57, hostConfiguration58);
        java.lang.Object[] objArray60 = new java.lang.Object[] { objectMapper4, objectMapper18, objectMapper21, serializerProvider45, restS3Service59 };
        emittingLogger1.warn(throwable2, "s3.amazonaws.com", objArray60);
        java.lang.Throwable throwable62 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper64 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper65 = objectMapper64.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper66 = objectMapper64.disableDefaultTyping();
        org.codehaus.jackson.map.SerializerProvider serializerProvider67 = objectMapper64.getSerializerProvider();
        java.text.DateFormat dateFormat68 = null;
        objectMapper64.setDateFormat(dateFormat68);
        org.codehaus.jackson.node.ArrayNode arrayNode70 = objectMapper64.createArrayNode();
        com.metamx.emitter.EmittingLogger emittingLogger72 = new com.metamx.emitter.EmittingLogger("http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent");
        java.lang.Throwable throwable73 = null;
        com.metamx.emitter.EmittingLogger emittingLogger76 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable77 = null;
        com.metamx.emitter.EmittingLogger emittingLogger80 = new com.metamx.emitter.EmittingLogger("hi!");
        java.lang.Throwable throwable81 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper83 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper84 = objectMapper83.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper85 = objectMapper83.disableDefaultTyping();
        org.codehaus.jackson.map.SerializationConfig.Feature[] featureArray86 = new org.codehaus.jackson.map.SerializationConfig.Feature[] {};
        org.codehaus.jackson.map.ObjectMapper objectMapper87 = objectMapper83.enable(featureArray86);
        emittingLogger80.warn(throwable81, "", (java.lang.Object[]) featureArray86);
        emittingLogger76.trace(throwable77, "/", (java.lang.Object[]) featureArray86);
        emittingLogger72.trace(throwable73, "x-amz-meta-", (java.lang.Object[]) featureArray86);
        org.codehaus.jackson.map.ObjectMapper objectMapper91 = objectMapper64.enable(featureArray86);
        emittingLogger1.error(throwable62, "s3.amazonaws.com", (java.lang.Object[]) featureArray86);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(deserializerProvider9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializerProvider14);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "null" + "'", str25, "null");
        org.junit.Assert.assertNotNull(deserializerProvider26);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "null" + "'", str39, "null");
        org.junit.Assert.assertNotNull(deserializerProvider40);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(serializerProvider45);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNull(providerCredentials54);
        org.junit.Assert.assertNotNull(jets3tProperties57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertNotNull(arrayNode70);
        org.junit.Assert.assertNotNull(objectMapper84);
        org.junit.Assert.assertNotNull(objectMapper85);
        org.junit.Assert.assertNotNull(featureArray86);
        org.junit.Assert.assertNotNull(objectMapper87);
        org.junit.Assert.assertNotNull(objectMapper91);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service3 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "{\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}", credentialsProvider2);
        org.jets3t.service.security.ProviderCredentials providerCredentials4 = restS3Service3.getAWSCredentials();
        org.jets3t.service.model.MultipartUpload multipartUpload5 = null;
        org.jets3t.service.model.S3Object s3Object7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.model.MultipartPart multipartPart8 = restS3Service3.multipartUploadPart(multipartUpload5, (java.lang.Integer) 32, s3Object7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials4);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.codehaus.jackson.map.ObjectMapper objectMapper0 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.PrettyPrinter prettyPrinter1 = null;
        org.codehaus.jackson.map.ObjectWriter objectWriter2 = objectMapper0.prettyPrintingWriter(prettyPrinter1);
        org.codehaus.jackson.FormatSchema formatSchema3 = null;
        org.codehaus.jackson.map.ObjectReader objectReader4 = objectMapper0.schemaBasedReader(formatSchema3);
        org.codehaus.jackson.map.ObjectMapper objectMapper5 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.node.ObjectNode objectNode6 = objectMapper5.createObjectNode();
        org.codehaus.jackson.FormatSchema formatSchema7 = null;
        org.codehaus.jackson.map.ObjectReader objectReader8 = objectMapper5.schemaBasedReader(formatSchema7);
        byte[] byteArray10 = objectMapper5.writeValueAsBytes((java.lang.Object) 10L);
        org.codehaus.jackson.map.ObjectMapper objectMapper11 = new org.codehaus.jackson.map.ObjectMapper();
        org.codehaus.jackson.map.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        org.codehaus.jackson.map.ObjectMapper objectMapper13 = objectMapper11.disableDefaultTyping();
        java.io.File file15 = new java.io.File("hi!");
        java.io.File file17 = new java.io.File(file15, "");
        java.lang.Class<?> wildcardClass18 = file15.getClass();
        org.codehaus.jackson.type.JavaType javaType19 = objectMapper13.constructType((java.lang.reflect.Type) wildcardClass18);
        // The following exception was thrown during execution in test generation
        try {
            org.codehaus.jackson.map.ObjectMapper objectMapper20 = objectMapper0.readValue(byteArray10, javaType19);
            org.junit.Assert.fail("Expected exception of type org.codehaus.jackson.map.JsonMappingException; message: Can not instantiate value of type [simple type, class java.io.File] from JSON integral number; no single-int-arg constructor/factory method");
        } catch (org.codehaus.jackson.map.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter2);
        org.junit.Assert.assertNotNull(objectReader4);
        org.junit.Assert.assertNotNull(objectNode6);
        org.junit.Assert.assertNotNull(objectReader8);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[49, 48]");
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNull("file15.getParent() == null", file15.getParent());
        org.junit.Assert.assertEquals(file15.toString(), "hi!");
        org.junit.Assert.assertNull("file17.getParent() == null", file17.getParent());
        org.junit.Assert.assertEquals(file17.toString(), "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(javaType19);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider2 = null;
        org.jets3t.service.Jets3tProperties jets3tProperties3 = null;
        org.apache.commons.httpclient.HostConfiguration hostConfiguration4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service5 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0, "http://s3.amazonaws.com//?torrent", credentialsProvider2, jets3tProperties3, hostConfiguration4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.joda.time.Interval interval1 = null;
        org.jets3t.service.security.ProviderCredentials providerCredentials3 = null;
        org.apache.commons.httpclient.auth.CredentialsProvider credentialsProvider5 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service6 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials3, "null", credentialsProvider5);
        org.jets3t.service.security.ProviderCredentials providerCredentials7 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service8 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = restS3Service8.renameMetadataKeys(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = restS3Service6.renameMetadataKeys(strMap9);
        com.metamx.druid.client.DataSegment.Builder builder12 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        com.metamx.druid.client.DataSegment.Builder builder17 = builder12.dimensions((java.util.List<java.lang.String>) strList15);
        com.metamx.druid.client.DataSegment.Builder builder19 = builder17.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder21 = builder19.size((-1L));
        com.metamx.druid.client.DataSegment.Builder builder22 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        com.metamx.druid.client.DataSegment.Builder builder27 = builder22.dimensions((java.util.List<java.lang.String>) strList25);
        com.metamx.druid.client.DataSegment.Builder builder28 = builder19.metrics((java.util.List<java.lang.String>) strList25);
        com.metamx.druid.client.DataSegment.Builder builder29 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        com.metamx.druid.client.DataSegment.Builder builder34 = builder29.dimensions((java.util.List<java.lang.String>) strList32);
        com.metamx.druid.client.DataSegment.Builder builder36 = builder34.version("http://s3.amazonaws.com//?torrent");
        com.metamx.druid.client.DataSegment.Builder builder38 = builder36.dataSource("hi!");
        com.metamx.druid.client.DataSegment.Builder builder39 = new com.metamx.druid.client.DataSegment.Builder();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        com.metamx.druid.client.DataSegment.Builder builder44 = builder39.dimensions((java.util.List<java.lang.String>) strList42);
        com.metamx.druid.client.DataSegment.Builder builder45 = builder38.metrics((java.util.List<java.lang.String>) strList42);
        com.metamx.druid.shard.ShardSpec shardSpec46 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment48 = new com.metamx.druid.client.DataSegment("x-amz-meta-", interval1, "[\"{\"{\"\": \"s3.amazonaws.com\"}\": \"acl,policy,torrent,logging,location,requestPayment,versions,versioning,versionId,uploads,uploadId,partNumber,website,notification\"}\", \"${\"http://s3.amazonaws.com/http%3A%2F%2Fs3.amazonaws.com%2F%2F%3Ftorrent/hi%21?torrent\": \"x-amz-meta-\"}\", \"[\"content-length-range\", 58, 1]\"]", strMap11, (java.util.List<java.lang.String>) strList25, (java.util.List<java.lang.String>) strList42, shardSpec46, (long) '/');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.jets3t.service.security.ProviderCredentials providerCredentials0 = null;
        org.jets3t.service.impl.rest.httpclient.RestS3Service restS3Service1 = new org.jets3t.service.impl.rest.httpclient.RestS3Service(providerCredentials0);
        org.jets3t.service.security.ProviderCredentials providerCredentials2 = restS3Service1.getProviderCredentials();
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager3 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager3);
        org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager5 = null;
        restS3Service1.setHttpConnectionManager(httpConnectionManager5);
        java.lang.String str7 = restS3Service1.getRestMetadataPrefix();
        com.metamx.druid.loading.S3SegmentPusherConfig s3SegmentPusherConfig8 = null;
        org.codehaus.jackson.JsonFactory jsonFactory9 = null;
        org.codehaus.jackson.map.SerializerProvider serializerProvider10 = null;
        org.codehaus.jackson.map.DeserializerProvider deserializerProvider11 = null;
        org.codehaus.jackson.map.SerializationConfig serializationConfig12 = null;
        org.codehaus.jackson.map.DeserializationConfig deserializationConfig13 = null;
        org.codehaus.jackson.map.ObjectMapper objectMapper14 = new org.codehaus.jackson.map.ObjectMapper(jsonFactory9, serializerProvider10, deserializerProvider11, serializationConfig12, deserializationConfig13);
        com.metamx.druid.loading.S3SegmentPusher s3SegmentPusher15 = new com.metamx.druid.loading.S3SegmentPusher(restS3Service1, s3SegmentPusherConfig8, objectMapper14);
        java.io.File file17 = new java.io.File("hi!");
        java.io.File file19 = new java.io.File(file17, "");
        java.lang.String str20 = file17.getAbsolutePath();
        com.metamx.druid.client.DataSegment dataSegment21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.metamx.druid.client.DataSegment dataSegment22 = s3SegmentPusher15.push(file17, dataSegment21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(providerCredentials2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "x-amz-meta-" + "'", str7, "x-amz-meta-");
        org.junit.Assert.assertNull("file17.getParent() == null", file17.getParent());
        org.junit.Assert.assertEquals(file17.toString(), "hi!");
        org.junit.Assert.assertNull("file19.getParent() == null", file19.getParent());
        org.junit.Assert.assertEquals(file19.toString(), "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!" + "'", str20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/druid/05168808c278c080c59c19e858d9471b316cd1f5/randoop-modified_4/hi!");
    }
}
