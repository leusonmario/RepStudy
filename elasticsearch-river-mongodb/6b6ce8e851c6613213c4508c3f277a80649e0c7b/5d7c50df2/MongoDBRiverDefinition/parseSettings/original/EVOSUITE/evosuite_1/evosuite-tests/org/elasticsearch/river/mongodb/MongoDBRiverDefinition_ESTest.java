/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 06 16:11:46 GMT 2021
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.LazyDBList;
import com.mongodb.MongoClientOptions;
import com.mongodb.ServerAddress;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.charset.Charset;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import org.apache.lucene.codecs.Codec;
import org.apache.lucene.index.SegmentInfo;
import org.apache.lucene.store.Directory;
import org.bson.LazyBSONCallback;
import org.bson.LazyBSONList;
import org.bson.types.BSONTimestamp;
import org.bson.types.Binary;
import org.elasticsearch.Version;
import org.elasticsearch.action.support.replication.ShardReplicationOperationRequest;
import org.elasticsearch.action.termvector.TermVectorRequest;
import org.elasticsearch.cluster.metadata.MetaData;
import org.elasticsearch.common.collect.ImmutableBiMap;
import org.elasticsearch.common.collect.ImmutableList;
import org.elasticsearch.common.collect.ImmutableSortedMap;
import org.elasticsearch.common.component.Lifecycle;
import org.elasticsearch.common.io.stream.BytesStreamInput;
import org.elasticsearch.common.jackson.core.ObjectCodec;
import org.elasticsearch.common.jackson.core.io.IOContext;
import org.elasticsearch.common.jackson.core.json.UTF8StreamJsonParser;
import org.elasticsearch.common.jackson.core.sym.BytesToNameCanonicalizer;
import org.elasticsearch.common.jackson.core.util.BufferRecycler;
import org.elasticsearch.common.joda.time.DateTimeZone;
import org.elasticsearch.common.logging.ESLoggerFactory;
import org.elasticsearch.common.settings.ImmutableSettings;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.unit.ByteSizeUnit;
import org.elasticsearch.common.unit.ByteSizeValue;
import org.elasticsearch.common.unit.TimeValue;
import org.elasticsearch.discovery.DiscoverySettings;
import org.elasticsearch.env.Environment;
import org.elasticsearch.index.mapper.core.CompletionFieldMapper;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.river.RiverSettings;
import org.elasticsearch.river.mongodb.MongoDBRiverDefinition;
import org.elasticsearch.river.mongodb.Timestamp;
import org.elasticsearch.script.ScriptEngineService;
import org.elasticsearch.script.ScriptService;
import org.elasticsearch.search.aggregations.metrics.tophits.TopHitsContext;
import org.elasticsearch.search.internal.SearchContext;
import org.elasticsearch.search.lookup.SearchLookup;
import org.elasticsearch.threadpool.ThreadPool;
import org.elasticsearch.threadpool.ThreadPoolStats;
import org.elasticsearch.watcher.ResourceWatcherService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MongoDBRiverDefinition_ESTest extends MongoDBRiverDefinition_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "f:<;|B$nL=@U";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.indexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string2 = "syZx-sL>8|-422SU^";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoAdminPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("f:<;|B$nL=@U", mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("syZx-sL>8|-422SU^", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      boolean boolean0 = mongoDBRiverDefinition0.isDropCollection();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("f:<;|B$nL=@U", mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("syZx-sL>8|-422SU^", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      String string3 = mongoDBRiverDefinition0.getIndexName();
      assertNotNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("f:<;|B$nL=@U", mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("syZx-sL>8|-422SU^", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("f:<;|B$nL=@U", string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string2);
      assertSame(string3, string1);
      assertNotSame(string3, string0);
      
      String string4 = "org.elasticsearch.common.joda.time.chrono.LimitChronology$LimitDurationField";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string4, mongoDBRiverDefinition0.SOCKET_TIMEOUT);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // socket_timeout
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "object";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "'^Gf";
      Boolean boolean0 = Boolean.valueOf(string1);
      assertNotNull(boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0);
      assertNotSame(string1, string0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.isMongos(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.dropCollection(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean2 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      
      int int0 = 60000;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals(60000, bSONTimestamp0.getInc());
      
      boolean boolean3 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.mongoSecondaryReadPreference(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean3 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      
      String string2 = "connect_timeout";
      ServerAddress serverAddress0 = new ServerAddress(string1);
      assertNotNull(serverAddress0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.getPort());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(string2, serverAddress0);
      assertNotNull(basicDBObject0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean4 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean4);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean1 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      
      String string3 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder3.scriptType(string3);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(boolean1 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder0.statisticsIndexName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder7.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      
      boolean boolean5 = true;
      boolean boolean6 = bSONTimestamp0.equals(serverAddress0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean6 == boolean3);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6 == boolean5);
      assertFalse(boolean6 == boolean4);
      assertFalse(boolean6 == boolean1);
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals(60000, bSONTimestamp0.getInc());
      assertFalse(boolean6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder2.disableIndexRefresh(boolean5);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      
      boolean boolean7 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean7);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean1 == boolean6);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean7 == boolean6);
      assertFalse(boolean7 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder7.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean1 == boolean6);
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      
      int int1 = mongoDBRiverDefinition0.getThrottleSize();
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(0, int1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder12.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean1 == boolean6);
      assertFalse(boolean1 == boolean2);
      assertFalse(int0 == int1);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      
      String string4 = mongoDBRiverDefinition0.getMongoCollection();
      assertNull(string4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      
      String string5 = mongoDBRiverDefinition0.getStatisticsTypeName();
      assertNull(string5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      
      Boolean boolean8 = mongoDBRiverDefinition0.isMongos();
      assertNotNull(boolean8);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean8.equals((Object)boolean4));
      assertFalse(boolean8.equals((Object)boolean1));
      assertFalse(boolean8.equals((Object)boolean7));
      assertTrue(boolean8.equals((Object)boolean6));
      assertFalse(boolean8.equals((Object)boolean5));
      assertFalse(boolean8.equals((Object)boolean3));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertFalse(boolean8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      
      boolean boolean9 = mongoDBRiverDefinition0.isDisableIndexRefresh();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertTrue(boolean9 == boolean5);
      assertTrue(boolean9 == boolean1);
      assertTrue(boolean9 == boolean7);
      assertTrue(boolean9 == boolean4);
      assertFalse(boolean9 == boolean6);
      assertTrue(boolean9 == boolean3);
      assertFalse(boolean9 == boolean2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertTrue(boolean9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      
      String string6 = mongoDBRiverDefinition0.getScriptType();
      assertNotNull(string6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean0.equals((Object)boolean9));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals("", string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string6);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      String string0 = "G-e|[1QU ";
      String string1 = "";
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, hashMap0);
      assertNotNull(riverSettings0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      Environment environment0 = new Environment(settings0);
      assertNotNull(environment0);
      
      LinkedHashSet<ScriptEngineService> linkedHashSet0 = new LinkedHashSet<ScriptEngineService>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      
      ThreadPool threadPool0 = new ThreadPool(string0);
      assertNotNull(threadPool0);
      assertFalse(string0.equals((Object)string1));
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, linkedHashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      boolean boolean0 = mongoDBRiverDefinition0.isMongoGridFS();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("", string2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "ad`BC4\\x5\"w~>X[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      int int0 = 630;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string1 = "\\m8";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertFalse(linkedHashSet0.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.includeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertFalse(linkedHashSet0.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertFalse(linkedHashSet1.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder1.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder8.parentTypes(linkedHashSet1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertFalse(linkedHashSet1.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      int int1 = (-1293);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder6.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      
      String string2 = "2w=/";
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = basicDBObject0.remove(object0);
      assertNull(object1);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, mongoDBRiverDefinition_Builder4);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(basicDBObject1, basicDBObject0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder11.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertFalse(linkedHashSet1.contains(string1));
      
      String string3 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder9.parentTypes(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertNotSame(linkedHashSet0, linkedHashSet1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertFalse(linkedHashSet0.contains(string1));
      
      String string4 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("\\m8", string4);
      assertNotSame(string4, string2);
      assertSame(string4, string1);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      int int2 = 982;
      BasicDBObject basicDBObject2 = new BasicDBObject(int2);
      assertNotNull(basicDBObject2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertEquals(0, basicDBObject2.size());
      assertTrue(basicDBObject2.isEmpty());
      assertFalse(basicDBObject2.isPartialObject());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject2);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertEquals(0, basicDBObject2.size());
      assertTrue(basicDBObject2.isEmpty());
      assertFalse(basicDBObject2.isPartialObject());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      
      String string5 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("\\m8", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(string5, string4);
      assertSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      
      boolean boolean3 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // script_type
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "UIovh+wq'k\"lXDBl";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      TermVectorRequest termVectorRequest0 = new TermVectorRequest();
      assertNotNull(termVectorRequest0);
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest0.type());
      
      TermVectorRequest termVectorRequest1 = new TermVectorRequest(termVectorRequest0);
      assertNotNull(termVectorRequest1);
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.type());
      assertNull(termVectorRequest1.index());
      
      Set<String> set0 = termVectorRequest1.selectedFields();
      assertNull(set0);
      assertFalse(termVectorRequest0.equals((Object)termVectorRequest1));
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.type());
      assertNull(termVectorRequest1.index());
      assertNotSame(termVectorRequest0, termVectorRequest1);
      assertNotSame(termVectorRequest1, termVectorRequest0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(termVectorRequest0.equals((Object)termVectorRequest1));
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.type());
      assertNull(termVectorRequest1.index());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(termVectorRequest0, termVectorRequest1);
      assertNotSame(termVectorRequest1, termVectorRequest0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "G@akUG0e";
      Boolean boolean0 = Boolean.FALSE;
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      String string2 = "";
      boolean boolean1 = false;
      String string3 = "$1AU@J\\ &";
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      String string4 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals("null.null", string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      String string5 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string5);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(termVectorRequest0.equals((Object)termVectorRequest1));
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.type());
      assertNull(termVectorRequest1.index());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(termVectorRequest0, termVectorRequest1);
      assertNotSame(termVectorRequest1, termVectorRequest0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      
      int int0 = mongoDBRiverDefinition0.getSocketTimeout();
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(0, int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      MongoClientOptions mongoClientOptions1 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions1);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      String string6 = "index";
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(mongoDBRiverDefinition0.FILTER_FIELD, string6, boolean2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // index
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "Duplicate key-value pairs exist for key ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      Set<String> set0 = DateTimeZone.getAvailableIDs();
      assertNotNull(set0);
      assertFalse(set0.isEmpty());
      assertEquals(578, set0.size());
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(set0.isEmpty());
      assertEquals(578, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.parentTypes(set0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(set0.isEmpty());
      assertEquals(578, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Duplicate key-value pairs exist for key ", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Duplicate key-value pairs exist for key ", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(set0.isEmpty());
      assertEquals(578, set0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Duplicate key-value pairs exist for key ", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.connectTimeout(mongoDBRiverDefinition0.DEFAULT_CONNECT_TIMEOUT);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(set0.isEmpty());
      assertEquals(578, set0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Duplicate key-value pairs exist for key ", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string0));
      
      Boolean boolean0 = mongoDBRiverDefinition0.isMongos();
      assertNull(boolean0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Duplicate key-value pairs exist for key ", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-66);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-100);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-57);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-51);
      byteArray0[5] = byte5;
      byte byte6 = (byte)27;
      byteArray0[6] = byte6;
      LazyBSONCallback lazyBSONCallback0 = new LazyBSONCallback();
      assertNotNull(lazyBSONCallback0);
      
      LazyBSONList lazyBSONList0 = null;
      try {
        lazyBSONList0 = new LazyBSONList(byteArray0, byte2, lazyBSONCallback0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      String string0 = "mongodb";
      MetaData metaData0 = MetaData.EMPTY_META_DATA;
      assertNotNull(metaData0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      
      Settings settings0 = metaData0.transientSettings();
      assertNotNull(settings0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, hashMap0);
      assertNotNull(riverSettings0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      Environment environment0 = new Environment();
      assertNotNull(environment0);
      
      LinkedHashSet<ScriptEngineService> linkedHashSet0 = new LinkedHashSet<ScriptEngineService>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      NodeSettingsService nodeSettingsService0 = null;
      ThreadPool threadPool0 = new ThreadPool(settings0, nodeSettingsService0);
      assertNotNull(threadPool0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      String string1 = resourceWatcherService0.nodeName();
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("", string1);
      assertNotSame(string1, string0);
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, linkedHashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string0, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertNotSame(string0, string1);
      
      String string2 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("mongodb", string2);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      
      String string3 = mongoDBRiverDefinition0.getTypeName();
      assertNotNull(string3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string3.equals((Object)string1));
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("mongodb", string3);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
      assertSame(string3, string0);
      assertSame(string3, string2);
      assertNotSame(string3, string1);
      
      boolean boolean0 = mongoDBRiverDefinition0.isStoreStatistics();
      assertFalse(string0.equals((Object)string1));
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean0);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertFalse(string0.equals((Object)string1));
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "mongodb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = mongoDBRiverDefinition0.isMongoUseSSL();
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string1 = "mongodb";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string1, mongoDBRiverDefinition0.SSL_CONNECTION_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // ssl
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      int int0 = 65;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-24);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-70);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-70);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-121);
      byteArray0[4] = byte4;
      byte byte5 = (byte)82;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-112);
      byteArray0[6] = byte6;
      byte byte7 = (byte)89;
      byteArray0[7] = byte7;
      boolean boolean1 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertArrayEquals(new byte[] {(byte) (-24), (byte) (-70), (byte) (-70), (byte)0, (byte) (-121), (byte)82, (byte) (-112), (byte)89}, byteArray0);
      assertFalse(boolean1);
      assertEquals(8, byteArray0.length);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      Set<String> set0 = DateTimeZone.getAvailableIDs();
      assertNotNull(set0);
      assertEquals(578, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder0.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertEquals(578, set0.size());
      assertFalse(set0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertFalse(set0.contains(string0));
      
      String string1 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string1);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      Set<String> set1 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set1);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      String string2 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string2);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      String string3 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string3);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("", string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(string0, string3);
      assertSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      String string4 = mongoDBRiverDefinition0.getStatisticsTypeName();
      assertNotNull(string4);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("", string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(string0, string4);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(string4, string0);
      assertSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertFalse(boolean0 == boolean1);
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(65, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(string0, string4);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertNotNull(set0);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertTrue(boolean1 == boolean0);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string0 = "prefix";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertTrue(boolean1 == boolean0);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertTrue(boolean1 == boolean0);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertTrue(boolean1 == boolean0);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertTrue(boolean1 == boolean0);
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("prefix", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("prefix", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string0));
      
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean2 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      String string1 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string1);
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("prefix", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("prefix", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertFalse(set0.contains(string1));
      
      String string2 = mongoDBRiverDefinition0.getMongoCollection();
      assertNull(string2);
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("prefix", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("prefix", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string1));
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNull(timestamp0);
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("prefix", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("prefix", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string1));
      
      String string3 = "H<Hog%";
      String string4 = "";
      String string5 = MongoDBRiverDefinition.addRemovePrefix(string3, string4, boolean1);
      assertNotNull(string5);
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertEquals("", string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string5);
      assertNotSame(string4, string3);
      assertSame(string4, string5);
      assertNotSame(string4, string0);
      assertSame(string4, string1);
      assertSame(string5, string1);
      assertNotSame(string5, string0);
      assertSame(string5, string4);
      assertNotSame(string5, string3);
      
      String string6 = mongoDBRiverDefinition0.getMongoLocalPassword();
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertEquals(600, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("prefix", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("prefix", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string6, string0);
      assertSame(string6, string1);
      assertSame(string6, string5);
      assertSame(string6, string4);
      assertNotSame(string6, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string6));
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      long long0 = 0L;
      ByteSizeValue byteSizeValue0 = new ByteSizeValue(long0);
      assertNotNull(byteSizeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      int int0 = (-1654);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder3.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder5 = mongoDBRiverDefinition_Bulk_Builder3.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder2);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder6 = mongoDBRiverDefinition_Bulk_Builder3.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder6, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder6, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder6, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder6, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder6, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder6, mongoDBRiverDefinition_Bulk_Builder3);
      
      TimeValue timeValue0 = ShardReplicationOperationRequest.DEFAULT_TIMEOUT;
      assertNotNull(timeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder7 = mongoDBRiverDefinition_Bulk_Builder3.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder7, mongoDBRiverDefinition_Bulk_Builder5);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder8 = mongoDBRiverDefinition_Bulk_Builder3.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder5);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder8.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals((-1654), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-1654), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder5);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder9 = mongoDBRiverDefinition_Bulk_Builder8.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder9, mongoDBRiverDefinition_Bulk_Builder8);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder8);
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals((-1654), mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals((-1654), mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      
      TimeValue timeValue1 = mongoDBRiverDefinition_Bulk1.getFlushInterval();
      assertNotNull(timeValue1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals((-1654), mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals((-1654), mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertSame(timeValue1, timeValue0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder9);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder8, mongoDBRiverDefinition_Bulk_Builder5);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "4L2z|A9nc| Ij}p\\";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.riverName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoAdminPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.typeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoDb(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      
      String string3 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder6.scriptType(string3);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean2 = mongoDBRiverDefinition0.isDropCollection();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean3 = mongoDBRiverDefinition0.isDropCollection();
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string4 = mongoDBRiverDefinition0.getMongoDb();
      assertNotNull(string4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("4L2z|A9nc| Ij}p\\", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("", string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string0, string2);
      assertSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string4, string1);
      assertSame(string4, string0);
      assertSame(string4, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "multi_match";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "cnW9)(1a3-ayA'E/]a";
      String string2 = "/,Rf|C/PfO57s 1";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      String string3 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.includeCollection(string3);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder7.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      int int0 = (-198);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder6.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder8.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder8.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      String string4 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNull(string4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder2.mongoLocalUser(mongoDBRiverDefinition0.CONCURRENT_REQUESTS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      Set<String> set0 = mongoDBRiverDefinition0.getParentTypes();
      assertNull(set0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoGridFS();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertTrue(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      boolean boolean2 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertTrue(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      String string5 = mongoDBRiverDefinition0.getIndexName();
      assertNotNull(string5);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals("multi_match", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertSame(string5, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      String string6 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string6);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("/,Rf|C/PfO57s 1", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("multi_match", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals((-198), mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("multi_match", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("cnW9)(1a3-ayA'E/]a", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals("", string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string5);
      assertNotSame(string6, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string0 = "A{]vM.$>,\"t{}SJ%";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("A{]vM.$>,\"t{}SJ%", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("A{]vM.$>,\"t{}SJ%", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("A{]vM.$>,\"t{}SJ%", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("A{]vM.$>,\"t{}SJ%", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertTrue(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "Days";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      String string1 = "tPu(7v]";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoSecondaryReadPreference(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      String string0 = "collection";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "stats";
      RiverSettings riverSettings0 = null;
      ScriptService scriptService0 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No settings specified
         //
         verifyException("org.elasticsearch.common.Preconditions", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      int int0 = 170;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals(170, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(170, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      Boolean boolean1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertEquals(170, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals(170, bSONTimestamp0.getInc());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertEquals(170, bSONTimestamp0.getInc());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "QM}Cp'Dl\"KvWQW\\\\";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // QM}Cp'Dl\"KvWQW\\\\
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoOplogFilter();
      assertNull(basicDBObject0);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      String string1 = null;
      BasicDBObject basicDBObject1 = MongoDBRiverDefinition.convertToBasicDBObject(string1);
      assertNotNull(basicDBObject1);
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition1.getBulk();
      assertNull(mongoDBRiverDefinition_Bulk0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string2 = ">w,mO}tkXs";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      String string0 = "4RrWdBYD?w~L`g";
      String string1 = "{";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string0, string1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // {
         //  ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      String string0 = "";
      String string1 = MongoDBRiverDefinition.addPrefix(string0, string0);
      assertNotNull(string1);
      assertEquals("", string1);
      assertSame(string0, string1);
      assertSame(string1, string0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      TreeSet<String> treeSet0 = new TreeSet<String>();
      assertNotNull(treeSet0);
      assertFalse(treeSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.parentTypes(treeSet0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(treeSet0.contains(string0));
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string2, string1);
      assertSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(treeSet0.contains(string1));
      
      String string3 = "script_type";
      String string4 = "vincentySphere";
      String string5 = "3Q~<";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.typeName(string5);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(treeSet0.contains(string5));
      
      int int0 = 603;
      boolean boolean0 = false;
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int0 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      Boolean boolean1 = Boolean.valueOf(boolean0);
      assertNotNull(boolean1);
      assertFalse(boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      Set<String> set0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder3.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder3.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder8.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      int int1 = mongoDBRiverDefinition0.getSocketTimeout();
      assertTrue(int1 == int0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0, int1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      boolean boolean2 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertTrue(boolean2 == boolean0);
      assertTrue(int0 == int1);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      Set<String> set1 = ZoneId.getAvailableZoneIds();
      assertNotNull(set1);
      assertEquals(600, set1.size());
      assertFalse(set1.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder1.excludeFields(set1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertTrue(boolean0 == boolean2);
      assertEquals(600, set1.size());
      assertFalse(set1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "collection";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoUseSSL(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      String string1 = "%s does not construct a supertype of %s";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoLocalPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      String string2 = "t:s`MEw;:@";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoDb(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      int int0 = mongoDBRiverDefinition0.getConnectTimeout();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(0, int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.mongoGridFS(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean2 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      boolean boolean3 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      
      Locale locale0 = Locale.TAIWAN;
      assertNotNull(locale0);
      assertEquals("zh_TW", locale0.toString());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("TWN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("TW", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      assertNotNull(set0);
      assertEquals("zh_TW", locale0.toString());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("TWN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("TW", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertFalse(set0.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder3.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertEquals("zh_TW", locale0.toString());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("TWN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("TW", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(set0.contains(string1));
      
      Set<String> set1 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder1.includeFields(set1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      boolean boolean4 = mongoDBRiverDefinition0.isMongoSSLVerifyCertificate();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder1.connectTimeout(mongoDBRiverDefinition0.DEFAULT_CONCURRENT_REQUESTS);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      String string3 = mongoDBRiverDefinition0.getScriptType();
      assertNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder11.mongoDb(mongoDBRiverDefinition0.INDEX_OBJECT);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("collection", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("%s does not construct a supertype of %s", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("t:s`MEw;:@", mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      String string1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder0.includeCollection(mongoDBRiverDefinition0.SERVERS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      
      String string0 = mongoDBRiverDefinition0.getScript();
      assertNull(string0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      
      String string1 = "n4jeM^J.7!PE^#$(7p";
      String string2 = "SKU=t";
      String string3 = "";
      String string4 = MongoDBRiverDefinition.removePrefix(string2, string3);
      assertNotNull(string4);
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertEquals("", string4);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string4);
      assertNotSame(string3, string1);
      assertSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(mongoDBRiverDefinition0.PORT_FIELD, string1, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // n4jeM^J.7!PE^#$(7p
         //  ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      String string1 = "org.elasticsearch.index.mapper.ip.IpFieldMapper$TypeParser";
      ArrayList<LazyDBList> arrayList0 = new ArrayList<LazyDBList>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(string1, arrayList0);
      assertNotNull(basicDBObject0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      String string1 = "";
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string1);
      assertNotNull(basicDBObject0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertNotSame(string1, string0);
      
      String string2 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("", string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      int int0 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1, int0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      
      Collection<Object> collection0 = basicDBObject0.values();
      assertNotNull(collection0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      
      boolean boolean1 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertTrue(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      String string3 = "ssl_verify_certificate";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.includeCollection(string3);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(boolean0 == boolean1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "^@N lG?j/A";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      LinkedList<ServerAddress> linkedList0 = new LinkedList<ServerAddress>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoServers(linkedList0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(0, linkedList0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "index";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, linkedList0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, linkedList0.size());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("^@N lG?j/A", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string2 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, linkedList0.size());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("^@N lG?j/A", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      String string0 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string0);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      String string1 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string1);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      String string2 = mongoDBRiverDefinition0.getIndexName();
      assertNull(string2);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = 1626;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.concurrentRequests(mongoDBRiverDefinition0.DEFAULT_DB_PORT);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder3);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1626, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(27017, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      int int1 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertFalse(int1 == int0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(1626, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(27017, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, int1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string0);
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string2 = "i=-+|Iyleq9F4vGQ^J";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.riverName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder7.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoSSLVerifyCertificate();
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertTrue(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      String string3 = "";
      int int0 = 0;
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved(string3, int0);
      assertNotNull(inetSocketAddress0);
      assertFalse(string3.equals((Object)string2));
      assertEquals(":0", inetSocketAddress0.toString());
      assertEquals(0, inetSocketAddress0.getPort());
      assertEquals("", inetSocketAddress0.getHostString());
      assertTrue(inetSocketAddress0.isUnresolved());
      assertNotSame(string3, string2);
      assertSame(string3, string1);
      
      ServerAddress serverAddress0 = new ServerAddress(inetSocketAddress0);
      assertNotNull(serverAddress0);
      assertFalse(string3.equals((Object)string2));
      assertEquals(":0", inetSocketAddress0.toString());
      assertEquals(0, inetSocketAddress0.getPort());
      assertEquals("", inetSocketAddress0.getHostString());
      assertTrue(inetSocketAddress0.isUnresolved());
      assertEquals(0, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      
      String string4 = "?";
      Boolean boolean2 = Boolean.valueOf(string4);
      assertNotNull(boolean2);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertTrue(boolean2.equals((Object)boolean1));
      assertFalse(boolean2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.isMongos(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertTrue(boolean2.equals((Object)boolean1));
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0);
      assertNotNull(immutableList0);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertEquals(":0", inetSocketAddress0.toString());
      assertEquals(0, inetSocketAddress0.getPort());
      assertEquals("", inetSocketAddress0.getHostString());
      assertTrue(inetSocketAddress0.isUnresolved());
      assertEquals(0, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(9, immutableList0.size());
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertSame(string3, string1);
      assertTrue(immutableList0.contains(serverAddress0));
      
      ImmutableList<ServerAddress> immutableList1 = immutableList0.reverse();
      assertNotNull(immutableList1);
      assertTrue(immutableList1.equals((Object)immutableList0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertEquals(":0", inetSocketAddress0.toString());
      assertEquals(0, inetSocketAddress0.getPort());
      assertEquals("", inetSocketAddress0.getHostString());
      assertTrue(inetSocketAddress0.isUnresolved());
      assertEquals(0, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(9, immutableList0.size());
      assertEquals(9, immutableList1.size());
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertSame(string3, string1);
      assertTrue(immutableList0.contains(serverAddress0));
      assertTrue(immutableList1.contains(serverAddress0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder3.riverIndexName(mongoDBRiverDefinition0.ACTIONS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string4);
      assertSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.mongoServers(immutableList1);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertTrue(immutableList0.equals((Object)immutableList1));
      assertTrue(immutableList1.equals((Object)immutableList0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertEquals(":0", inetSocketAddress0.toString());
      assertEquals(0, inetSocketAddress0.getPort());
      assertEquals("", inetSocketAddress0.getHostString());
      assertTrue(inetSocketAddress0.isUnresolved());
      assertEquals(0, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertEquals(9, immutableList0.size());
      assertEquals(9, immutableList1.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertSame(string3, string1);
      assertTrue(immutableList0.contains(serverAddress0));
      assertTrue(immutableList1.contains(serverAddress0));
      
      String string5 = mongoDBRiverDefinition0.getRiverName();
      assertNotNull(string5);
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("i=-+|Iyleq9F4vGQ^J", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string4);
      assertSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      int int1 = mongoDBRiverDefinition0.getSocketTimeout();
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertTrue(int1 == int0);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0, int1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string4);
      assertSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      boolean boolean3 = mongoDBRiverDefinition0.isMongoUseSSL();
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string4);
      assertSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("i=-+|Iyleq9F4vGQ^J", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string4);
      assertSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertFalse(list0.contains(serverAddress0));
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = 960;
      int int1 = 652;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int1);
      assertNotNull(bSONTimestamp0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(652, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(652, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "Wv#yf,i_]fKmZT";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(652, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(652, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(652, bSONTimestamp0.getInc());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("Wv#yf,i_]fKmZT", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Wv#yf,i_]fKmZT", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(652, bSONTimestamp0.getInc());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("Wv#yf,i_]fKmZT", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("Wv#yf,i_]fKmZT", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("Wv#yf,i_]fKmZT", string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(string1, string0);
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      String string0 = "scriptType";
      String string1 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string0, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      String string1 = "!OgJk>a/j";
      String string2 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string1, string2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      String string0 = "[u/o7IGK=pz\"c ^4";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string0, string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // [u/o7IGK=pz\"c ^4
         //  ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      Binary binary0 = null;
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder0.initialTimestamp(binary0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = 0;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder1.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(0, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      ByteSizeValue byteSizeValue0 = mongoDBRiverDefinition_Bulk0.getBulkSize();
      assertNotNull(byteSizeValue0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(0, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      String string0 = "bulk_timeout";
      String string1 = "I7q$K}1'";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.Builder.EMPTY_SETTINGS;
      assertNotNull(immutableSettings0);
      
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      assertNotNull(treeMap0);
      assertEquals(0, treeMap0.size());
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, treeMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, treeMap0.size());
      
      Environment environment0 = new Environment(immutableSettings0);
      assertNotNull(environment0);
      
      HashSet<ScriptEngineService> hashSet0 = new HashSet<ScriptEngineService>();
      assertNotNull(hashSet0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      
      ThreadPool threadPool0 = new ThreadPool(string1);
      assertNotNull(threadPool0);
      assertFalse(string1.equals((Object)string0));
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(immutableSettings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(immutableSettings0, environment0, hashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, treeMap0.size());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("I7q$K}1'", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getIndexName());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      String string2 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, treeMap0.size());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("I7q$K}1'", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getIndexName());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("I7q$K}1'", string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "No settings specified";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.riverName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoSecondaryReadPreference(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      int int0 = (-2024);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      
      String string1 = "socket_timeout";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      
      String string2 = "flush_interval";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder0.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder1.mongoAdminUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      
      Set<String> set0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder7.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("No settings specified", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("No settings specified", mongoDBRiverDefinition0.getRiverName());
      assertEquals("flush_interval", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals((-2024), mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      
      String string3 = mongoDBRiverDefinition0.getStatisticsIndexName();
      assertNotNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("No settings specified", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("No settings specified", mongoDBRiverDefinition0.getRiverName());
      assertEquals("flush_interval", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals((-2024), mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals("No settings specified", string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertNotSame(string3, string1);
      assertSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      String string0 = null;
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string0);
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      String string1 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string0, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "^=- \"vbVxS";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "db";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoDb(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      int int0 = 182;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(182, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("db", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("^=- \"vbVxS", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = mongoDBRiverDefinition0.isDisableIndexRefresh();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean1 == boolean0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(182, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("db", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("^=- \"vbVxS", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      String string2 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(182, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("db", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("^=- \"vbVxS", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      
      boolean boolean0 = mongoDBRiverDefinition0.isDropCollection();
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.throttleSize(mongoDBRiverDefinition0.DEFAULT_DB_PORT);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = 37;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      int int0 = 170;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals(170, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(170, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      Boolean boolean1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertEquals(170, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals(170, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string1 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(170, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("null.", string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(170, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "ad`BC4\\x5\"w~>X[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      int int0 = 630;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string1 = "\\m8";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.indexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertFalse(linkedHashSet0.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.includeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertFalse(linkedHashSet0.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertFalse(linkedHashSet1.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder9.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder8.parentTypes(linkedHashSet1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertFalse(linkedHashSet1.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      int int1 = (-1293);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder6.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      
      String string2 = "2w=/";
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = basicDBObject0.remove(object0);
      assertNull(object1);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, mongoDBRiverDefinition_Builder4);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder11.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder12);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertFalse(linkedHashSet1.contains(string2));
      
      String string3 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder9.parentTypes(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNotSame(linkedHashSet0, linkedHashSet1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertFalse(linkedHashSet0.contains(string2));
      
      String string4 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals("", string4);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      int int2 = 982;
      BasicDBObject basicDBObject2 = new BasicDBObject(int2);
      assertNotNull(basicDBObject2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertEquals(0, basicDBObject2.size());
      assertFalse(basicDBObject2.isPartialObject());
      assertTrue(basicDBObject2.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject2);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertEquals(0, basicDBObject2.size());
      assertFalse(basicDBObject2.isPartialObject());
      assertTrue(basicDBObject2.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      
      String string5 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals("", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertSame(string5, string4);
      
      boolean boolean3 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertTrue(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      String string1 = "]: [alias] may not be empty string";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder5.mongoAdminUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder7.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      
      String string2 = null;
      BasicDBObject basicDBObject1 = MongoDBRiverDefinition.convertToBasicDBObject(string2);
      assertNotNull(basicDBObject1);
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      
      String string3 = "";
      String string4 = ",";
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string3, string4, boolean1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // ,
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      int int0 = mongoDBRiverDefinition0.getThrottleSize();
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0, int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "object";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "'^Gf";
      Boolean boolean0 = Boolean.valueOf(string1);
      assertNotNull(boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0);
      assertNotSame(string1, string0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.isMongos(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.dropCollection(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean2 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      int int0 = 60000;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals(60000, bSONTimestamp0.getInc());
      
      boolean boolean3 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.mongoSecondaryReadPreference(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean3 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder7.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      
      String string2 = "connect_timeout";
      ServerAddress serverAddress0 = new ServerAddress(string1);
      assertNotNull(serverAddress0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.getPort());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(string2, serverAddress0);
      assertNotNull(basicDBObject0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.getPort());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.getPort());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      
      boolean boolean4 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean4);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      
      String string3 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder3.scriptType(string3);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean1 == boolean2);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder0.statisticsIndexName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder7.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      
      boolean boolean5 = true;
      boolean boolean6 = bSONTimestamp0.equals(serverAddress0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean6 == boolean3);
      assertFalse(boolean6 == boolean4);
      assertFalse(boolean6 == boolean5);
      assertFalse(boolean6 == boolean1);
      assertTrue(boolean6 == boolean2);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals(60000, bSONTimestamp0.getInc());
      assertFalse(boolean6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder2.disableIndexRefresh(boolean5);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      
      boolean boolean7 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean7);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean1 == boolean6);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean7 == boolean6);
      assertFalse(boolean7 == boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder7.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean1 == boolean6);
      assertFalse(boolean1 == boolean2);
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      
      int int1 = mongoDBRiverDefinition0.getThrottleSize();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertTrue(int1 == int0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(60000, int1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder17 = mongoDBRiverDefinition_Builder13.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder17);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(boolean1 == boolean6);
      assertFalse(boolean1 == boolean2);
      assertTrue(int0 == int1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("'^Gf", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.getPort());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertEquals(60000, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      
      String string4 = mongoDBRiverDefinition0.getMongoCollection();
      assertNull(string4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean0.equals((Object)boolean7));
      assertFalse(boolean0.equals((Object)boolean3));
      assertFalse(boolean0.equals((Object)boolean1));
      assertTrue(boolean0.equals((Object)boolean6));
      assertFalse(boolean0.equals((Object)boolean4));
      assertFalse(boolean0.equals((Object)boolean5));
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(60000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("object", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "?Y_.";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      Set<String> set0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      int int0 = 0;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      String string1 = "org.elasticsearch.action.admin.indices.flush.FlushRequestBuilder";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoUseSSL(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.riverIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("?Y_.", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("?Y_.", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("org.elasticsearch.action.admin.indices.flush.FlushRequestBuilder", mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition0.getBulk();
      assertNull(mongoDBRiverDefinition_Bulk0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("?Y_.", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("?Y_.", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("org.elasticsearch.action.admin.indices.flush.FlushRequestBuilder", mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("?Y_.", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("?Y_.", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("org.elasticsearch.action.admin.indices.flush.FlushRequestBuilder", mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder6.advancedTransformation(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      String string2 = "0E5^s:q<pY@p";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder9.mongoAdminPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      int int1 = 1;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder9.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder2.indexName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk2 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk2);
      assertFalse(mongoDBRiverDefinition_Bulk2.equals((Object)mongoDBRiverDefinition_Bulk1));
      assertEquals(1, mongoDBRiverDefinition_Bulk2.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk2.getBulkActions());
      
      int int2 = mongoDBRiverDefinition_Bulk2.getBulkActions();
      assertFalse(mongoDBRiverDefinition_Bulk2.equals((Object)mongoDBRiverDefinition_Bulk1));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1, mongoDBRiverDefinition_Bulk2.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk2.getBulkActions());
      assertEquals(1000, int2);
      assertNotSame(mongoDBRiverDefinition_Bulk2, mongoDBRiverDefinition_Bulk1);
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      TimeValue timeValue0 = DiscoverySettings.DEFAULT_PUBLISH_TIMEOUT;
      assertNotNull(timeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = 1905;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder2.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1905, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals(1905, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int1 = 0;
      Version version0 = Version.fromId(int1);
      assertNotNull(version0);
      assertFalse(int1 == int0);
      assertFalse(version0.snapshot());
      assertEquals(200051, Version.V_0_20_0_RC1_ID);
      assertEquals((byte)0, version0.major);
      assertEquals(901099, Version.V_0_90_10_ID);
      assertEquals(190899, Version.V_0_19_8_ID);
      assertEquals(1000499, Version.V_1_0_4_ID);
      assertEquals(900052, Version.V_0_90_0_RC2_ID);
      assertEquals(180899, Version.V_0_18_8_ID);
      assertEquals(190051, Version.V_0_19_0_RC1_ID);
      assertEquals(180699, Version.V_0_18_6_ID);
      assertEquals(901299, Version.V_0_90_12_ID);
      assertEquals(180299, Version.V_0_18_2_ID);
      assertEquals(180499, Version.V_0_18_4_ID);
      assertEquals(200799, Version.V_0_20_7_ID);
      assertEquals(191199, Version.V_0_19_11_ID);
      assertEquals(1000099, Version.V_1_0_0_ID);
      assertEquals(900899, Version.V_0_90_8_ID);
      assertEquals(1020199, Version.V_1_2_1_ID);
      assertEquals(1000299, Version.V_1_0_2_ID);
      assertEquals(900699, Version.V_0_90_6_ID);
      assertEquals(901499, Version.V_0_90_14_ID);
      assertEquals(1010199, Version.V_1_1_1_ID);
      assertEquals((byte)0, version0.revision);
      assertEquals(200299, Version.V_0_20_2_ID);
      assertEquals(1000051, Version.V_1_0_0_RC1_ID);
      assertEquals(900099, Version.V_0_90_0_ID);
      assertEquals(1000002, Version.V_1_0_0_Beta2_ID);
      assertEquals(900299, Version.V_0_90_2_ID);
      assertEquals(200099, Version.V_0_20_0_ID);
      assertEquals(1020599, Version.V_1_2_5_ID);
      assertEquals(200699, Version.V_0_20_6_ID);
      assertEquals(191299, Version.V_0_19_12_ID);
      assertEquals(190052, Version.V_0_19_0_RC2_ID);
      assertEquals(190199, Version.V_0_19_1_ID);
      assertEquals(1030399, Version.V_1_3_3_ID);
      assertEquals(1020399, Version.V_1_2_3_ID);
      assertEquals(900499, Version.V_0_90_4_ID);
      assertEquals(1030199, Version.V_1_3_1_ID);
      assertEquals((byte)0, version0.minor);
      assertEquals(190399, Version.V_0_19_3_ID);
      assertEquals(200499, Version.V_0_20_4_ID);
      assertEquals(190999, Version.V_0_19_9_ID);
      assertEquals(901199, Version.V_0_90_11_ID);
      assertEquals(180799, Version.V_0_18_7_ID);
      assertEquals(190599, Version.V_0_19_5_ID);
      assertEquals(180599, Version.V_0_18_5_ID);
      assertEquals(900051, Version.V_0_90_0_RC1_ID);
      assertEquals(900001, Version.V_0_90_0_Beta1_ID);
      assertEquals(1000399, Version.V_1_0_3_ID);
      assertEquals(900599, Version.V_0_90_5_ID);
      assertEquals(0, version0.id);
      assertEquals(190799, Version.V_0_19_7_ID);
      assertEquals(1020499, Version.V_1_2_4_ID);
      assertEquals(1030499, Version.V_1_3_4_ID);
      assertEquals(1010299, Version.V_1_1_2_ID);
      assertEquals(1020299, Version.V_1_2_2_ID);
      assertEquals(900799, Version.V_0_90_7_ID);
      assertEquals(191099, Version.V_0_19_10_ID);
      assertEquals(901399, Version.V_0_90_13_ID);
      assertEquals(1000199, Version.V_1_0_1_ID);
      assertEquals(180199, Version.V_0_18_1_ID);
      assertEquals(900999, Version.V_0_90_9_ID);
      assertEquals(1010099, Version.V_1_1_0_ID);
      assertEquals(1020099, Version.V_1_2_0_ID);
      assertEquals(180399, Version.V_0_18_3_ID);
      assertEquals(1000052, Version.V_1_0_0_RC2_ID);
      assertEquals(1000001, Version.V_1_0_0_Beta1_ID);
      assertEquals((byte)0, version0.build);
      assertEquals(200199, Version.V_0_20_1_ID);
      assertEquals(180099, Version.V_0_18_0_ID);
      assertEquals(900399, Version.V_0_90_3_ID);
      assertEquals(190499, Version.V_0_19_4_ID);
      assertEquals(190099, Version.V_0_19_0_ID);
      assertEquals(190699, Version.V_0_19_6_ID);
      assertEquals(190053, Version.V_0_19_0_RC3_ID);
      assertEquals(191399, Version.V_0_19_13_ID);
      assertEquals(900199, Version.V_0_90_1_ID);
      assertEquals(1030299, Version.V_1_3_2_ID);
      assertEquals(200599, Version.V_0_20_5_ID);
      assertEquals(1030099, Version.V_1_3_0_ID);
      assertEquals(200399, Version.V_0_20_3_ID);
      assertEquals(190299, Version.V_0_19_2_ID);
      
      Boolean boolean1 = version0.snapshot;
      assertNull(boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(int1 == int0);
      assertFalse(version0.snapshot());
      assertEquals(200051, Version.V_0_20_0_RC1_ID);
      assertEquals((byte)0, version0.major);
      assertEquals(901099, Version.V_0_90_10_ID);
      assertEquals(190899, Version.V_0_19_8_ID);
      assertEquals(1000499, Version.V_1_0_4_ID);
      assertEquals(900052, Version.V_0_90_0_RC2_ID);
      assertEquals(180899, Version.V_0_18_8_ID);
      assertEquals(190051, Version.V_0_19_0_RC1_ID);
      assertEquals(180699, Version.V_0_18_6_ID);
      assertEquals(901299, Version.V_0_90_12_ID);
      assertEquals(180299, Version.V_0_18_2_ID);
      assertEquals(180499, Version.V_0_18_4_ID);
      assertEquals(200799, Version.V_0_20_7_ID);
      assertEquals(191199, Version.V_0_19_11_ID);
      assertEquals(1000099, Version.V_1_0_0_ID);
      assertEquals(900899, Version.V_0_90_8_ID);
      assertEquals(1020199, Version.V_1_2_1_ID);
      assertEquals(1000299, Version.V_1_0_2_ID);
      assertEquals(900699, Version.V_0_90_6_ID);
      assertEquals(901499, Version.V_0_90_14_ID);
      assertEquals(1010199, Version.V_1_1_1_ID);
      assertEquals((byte)0, version0.revision);
      assertEquals(200299, Version.V_0_20_2_ID);
      assertEquals(1000051, Version.V_1_0_0_RC1_ID);
      assertEquals(900099, Version.V_0_90_0_ID);
      assertEquals(1000002, Version.V_1_0_0_Beta2_ID);
      assertEquals(900299, Version.V_0_90_2_ID);
      assertEquals(200099, Version.V_0_20_0_ID);
      assertEquals(1020599, Version.V_1_2_5_ID);
      assertEquals(200699, Version.V_0_20_6_ID);
      assertEquals(191299, Version.V_0_19_12_ID);
      assertEquals(190052, Version.V_0_19_0_RC2_ID);
      assertEquals(190199, Version.V_0_19_1_ID);
      assertEquals(1030399, Version.V_1_3_3_ID);
      assertEquals(1020399, Version.V_1_2_3_ID);
      assertEquals(900499, Version.V_0_90_4_ID);
      assertEquals(1030199, Version.V_1_3_1_ID);
      assertEquals((byte)0, version0.minor);
      assertEquals(190399, Version.V_0_19_3_ID);
      assertEquals(200499, Version.V_0_20_4_ID);
      assertEquals(190999, Version.V_0_19_9_ID);
      assertEquals(901199, Version.V_0_90_11_ID);
      assertEquals(180799, Version.V_0_18_7_ID);
      assertEquals(190599, Version.V_0_19_5_ID);
      assertEquals(180599, Version.V_0_18_5_ID);
      assertEquals(900051, Version.V_0_90_0_RC1_ID);
      assertEquals(900001, Version.V_0_90_0_Beta1_ID);
      assertEquals(1000399, Version.V_1_0_3_ID);
      assertEquals(900599, Version.V_0_90_5_ID);
      assertEquals(0, version0.id);
      assertEquals(190799, Version.V_0_19_7_ID);
      assertEquals(1020499, Version.V_1_2_4_ID);
      assertEquals(1030499, Version.V_1_3_4_ID);
      assertEquals(1010299, Version.V_1_1_2_ID);
      assertEquals(1020299, Version.V_1_2_2_ID);
      assertEquals(900799, Version.V_0_90_7_ID);
      assertEquals(191099, Version.V_0_19_10_ID);
      assertEquals(901399, Version.V_0_90_13_ID);
      assertEquals(1000199, Version.V_1_0_1_ID);
      assertEquals(180199, Version.V_0_18_1_ID);
      assertEquals(900999, Version.V_0_90_9_ID);
      assertEquals(1010099, Version.V_1_1_0_ID);
      assertEquals(1020099, Version.V_1_2_0_ID);
      assertEquals(180399, Version.V_0_18_3_ID);
      assertEquals(1000052, Version.V_1_0_0_RC2_ID);
      assertEquals(1000001, Version.V_1_0_0_Beta1_ID);
      assertEquals((byte)0, version0.build);
      assertEquals(200199, Version.V_0_20_1_ID);
      assertEquals(180099, Version.V_0_18_0_ID);
      assertEquals(900399, Version.V_0_90_3_ID);
      assertEquals(190499, Version.V_0_19_4_ID);
      assertEquals(190099, Version.V_0_19_0_ID);
      assertEquals(190699, Version.V_0_19_6_ID);
      assertEquals(190053, Version.V_0_19_0_RC3_ID);
      assertEquals(191399, Version.V_0_19_13_ID);
      assertEquals(900199, Version.V_0_90_1_ID);
      assertEquals(1030299, Version.V_1_3_2_ID);
      assertEquals(200599, Version.V_0_20_5_ID);
      assertEquals(1030099, Version.V_1_3_0_ID);
      assertEquals(200399, Version.V_0_20_3_ID);
      assertEquals(190299, Version.V_0_19_2_ID);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.riverName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder1.mongoAdminPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      String string1 = mongoDBRiverDefinition0.getStatisticsTypeName();
      assertNull(string1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder3.riverIndexName(mongoDBRiverDefinition0.IMPORT_ALL_COLLECTIONS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      String string2 = mongoDBRiverDefinition0.getScript();
      assertNull(string2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      
      int int2 = mongoDBRiverDefinition_Bulk1.getBulkActions();
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1905, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1000, int2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      
      boolean boolean3 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder7.mongoSecondaryReadPreference(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      String string1 = "";
      int int0 = 575;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      
      Version version0 = Version.V_1_2_1;
      assertNotNull(version0);
      assertFalse(version0.snapshot());
      assertEquals((byte)1, version0.major);
      assertEquals(900099, Version.V_0_90_0_ID);
      assertEquals(1000051, Version.V_1_0_0_RC1_ID);
      assertEquals(200399, Version.V_0_20_3_ID);
      assertEquals(900499, Version.V_0_90_4_ID);
      assertEquals(1000299, Version.V_1_0_2_ID);
      assertEquals(191199, Version.V_0_19_11_ID);
      assertEquals(1020199, Version.V_1_2_1_ID);
      assertEquals(1000099, Version.V_1_0_0_ID);
      assertEquals(200599, Version.V_0_20_5_ID);
      assertEquals(180499, Version.V_0_18_4_ID);
      assertEquals(190053, Version.V_0_19_0_RC3_ID);
      assertEquals(1030199, Version.V_1_3_1_ID);
      assertEquals(1000002, Version.V_1_0_0_Beta2_ID);
      assertEquals(1030399, Version.V_1_3_3_ID);
      assertEquals(190499, Version.V_0_19_4_ID);
      assertEquals(900299, Version.V_0_90_2_ID);
      assertEquals(901399, Version.V_0_90_13_ID);
      assertEquals(900899, Version.V_0_90_8_ID);
      assertEquals(190051, Version.V_0_19_0_RC1_ID);
      assertEquals(900699, Version.V_0_90_6_ID);
      assertEquals(900052, Version.V_0_90_0_RC2_ID);
      assertEquals(200799, Version.V_0_20_7_ID);
      assertEquals(1020499, Version.V_1_2_4_ID);
      assertEquals(900001, Version.V_0_90_0_Beta1_ID);
      assertEquals(180299, Version.V_0_18_2_ID);
      assertEquals(190899, Version.V_0_19_8_ID);
      assertEquals(180099, Version.V_0_18_0_ID);
      assertEquals(200051, Version.V_0_20_0_RC1_ID);
      assertEquals(180799, Version.V_0_18_7_ID);
      assertEquals(1010199, Version.V_1_1_1_ID);
      assertEquals(901099, Version.V_0_90_10_ID);
      assertEquals(190699, Version.V_0_19_6_ID);
      assertEquals(191399, Version.V_0_19_13_ID);
      assertEquals(180599, Version.V_0_18_5_ID);
      assertEquals((byte)1, version0.revision);
      assertEquals(1000399, Version.V_1_0_3_ID);
      assertEquals((byte)2, version0.minor);
      assertEquals(190299, Version.V_0_19_2_ID);
      assertEquals(200199, Version.V_0_20_1_ID);
      assertEquals(190099, Version.V_0_19_0_ID);
      assertEquals(200499, Version.V_0_20_4_ID);
      assertEquals(1000052, Version.V_1_0_0_RC2_ID);
      assertEquals(900199, Version.V_0_90_1_ID);
      assertEquals(1000001, Version.V_1_0_0_Beta1_ID);
      assertEquals((byte)99, version0.build);
      assertEquals(1030099, Version.V_1_3_0_ID);
      assertEquals(1020099, Version.V_1_2_0_ID);
      assertEquals(200299, Version.V_0_20_2_ID);
      assertEquals(200699, Version.V_0_20_6_ID);
      assertEquals(191099, Version.V_0_19_10_ID);
      assertEquals(1000199, Version.V_1_0_1_ID);
      assertEquals(1030299, Version.V_1_3_2_ID);
      assertEquals(190052, Version.V_0_19_0_RC2_ID);
      assertEquals(1020299, Version.V_1_2_2_ID);
      assertEquals(900399, Version.V_0_90_3_ID);
      assertEquals(1030499, Version.V_1_3_4_ID);
      assertEquals(900051, Version.V_0_90_0_RC1_ID);
      assertEquals(900799, Version.V_0_90_7_ID);
      assertEquals(1020599, Version.V_1_2_5_ID);
      assertEquals(180399, Version.V_0_18_3_ID);
      assertEquals(190799, Version.V_0_19_7_ID);
      assertEquals(901299, Version.V_0_90_12_ID);
      assertEquals(900599, Version.V_0_90_5_ID);
      assertEquals(180199, Version.V_0_18_1_ID);
      assertEquals(900999, Version.V_0_90_9_ID);
      assertEquals(901499, Version.V_0_90_14_ID);
      assertEquals(190999, Version.V_0_19_9_ID);
      assertEquals(901199, Version.V_0_90_11_ID);
      assertEquals(1010099, Version.V_1_1_0_ID);
      assertEquals(180899, Version.V_0_18_8_ID);
      assertEquals(1020399, Version.V_1_2_3_ID);
      assertEquals(190599, Version.V_0_19_5_ID);
      assertEquals(1010299, Version.V_1_1_2_ID);
      assertEquals(1020199, version0.id);
      assertEquals(1000499, Version.V_1_0_4_ID);
      assertEquals(180699, Version.V_0_18_6_ID);
      assertEquals(191299, Version.V_0_19_12_ID);
      assertEquals(190399, Version.V_0_19_3_ID);
      assertEquals(190199, Version.V_0_19_1_ID);
      assertEquals(200099, Version.V_0_20_0_ID);
      
      Boolean boolean1 = version0.snapshot;
      assertNotNull(boolean1);
      assertFalse(boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(version0.snapshot());
      assertEquals((byte)1, version0.major);
      assertEquals(900099, Version.V_0_90_0_ID);
      assertEquals(1000051, Version.V_1_0_0_RC1_ID);
      assertEquals(200399, Version.V_0_20_3_ID);
      assertEquals(900499, Version.V_0_90_4_ID);
      assertEquals(1000299, Version.V_1_0_2_ID);
      assertEquals(191199, Version.V_0_19_11_ID);
      assertEquals(1020199, Version.V_1_2_1_ID);
      assertEquals(1000099, Version.V_1_0_0_ID);
      assertEquals(200599, Version.V_0_20_5_ID);
      assertEquals(180499, Version.V_0_18_4_ID);
      assertEquals(190053, Version.V_0_19_0_RC3_ID);
      assertEquals(1030199, Version.V_1_3_1_ID);
      assertEquals(1000002, Version.V_1_0_0_Beta2_ID);
      assertEquals(1030399, Version.V_1_3_3_ID);
      assertEquals(190499, Version.V_0_19_4_ID);
      assertEquals(900299, Version.V_0_90_2_ID);
      assertEquals(901399, Version.V_0_90_13_ID);
      assertEquals(900899, Version.V_0_90_8_ID);
      assertEquals(190051, Version.V_0_19_0_RC1_ID);
      assertEquals(900699, Version.V_0_90_6_ID);
      assertEquals(900052, Version.V_0_90_0_RC2_ID);
      assertEquals(200799, Version.V_0_20_7_ID);
      assertEquals(1020499, Version.V_1_2_4_ID);
      assertEquals(900001, Version.V_0_90_0_Beta1_ID);
      assertEquals(180299, Version.V_0_18_2_ID);
      assertEquals(190899, Version.V_0_19_8_ID);
      assertEquals(180099, Version.V_0_18_0_ID);
      assertEquals(200051, Version.V_0_20_0_RC1_ID);
      assertEquals(180799, Version.V_0_18_7_ID);
      assertEquals(1010199, Version.V_1_1_1_ID);
      assertEquals(901099, Version.V_0_90_10_ID);
      assertEquals(190699, Version.V_0_19_6_ID);
      assertEquals(191399, Version.V_0_19_13_ID);
      assertEquals(180599, Version.V_0_18_5_ID);
      assertEquals((byte)1, version0.revision);
      assertEquals(1000399, Version.V_1_0_3_ID);
      assertEquals((byte)2, version0.minor);
      assertEquals(190299, Version.V_0_19_2_ID);
      assertEquals(200199, Version.V_0_20_1_ID);
      assertEquals(190099, Version.V_0_19_0_ID);
      assertEquals(200499, Version.V_0_20_4_ID);
      assertEquals(1000052, Version.V_1_0_0_RC2_ID);
      assertEquals(900199, Version.V_0_90_1_ID);
      assertEquals(1000001, Version.V_1_0_0_Beta1_ID);
      assertEquals((byte)99, version0.build);
      assertEquals(1030099, Version.V_1_3_0_ID);
      assertEquals(1020099, Version.V_1_2_0_ID);
      assertEquals(200299, Version.V_0_20_2_ID);
      assertEquals(200699, Version.V_0_20_6_ID);
      assertEquals(191099, Version.V_0_19_10_ID);
      assertEquals(1000199, Version.V_1_0_1_ID);
      assertEquals(1030299, Version.V_1_3_2_ID);
      assertEquals(190052, Version.V_0_19_0_RC2_ID);
      assertEquals(1020299, Version.V_1_2_2_ID);
      assertEquals(900399, Version.V_0_90_3_ID);
      assertEquals(1030499, Version.V_1_3_4_ID);
      assertEquals(900051, Version.V_0_90_0_RC1_ID);
      assertEquals(900799, Version.V_0_90_7_ID);
      assertEquals(1020599, Version.V_1_2_5_ID);
      assertEquals(180399, Version.V_0_18_3_ID);
      assertEquals(190799, Version.V_0_19_7_ID);
      assertEquals(901299, Version.V_0_90_12_ID);
      assertEquals(900599, Version.V_0_90_5_ID);
      assertEquals(180199, Version.V_0_18_1_ID);
      assertEquals(900999, Version.V_0_90_9_ID);
      assertEquals(901499, Version.V_0_90_14_ID);
      assertEquals(190999, Version.V_0_19_9_ID);
      assertEquals(901199, Version.V_0_90_11_ID);
      assertEquals(1010099, Version.V_1_1_0_ID);
      assertEquals(180899, Version.V_0_18_8_ID);
      assertEquals(1020399, Version.V_1_2_3_ID);
      assertEquals(190599, Version.V_0_19_5_ID);
      assertEquals(1010299, Version.V_1_1_2_ID);
      assertEquals(1020199, version0.id);
      assertEquals(1000499, Version.V_1_0_4_ID);
      assertEquals(180699, Version.V_0_18_6_ID);
      assertEquals(191299, Version.V_0_19_12_ID);
      assertEquals(190399, Version.V_0_19_3_ID);
      assertEquals(190199, Version.V_0_19_1_ID);
      assertEquals(200099, Version.V_0_20_0_ID);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      
      String string2 = "node.max_local_storage_nodes";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.scriptType(string2);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string2);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder0.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder4.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string2));
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int1 = 0;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(575, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("node.max_local_storage_nodes", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      
      String string3 = "multicast failed to start [{}], disabling";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string3, mongoDBRiverDefinition0.TYPE_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // type
         //  ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "`Fp0MM}AD7v<@7";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      Map<String, Object> map0 = null;
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, map0);
      assertNotNull(riverSettings0);
      
      Environment environment0 = new Environment(immutableSettings0);
      assertNotNull(environment0);
      
      LinkedHashSet<ScriptEngineService> linkedHashSet0 = new LinkedHashSet<ScriptEngineService>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      
      ThreadPool threadPool0 = new ThreadPool(string0);
      assertNotNull(threadPool0);
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(immutableSettings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(immutableSettings0, environment0, linkedHashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.parseSettings(string0, string0, riverSettings0, scriptService0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      String string1 = "63Oc4S5IW";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoAdminPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("63Oc4S5IW", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.storeStatistics(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("63Oc4S5IW", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      String string2 = "";
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string2);
      assertNotNull(basicDBObject0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.storeStatistics(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition1.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("63Oc4S5IW", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder1.mongoCollection(mongoDBRiverDefinition1.COLLECTION_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("63Oc4S5IW", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      String string3 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder5.mongoLocalPassword(string3);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      String string4 = mongoDBRiverDefinition1.getMongoLocalUser();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("63Oc4S5IW", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("", string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string1);
      assertSame(string4, string0);
      assertSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      String string5 = "";
      String string6 = "$>?te0L!";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string5, string6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // $>?te0L!
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      
      Set<String> set0 = basicDBObject0.keySet();
      assertNotNull(set0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int0 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      String string0 = "credentials";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean1 == boolean0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(boolean0 == boolean1);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(set0.contains(string0));
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoGridFS(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(set0.contains(string0));
      
      Set<String> set1 = ZoneId.getAvailableZoneIds();
      assertNotNull(set1);
      assertFalse(set1.equals((Object)set0));
      assertFalse(set1.isEmpty());
      assertEquals(600, set1.size());
      assertFalse(set1.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.dropCollection(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(set0.equals((Object)set1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.parentTypes(set1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(set0.equals((Object)set1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(set1.equals((Object)set0));
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertFalse(set1.isEmpty());
      assertEquals(600, set1.size());
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(set0.contains(string0));
      assertFalse(set1.contains(string0));
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(set0.equals((Object)set1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(set1.equals((Object)set0));
      assertFalse(string1.equals((Object)string0));
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertFalse(set1.isEmpty());
      assertEquals(600, set1.size());
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(set0.contains(string1));
      assertFalse(set1.contains(string1));
      
      String string2 = " - ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.mongoLocalPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(set0.equals((Object)set1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertFalse(set0.contains(string1));
      
      boolean boolean3 = true;
      String string3 = MongoDBRiverDefinition.addRemovePrefix(string2, string1, boolean3);
      assertNotNull(string3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(boolean3 == boolean0);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("", string3);
      assertSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string1);
      assertNotSame(string3, string0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder10.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(set0.equals((Object)set1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertFalse(set0.contains(string1));
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "failed to execute term vector request";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.riverIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder1.mongoServers(list0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.skipInitialImport(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      String string1 = mongoDBRiverDefinition0.getMongoDb();
      assertNull(string1);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(boolean2 == boolean0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      
      String string2 = ") in base64 content";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.includeCollection(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(mongoDBRiverDefinition0.DEFAULT_CONNECT_TIMEOUT);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder5 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder2);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder1.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("failed to execute term vector request", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      
      String string3 = "!xE+%mMXWT<60z1 F";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string3, mongoDBRiverDefinition0.STORE_STATISTICS_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // store_statistics
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "lU;";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      BasicDBList basicDBList0 = new BasicDBList();
      assertNotNull(basicDBList0);
      assertFalse(basicDBList0.isPartialObject());
      assertTrue(basicDBList0.isEmpty());
      assertEquals(0, basicDBList0.size());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(string0, basicDBList0);
      assertNotNull(basicDBObject0);
      assertFalse(basicDBList0.isPartialObject());
      assertTrue(basicDBList0.isEmpty());
      assertEquals(0, basicDBList0.size());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(basicDBList0.isPartialObject());
      assertTrue(basicDBList0.isEmpty());
      assertEquals(0, basicDBList0.size());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      int int0 = 1380;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(basicDBList0.isPartialObject());
      assertTrue(basicDBList0.isEmpty());
      assertEquals(0, basicDBList0.size());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(basicDBList0.isPartialObject());
      assertTrue(basicDBList0.isEmpty());
      assertEquals(0, basicDBList0.size());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(1380, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("lU;", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertFalse(boolean1 == boolean0);
      assertFalse(basicDBList0.isPartialObject());
      assertTrue(basicDBList0.isEmpty());
      assertEquals(0, basicDBList0.size());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(1380, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("lU;", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "index fixed, wrote new segments file \"{}\"";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      String string1 = "com.mongodb.MongoException$DuplicateKey";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string2 = "ssl";
      String string3 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.statisticsIndexName(string3);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoCollection(string2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertEquals(0, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.mongoServers(list0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = 1636;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      
      int int1 = 419;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder2.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder4.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(419, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      
      int int2 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(419, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(419, int2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      
      boolean boolean1 = mongoDBRiverDefinition0.isStoreStatistics();
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("index fixed, wrote new segments file \"{}\"", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("com.mongodb.MongoException$DuplicateKey", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string0 = "org.elasticsearch.common.jackson.core.JsonGenerator";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-3366);
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder1.socketTimeout(mongoDBRiverDefinition0.DEFAULT_SOCKET_TIMEOUT);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      String string1 = "Predicates.not(";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder1.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder1.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder3.script(mongoDBRiverDefinition0.PASSWORD_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder3.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      String string2 = "empty name";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder3.mongoAdminUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder8.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      Set<String> set0 = mongoDBRiverDefinition1.getExcludeFields();
      assertNull(set0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      String string3 = mongoDBRiverDefinition1.getMongoAdminPassword();
      assertNotNull(string3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("", string3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      String string4 = "disable_index_refresh";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.riverName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      int int1 = mongoDBRiverDefinition1.getSocketTimeout();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(int1 == int0);
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, int1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int2 = mongoDBRiverDefinition1.getConnectTimeout();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0, int2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      String string5 = mongoDBRiverDefinition1.getScript();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("password", string5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      
      String string6 = mongoDBRiverDefinition1.getScript();
      assertNotNull(string6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals(60000, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertEquals("empty name", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition1.getIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("password", mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-3366), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("password", string6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNotSame(string6, string1);
      assertSame(string6, string5);
      assertNotSame(string6, string3);
      assertNotSame(string6, string2);
      assertNotSame(string6, string0);
      assertNotSame(string6, string4);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoGridFS();
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertTrue(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.common.jackson.core.JsonGenerator", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      String string7 = "g-70k#kDWp[";
      String string8 = null;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string7, string8, boolean2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      String string0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string0, string0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      long long0 = 4740L;
      ByteSizeUnit byteSizeUnit0 = ByteSizeUnit.BYTES;
      ByteSizeValue byteSizeValue0 = new ByteSizeValue(long0, byteSizeUnit0);
      assertNotNull(byteSizeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-1258);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals((-1258), mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      TimeValue timeValue0 = mongoDBRiverDefinition_Bulk0.getFlushInterval();
      assertNotNull(timeValue0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals((-1258), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.excludeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(linkedHashSet0.contains(string0));
      
      int int1 = 1;
      BasicDBObject basicDBObject0 = new BasicDBObject(int1);
      assertNotNull(basicDBObject0);
      assertFalse(int1 == int0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(int1 == int0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(int1 == int0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(linkedHashSet0.contains(string0));
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNull(timestamp0);
      assertFalse(int1 == int0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(linkedHashSet0.contains(string0));
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoOplogFilter();
      assertNull(basicDBObject0);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      String string1 = null;
      BasicDBObject basicDBObject1 = MongoDBRiverDefinition.convertToBasicDBObject(string1);
      assertNotNull(basicDBObject1);
      assertEquals(0, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertTrue(basicDBObject1.isEmpty());
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition1.getBulk();
      assertNull(mongoDBRiverDefinition_Bulk0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder1.statisticsTypeName(mongoDBRiverDefinition1.STORE_STATISTICS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      String string2 = ">w,mO}tkXs";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string2.equals((Object)string0));
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      
      String string3 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      long long0 = 1000L;
      System.setCurrentTimeMillis(long0);
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      String string1 = "2/cU";
      MetaData metaData0 = MetaData.EMPTY_META_DATA;
      assertNotNull(metaData0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      
      Settings settings0 = metaData0.settings();
      assertNotNull(settings0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      String string2 = "by<K!ZCm";
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, string0);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, basicDBObject1);
      assertNotNull(riverSettings0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      
      Settings settings1 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings1);
      assertTrue(settings1.equals((Object)settings0));
      assertNotSame(settings1, settings0);
      
      Environment environment0 = new Environment(settings1);
      assertNotNull(environment0);
      assertTrue(settings1.equals((Object)settings0));
      
      HashSet<ScriptEngineService> hashSet0 = new HashSet<ScriptEngineService>();
      assertNotNull(hashSet0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      
      String string3 = "++]/Vto7";
      ThreadPool threadPool0 = new ThreadPool(string3);
      assertNotNull(threadPool0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertTrue(settings0.equals((Object)settings1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      
      ScriptService scriptService0 = new ScriptService(settings1, environment0, hashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("2/cU", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertNotSame(settings1, settings0);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition1.getInitialTimestamp();
      assertNull(timestamp0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("2/cU", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertNotSame(settings1, settings0);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition1.getMongoServers();
      assertNotNull(list0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("2/cU", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertNotSame(settings1, settings0);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      String string0 = "Mg7C0:LM.fj4FsV";
      String string1 = "";
      MetaData metaData0 = MetaData.EMPTY_META_DATA;
      assertNotNull(metaData0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      
      Settings settings0 = metaData0.settings();
      assertNotNull(settings0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(metaData0.customFactories);
      assertNotNull(basicDBObject0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(4, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, basicDBObject0);
      assertNotNull(riverSettings0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(4, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      
      Environment environment0 = new Environment(settings0);
      assertNotNull(environment0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      
      TreeSet<ScriptEngineService> treeSet0 = new TreeSet<ScriptEngineService>();
      assertNotNull(treeSet0);
      
      NodeSettingsService nodeSettingsService0 = new NodeSettingsService(settings0);
      assertNotNull(nodeSettingsService0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      
      ThreadPool threadPool0 = new ThreadPool(settings0, nodeSettingsService0);
      assertNotNull(threadPool0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      
      ThreadPoolStats threadPoolStats0 = threadPool0.stats();
      assertNotNull(threadPoolStats0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, treeSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(4, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      int int0 = mongoDBRiverDefinition0.getConnectTimeout();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(4, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(0, int0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      String string2 = mongoDBRiverDefinition0.getMongoDb();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(4, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("Mg7C0:LM.fj4FsV", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("Mg7C0:LM.fj4FsV", string2);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      String string0 = "index";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String string1 = "";
      String string2 = MongoDBRiverDefinition.removePrefix(string0, string1);
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string3 = "mongodb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.typeName(string3);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.includeCollection(string2);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string4 = "&+m/dk){y";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoLocalPassword(string4);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      String string5 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.script(string5);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string6 = mongoDBRiverDefinition0.getTypeName();
      assertNotNull(string6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("mongodb", string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string3));
      assertFalse(boolean1 == boolean0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      boolean boolean2 = mongoDBRiverDefinition0.isImportAllCollections();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string3));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string7 = mongoDBRiverDefinition0.getMongoCollection();
      assertNull(string7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string3));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertNull(mongoDBRiverDefinition1.isMongos());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.scriptType(mongoDBRiverDefinition0.FLUSH_INTERVAL_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string3));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean2, boolean0, boolean2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string3));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      String string8 = mongoDBRiverDefinition0.getScriptType();
      assertNull(string8);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string6));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string3));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertEquals("&+m/dk){y", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("mongodb", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string5);
      assertNotSame(string2, string4);
      assertNotSame(string2, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string3, string5);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string6);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string4, string5);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string6);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      String string9 = "";
      String string10 = "jA &4A35tZRb";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string9, string10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // jA &4A35tZRb
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      
      String string1 = "";
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string1);
      assertNotNull(basicDBObject0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertNotSame(string1, string0);
      
      String string2 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("", string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      int int0 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1, int0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      
      Collection<Object> collection0 = basicDBObject0.values();
      assertNotNull(collection0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      
      boolean boolean1 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertTrue(boolean1 == boolean0);
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      
      String string3 = "ssl_verify_certificate";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.includeCollection(string3);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(boolean0 == boolean1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      
      String string4 = mongoDBRiverDefinition0.getIndexName();
      assertNull(string4);
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      ByteSizeValue byteSizeValue0 = null;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = 1234;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      assertNotNull(bufferRecycler0);
      assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
      assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
      assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
      assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
      assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
      assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
      assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
      assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
      
      boolean boolean1 = false;
      IOContext iOContext0 = new IOContext(bufferRecycler0, mongoDBRiverDefinition_Bulk0, boolean1);
      assertNotNull(iOContext0);
      assertTrue(boolean1 == boolean0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertNull(iOContext0.getEncoding());
      assertFalse(iOContext0.isResourceManaged());
      assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
      assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
      assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
      assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
      assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
      assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
      assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
      assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
      
      int int1 = 1249;
      byte[] byteArray0 = new byte[0];
      BytesStreamInput bytesStreamInput0 = new BytesStreamInput(byteArray0, boolean1);
      assertNotNull(bytesStreamInput0);
      assertTrue(boolean1 == boolean0);
      assertEquals(0, bytesStreamInput0.position());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      
      ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
      BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
      assertNotNull(bytesToNameCanonicalizer0);
      assertTrue(bytesToNameCanonicalizer0.maybeDirty());
      assertEquals(0, bytesToNameCanonicalizer0.collisionCount());
      assertEquals(839877741, bytesToNameCanonicalizer0.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer0.maxCollisionLength());
      assertEquals(0, bytesToNameCanonicalizer0.size());
      
      boolean boolean2 = false;
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(1234, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = mongoDBRiverDefinition0.getBulk();
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(1234, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      
      UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, int1, bytesStreamInput0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, bufferRecycler0.BYTE_READ_IO_BUFFER, bufferRecycler0.CHAR_TEXT_BUFFER, boolean2);
      assertNotNull(uTF8StreamJsonParser0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean1 == boolean0);
      assertFalse(int1 == int0);
      assertTrue(bytesToNameCanonicalizer0.maybeDirty());
      assertEquals(0, bytesToNameCanonicalizer0.collisionCount());
      assertEquals(839877741, bytesToNameCanonicalizer0.hashSeed());
      assertEquals(0, bytesToNameCanonicalizer0.maxCollisionLength());
      assertEquals(0, bytesToNameCanonicalizer0.size());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1249, uTF8StreamJsonParser0.getFeatureMask());
      assertNull(uTF8StreamJsonParser0.getLastClearedToken());
      assertEquals(1, uTF8StreamJsonParser0.getTokenLineNr());
      assertFalse(uTF8StreamJsonParser0.hasCurrentToken());
      assertFalse(uTF8StreamJsonParser0.canReadObjectId());
      assertEquals(0L, uTF8StreamJsonParser0.getTokenCharacterOffset());
      assertNull(uTF8StreamJsonParser0.getCurrentName());
      assertNull(uTF8StreamJsonParser0.getCurrentToken());
      assertFalse(uTF8StreamJsonParser0.canReadTypeId());
      assertFalse(uTF8StreamJsonParser0.requiresCustomCodec());
      assertEquals(0, uTF8StreamJsonParser0.getCurrentTokenId());
      assertFalse(uTF8StreamJsonParser0.isClosed());
      assertEquals(1, uTF8StreamJsonParser0.getTokenColumnNr());
      assertNull(iOContext0.getEncoding());
      assertFalse(iOContext0.isResourceManaged());
      assertEquals(0, bytesStreamInput0.position());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
      assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
      assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
      assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
      assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
      assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
      assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
      assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
      assertEquals(0, byteArray0.length);
      
      // Undeclared exception!
      try { 
        uTF8StreamJsonParser0.nextBooleanValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.elasticsearch.common.jackson.core.json.UTF8StreamJsonParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "ad`BC4\\x5\"w~>X[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      int int0 = 630;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string1 = "\\m8";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.indexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.includeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertFalse(linkedHashSet1.contains(string0));
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder4.script(string2);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder9.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder8.parentTypes(linkedHashSet1);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertFalse(linkedHashSet1.contains(string2));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      int int1 = (-1293);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder6.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      
      String string3 = "2w=/";
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = basicDBObject0.remove(object0);
      assertNull(object1);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string3, mongoDBRiverDefinition_Builder4);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(basicDBObject1, basicDBObject0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder12.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isEmpty());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isPartialObject());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder13);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertFalse(linkedHashSet1.contains(string2));
      
      String string4 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder9.parentTypes(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertNotSame(linkedHashSet0, linkedHashSet1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertFalse(linkedHashSet0.contains(string2));
      
      String string5 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertSame(string5, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      int int2 = 982;
      BasicDBObject basicDBObject2 = new BasicDBObject(int2);
      assertNotNull(basicDBObject2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.isPartialObject());
      assertEquals(0, basicDBObject2.size());
      assertTrue(basicDBObject2.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder17 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject2);
      assertNotNull(mongoDBRiverDefinition_Builder17);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.isPartialObject());
      assertEquals(0, basicDBObject2.size());
      assertTrue(basicDBObject2.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder17, mongoDBRiverDefinition_Builder13);
      
      String string6 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string6, string3);
      assertSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertSame(string6, string2);
      
      boolean boolean3 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertTrue(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      String string7 = mongoDBRiverDefinition0.getScript();
      assertNotNull(string7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(630, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder17);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string7, string0);
      assertNotSame(string7, string3);
      assertSame(string7, string6);
      assertSame(string7, string5);
      assertSame(string7, string2);
      assertNotSame(string7, string1);
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "UIovh+wq'k\"lXDBl";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      TermVectorRequest termVectorRequest0 = new TermVectorRequest();
      assertNotNull(termVectorRequest0);
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest0.index());
      
      TermVectorRequest termVectorRequest1 = new TermVectorRequest(termVectorRequest0);
      assertNotNull(termVectorRequest1);
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.index());
      assertNull(termVectorRequest1.type());
      
      Set<String> set0 = termVectorRequest1.selectedFields();
      assertNull(set0);
      assertFalse(termVectorRequest0.equals((Object)termVectorRequest1));
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.index());
      assertNull(termVectorRequest1.type());
      assertNotSame(termVectorRequest0, termVectorRequest1);
      assertNotSame(termVectorRequest1, termVectorRequest0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(termVectorRequest0.equals((Object)termVectorRequest1));
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.index());
      assertNull(termVectorRequest1.type());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(termVectorRequest0, termVectorRequest1);
      assertNotSame(termVectorRequest1, termVectorRequest0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "G@akUG0e";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoAdminUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      Boolean boolean1 = Boolean.FALSE;
      assertNotNull(boolean1);
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean1.equals((Object)boolean0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.scriptType(string2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      
      boolean boolean2 = false;
      int int0 = Boolean.compare(boolean2, boolean0);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertEquals((-1), int0);
      
      String string3 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.mongoCollection(string3);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder4.isMongos(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1.equals((Object)boolean0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      
      String string4 = "$1AU@J\\ &";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.typeName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean2);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1.equals((Object)boolean0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      
      String string5 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals("null.null", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder9.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder9.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean0 == boolean2);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isMongos());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      
      String string6 = "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder";
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      String string7 = mongoDBRiverDefinition0.getStatisticsIndexName();
      assertNull(string7);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      boolean boolean3 = mongoDBRiverDefinition1.isDropCollection();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string6));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isMongos());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string6);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      
      Set<String> set1 = mongoDBRiverDefinition1.getParentTypes();
      assertNull(set1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string6));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertTrue(boolean1.equals((Object)boolean3));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isMongos());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string6);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(termVectorRequest0.equals((Object)termVectorRequest1));
      assertFalse(termVectorRequest1.equals((Object)termVectorRequest0));
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertNull(termVectorRequest0.id());
      assertNull(termVectorRequest0.preference());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertNull(termVectorRequest0.routing());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.type());
      assertNull(termVectorRequest0.index());
      assertNull(termVectorRequest1.id());
      assertTrue(termVectorRequest1.operationThreaded());
      assertNull(termVectorRequest1.preference());
      assertFalse(termVectorRequest1.listenerThreaded());
      assertNull(termVectorRequest1.routing());
      assertNull(termVectorRequest1.index());
      assertNull(termVectorRequest1.type());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertNotSame(termVectorRequest0, termVectorRequest1);
      assertNotSame(termVectorRequest1, termVectorRequest0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      
      int int1 = mongoDBRiverDefinition0.getSocketTimeout();
      assertFalse(int1 == int0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(0, int1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      
      MongoClientOptions mongoClientOptions1 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions1);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals("$1AU@J\\ &", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("UIovh+wq'k\"lXDBl", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "f:<;|B$nL=@U";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.indexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string2 = "esh<*|{&";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoAdminPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("esh<*|{&", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("f:<;|B$nL=@U", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      boolean boolean1 = mongoDBRiverDefinition0.isDropCollection();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean1 == boolean0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("esh<*|{&", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("f:<;|B$nL=@U", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      
      String string3 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("esh<*|{&", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("f:<;|B$nL=@U", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("esh<*|{&", string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(string3, string2);
      
      String string4 = "org.elasticsearch.common.joda.time.chrono.LimitChronology$LimitDurationField";
      String string5 = MongoDBRiverDefinition.NAME_FIELD;
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertEquals("name", string5);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "syZx-sL>8|-422SU^";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoAdminPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("syZx-sL>8|-422SU^", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = mongoDBRiverDefinition0.isDropCollection();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("syZx-sL>8|-422SU^", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string2 = mongoDBRiverDefinition0.getIndexName();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("syZx-sL>8|-422SU^", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("", string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(string2, string0);
      assertNotSame(string2, string1);
      
      String string3 = "org.elasticsearch.common.joda.time.chrono.LimitChronology$LimitDurationField";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string3, mongoDBRiverDefinition0.SOCKET_TIMEOUT);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // socket_timeout
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      long long0 = 2659L;
      System.setCurrentTimeMillis(long0);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = 1218;
      int int1 = 14;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int1);
      assertNotNull(bSONTimestamp0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(14, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(14, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "No riverName specified";
      String string1 = bSONTimestamp0.toString();
      assertNotNull(string1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(14, bSONTimestamp0.getInc());
      assertEquals("TS time:Thu Jan 01 00:20:18 GMT 1970 inc:14", string1);
      assertNotSame(string1, string0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(14, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(boolean1 == boolean0);
      assertEquals(14, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      
      MongoClientOptions mongoClientOptions0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(14, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      
      boolean boolean3 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(14, bSONTimestamp0.getInc());
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      
      boolean boolean4 = bSONTimestamp0.equals(mongoDBRiverDefinition_Builder0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(14, bSONTimestamp0.getInc());
      assertFalse(boolean4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      
      String string2 = "88@kb&}b8IhC";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(string2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.mongodb.BasicDBObject
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      String string0 = "G-e|[1QU ";
      String string1 = "";
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, hashMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      Environment environment0 = new Environment(settings0);
      assertNotNull(environment0);
      
      LinkedHashSet<ScriptEngineService> linkedHashSet0 = new LinkedHashSet<ScriptEngineService>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      ThreadPool threadPool0 = new ThreadPool(string0);
      assertNotNull(threadPool0);
      assertFalse(string0.equals((Object)string1));
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, linkedHashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertFalse(string0.equals((Object)string1));
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      boolean boolean0 = mongoDBRiverDefinition0.isMongoGridFS();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      String string2 = mongoDBRiverDefinition0.getMongoLocalPassword();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("G-e|[1QU ", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("", string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      
      long long0 = (-1440L);
      System.setCurrentTimeMillis(long0);
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "ad`BC4\\x5\"w~>X[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      int int0 = 630;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string1 = "\\m8";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.includeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertFalse(linkedHashSet1.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder1.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder8.parentTypes(linkedHashSet1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertFalse(linkedHashSet1.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      int int1 = (-1293);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder6.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      String string2 = "2w=/";
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = basicDBObject0.remove(object0);
      assertNull(object1);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, mongoDBRiverDefinition_Builder4);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder11.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertFalse(linkedHashSet1.contains(string0));
      
      String string3 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder9.parentTypes(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertNotSame(linkedHashSet0, linkedHashSet1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertFalse(linkedHashSet0.contains(string0));
      
      String string4 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("\\m8", string4);
      assertSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      int int2 = 982;
      BasicDBObject basicDBObject2 = new BasicDBObject(int2);
      assertNotNull(basicDBObject2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertEquals(0, basicDBObject2.size());
      assertTrue(basicDBObject2.isEmpty());
      assertFalse(basicDBObject2.isPartialObject());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject2);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertEquals(0, basicDBObject2.size());
      assertTrue(basicDBObject2.isEmpty());
      assertFalse(basicDBObject2.isPartialObject());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      
      String string5 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals("\\m8", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertNotSame(string5, string0);
      assertSame(string5, string4);
      assertNotSame(string5, string2);
      assertSame(string5, string1);
      
      boolean boolean3 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNotNull(set0);
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertFalse(set0.contains(string0));
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "ad`BC4\\x5\"w~>X[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      int int0 = 630;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder1.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string1 = "\\m8";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.includeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertFalse(linkedHashSet1.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder1.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder8.parentTypes(linkedHashSet1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertFalse(linkedHashSet1.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      int int1 = (-1293);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder6.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      
      String string2 = "2w=/";
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = basicDBObject0.remove(object0);
      assertNull(object1);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, mongoDBRiverDefinition_Builder4);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(basicDBObject1, basicDBObject0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder11.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(linkedHashSet1.isEmpty());
      assertEquals(0, linkedHashSet1.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertNotSame(linkedHashSet1, linkedHashSet0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertFalse(linkedHashSet1.contains(string2));
      
      String string3 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder9.parentTypes(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertNotSame(linkedHashSet0, linkedHashSet1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertFalse(linkedHashSet0.contains(string2));
      
      String string4 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("\\m8", string4);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(string4, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int2 = 982;
      BasicDBObject basicDBObject2 = new BasicDBObject(int2);
      assertNotNull(basicDBObject2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.isPartialObject());
      assertTrue(basicDBObject2.isEmpty());
      assertEquals(0, basicDBObject2.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject2);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.isPartialObject());
      assertTrue(basicDBObject2.isEmpty());
      assertEquals(0, basicDBObject2.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      
      String string5 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("\\m8", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string5, string2);
      assertSame(string5, string1);
      assertSame(string5, string4);
      assertNotSame(string5, string0);
      
      boolean boolean3 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string7 = "Tnv|}DV<.#";
      String string8 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string7, string8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      String string0 = "G-e|[1QU ";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("config/scripts");
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertTrue(boolean0);
      
      String string1 = "org.elasticsearch.common.cache.CacheBuilder$OneWeigher";
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, hashMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string2 = "mongodb";
      Object object0 = hashMap0.put(string2, riverSettings0);
      assertNull(object0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      Environment environment0 = new Environment(settings0);
      assertNotNull(environment0);
      
      LinkedHashSet<ScriptEngineService> linkedHashSet0 = new LinkedHashSet<ScriptEngineService>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      ThreadPool threadPool0 = new ThreadPool(string0);
      assertNotNull(threadPool0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, linkedHashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.elasticsearch.river.RiverSettings cannot be cast to java.util.Map
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      String string0 = "pWSOP8";
      String string1 = "i_V![^Y@jQ/J5,";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      ImmutableSortedMap<String, Object> immutableSortedMap0 = ImmutableSortedMap.of();
      assertNotNull(immutableSortedMap0);
      
      ImmutableSortedMap<String, Object> immutableSortedMap1 = immutableSortedMap0.descendingMap();
      assertNotNull(immutableSortedMap1);
      assertTrue(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertNotSame(immutableSortedMap0, immutableSortedMap1);
      assertNotSame(immutableSortedMap1, immutableSortedMap0);
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, immutableSortedMap1);
      assertNotNull(riverSettings0);
      assertTrue(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertTrue(immutableSortedMap1.equals((Object)immutableSortedMap0));
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      Environment environment0 = new Environment(immutableSettings0);
      assertNotNull(environment0);
      
      HashSet<ScriptEngineService> hashSet0 = new HashSet<ScriptEngineService>();
      assertNotNull(hashSet0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      
      NodeSettingsService nodeSettingsService0 = null;
      ThreadPool threadPool0 = new ThreadPool(immutableSettings0, nodeSettingsService0);
      assertNotNull(threadPool0);
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(immutableSettings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(immutableSettings0, environment0, hashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertTrue(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("i_V![^Y@jQ/J5,", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(immutableSortedMap0, immutableSortedMap1);
      assertNotSame(immutableSortedMap1, immutableSortedMap0);
      
      String string2 = mongoDBRiverDefinition0.getMongoCollection();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertTrue(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("i_V![^Y@jQ/J5,", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("pWSOP8", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals("pWSOP8", string2);
      assertNotSame(string0, string1);
      assertSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(immutableSortedMap0, immutableSortedMap1);
      assertNotSame(immutableSortedMap1, immutableSortedMap0);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      
      String string3 = "Nk%";
      ScriptEngineService scriptEngineService0 = mock(ScriptEngineService.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = hashSet0.add(scriptEngineService0);
      assertFalse(boolean1 == boolean0);
      assertFalse(hashSet0.isEmpty());
      assertEquals(1, hashSet0.size());
      assertTrue(boolean1);
      assertTrue(hashSet0.contains(scriptEngineService0));
      
      try { 
        environment0.resolveConfigAndLoadToString(string3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to resolve config path [Nk%], tried file path [Nk%], path file [/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/elasticsearch-river-mongodb/6b6ce8e851c6613213c4508c3f277a80649e0c7b/evosuite_1/config/Nk%], and classpath
         //
         verifyException("org.elasticsearch.env.Environment", e);
      }
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      String string0 = "G-e|[1QU ";
      String string1 = "";
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, hashMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      LinkedHashSet<ScriptEngineService> linkedHashSet0 = new LinkedHashSet<ScriptEngineService>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      ThreadPool threadPool0 = new ThreadPool(string0);
      assertNotNull(threadPool0);
      assertFalse(string0.equals((Object)string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string2 = "WG]%%The(C?*~";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.statisticsTypeName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("WG]%%The(C?*~", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string3 = mongoDBRiverDefinition0.getStatisticsIndexName();
      assertNull(string3);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("WG]%%The(C?*~", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      boolean boolean2 = mongoDBRiverDefinition0.isStoreStatistics();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("WG]%%The(C?*~", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertTrue(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "ad`BC4\\x5\"w~>X[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      int int0 = 630;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      String string1 = "\\m8";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertFalse(string1.equals((Object)string0));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.includeFields(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertFalse(linkedHashSet0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet1);
      assertTrue(linkedHashSet1.equals((Object)linkedHashSet0));
      assertEquals(0, linkedHashSet1.size());
      assertTrue(linkedHashSet1.isEmpty());
      assertFalse(linkedHashSet1.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder1.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      
      boolean boolean2 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      int int1 = (-1293);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder6.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      
      String string2 = "2w=/";
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = basicDBObject0.remove(object0);
      assertNull(object1);
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, mongoDBRiverDefinition_Builder4);
      assertNotNull(basicDBObject1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(basicDBObject1, basicDBObject0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder9.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      
      String string3 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder9.parentTypes(linkedHashSet0);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(int0 == int1);
      assertTrue(linkedHashSet0.equals((Object)linkedHashSet1));
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder14);
      assertNotSame(linkedHashSet0, linkedHashSet1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder12);
      assertFalse(linkedHashSet0.contains(string0));
      
      String string4 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("\\m8", string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertNotSame(string4, string2);
      assertSame(string4, string1);
      assertNotSame(string4, string0);
      
      int int2 = 982;
      BasicDBObject basicDBObject2 = new BasicDBObject(int2);
      assertNotNull(basicDBObject2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(basicDBObject2.isPartialObject());
      assertTrue(basicDBObject2.isEmpty());
      assertEquals(0, basicDBObject2.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder1.mongoOplogFilter(basicDBObject2);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(basicDBObject2.isPartialObject());
      assertTrue(basicDBObject2.isEmpty());
      assertEquals(0, basicDBObject2.size());
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      
      String string5 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals("\\m8", string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(string5, string1);
      assertSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      
      boolean boolean3 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(boolean3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      
      boolean boolean4 = mongoDBRiverDefinition0.isMongoSSLVerifyCertificate();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertTrue(boolean4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      
      String string7 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(630, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\\m8", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("ad`BC4\\x5\"w~>X[", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
  }
}
