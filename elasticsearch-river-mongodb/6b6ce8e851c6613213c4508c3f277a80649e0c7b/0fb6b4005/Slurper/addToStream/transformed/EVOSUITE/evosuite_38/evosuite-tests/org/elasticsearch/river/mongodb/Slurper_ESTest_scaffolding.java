/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 07 00:24:34 GMT 2021
 */

package org.elasticsearch.river.mongodb;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Slurper_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.river.mongodb.Slurper"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/elasticsearch-river-mongodb/6b6ce8e851c6613213c4508c3f277a80649e0c7b/evosuite_38"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_291/jre/classes"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Slurper_ESTest_scaffolding.class.getClassLoader() ,
      "org.bson.LazyBSONObject",
      "org.bson.util.CopyOnWriteMap",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.common.collect.ImmutableList$ReverseImmutableList",
      "org.bson.util.Assertions",
      "org.bson.BSON$2",
      "org.bson.BSON$1",
      "org.elasticsearch.river.mongodb.Timestamp",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk",
      "org.elasticsearch.common.collect.ObjectArrays",
      "com.mongodb.Mongo$1",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Builder",
      "org.bson.BSON",
      "org.bson.types.BSONTimestamp",
      "org.elasticsearch.common.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.elasticsearch.common.logging.ESLogger",
      "org.elasticsearch.common.collect.Multiset",
      "org.bson.util.ClassMap$ComputeFunction",
      "org.bson.util.AbstractCopyOnWriteMap",
      "org.elasticsearch.river.mongodb.MongoDBRiver$QueueEntry",
      "com.mongodb.Mongo",
      "com.mongodb.MongoAuthority$Type",
      "com.mongodb.gridfs.GridFSDBFile",
      "org.elasticsearch.river.mongodb.MongoDBRiver",
      "com.mongodb.DBApiLayer",
      "org.bson.BSONEncoder",
      "org.bson.util.AbstractCopyOnWriteMap$View$Type",
      "org.elasticsearch.common.collect.UnmodifiableListIterator",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "com.mongodb.MongoAuthority",
      "org.bson.BasicBSONObject",
      "org.bson.util.CopyOnWriteMap$Builder",
      "org.elasticsearch.common.unit.ByteSizeUnit$6",
      "org.elasticsearch.common.unit.ByteSizeUnit$5",
      "org.elasticsearch.river.RiverSettings",
      "org.elasticsearch.common.io.stream.Streamable",
      "com.mongodb.DBConnector",
      "org.elasticsearch.ElasticsearchIllegalArgumentException",
      "org.bson.util.SimplePool",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.elasticsearch.common.base.Preconditions",
      "com.mongodb.MongoClientOptions",
      "org.elasticsearch.common.joda.time.ReadablePeriod",
      "org.elasticsearch.common.base.Joiner",
      "org.elasticsearch.common.logging.log4j.Log4jESLoggerFactory",
      "org.bson.util.CopyOnWriteMap$Hash",
      "org.elasticsearch.river.River",
      "com.mongodb.ServerAddress",
      "org.elasticsearch.common.logging.Loggers",
      "org.bson.types.Binary",
      "org.elasticsearch.common.component.AbstractComponent",
      "com.mongodb.MongoCredentialsStore",
      "org.elasticsearch.client.Client",
      "org.elasticsearch.common.joda.time.format.PeriodFormat",
      "com.mongodb.BasicDBObject",
      "org.bson.BSONObject",
      "org.elasticsearch.common.settings.SettingsException",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition",
      "org.bson.LazyDBList",
      "com.mongodb.MongoException$CursorNotFound",
      "org.bson.util.AbstractCopyOnWriteMap$Immutable",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "com.mongodb.DBCursor",
      "org.bson.util.AbstractCopyOnWriteMap$Mutable",
      "org.bson.BSONException",
      "org.elasticsearch.common.joda.time.PeriodType",
      "org.bson.types.ObjectId",
      "org.bson.util.AbstractCopyOnWriteMap$View",
      "org.elasticsearch.common.logging.jdk.JdkESLoggerFactory",
      "org.elasticsearch.river.AbstractRiverComponent",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.common.collect.SingletonImmutableList",
      "org.elasticsearch.river.mongodb.Operation",
      "org.bson.LazyBSONCallback",
      "org.elasticsearch.common.collect.ImmutableCollection$Builder",
      "org.elasticsearch.common.collect.ImmutableMap",
      "org.elasticsearch.common.logging.support.AbstractESLogger",
      "org.elasticsearch.common.collect.ImmutableList",
      "com.mongodb.DBObject",
      "org.elasticsearch.common.collect.RegularImmutableList",
      "org.elasticsearch.common.logging.slf4j.Slf4jESLogger",
      "org.elasticsearch.common.collect.ImmutableCollection",
      "org.elasticsearch.river.mongodb.Timestamp$BSON",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder",
      "org.elasticsearch.common.joda.time.format.PeriodFormatter",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.bson.io.BSONByteBuffer",
      "org.elasticsearch.river.mongodb.Slurper",
      "org.bson.util.AbstractCopyOnWriteMap$View$Type$2",
      "com.mongodb.MongoException",
      "org.bson.util.AbstractCopyOnWriteMap$View$Type$1",
      "org.bson.LazyBSONList",
      "org.elasticsearch.common.collect.UnmodifiableIterator",
      "org.elasticsearch.common.base.Joiner$2",
      "org.elasticsearch.common.base.Function",
      "org.elasticsearch.common.base.Joiner$1",
      "org.bson.BSONCallback",
      "org.bson.BSONDecoder",
      "org.elasticsearch.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "org.elasticsearch.common.unit.ByteSizeUnit$2",
      "org.elasticsearch.common.collect.AbstractIndexedListIterator",
      "org.elasticsearch.common.unit.ByteSizeUnit$1",
      "com.mongodb.DB",
      "org.elasticsearch.common.unit.ByteSizeUnit$4",
      "org.elasticsearch.common.unit.ByteSizeUnit$3",
      "com.mongodb.MongoInternalException",
      "org.elasticsearch.common.settings.NoClassSettingsException",
      "org.bson.util.ComputingMap",
      "org.elasticsearch.common.joda.time.format.PeriodPrinter",
      "com.mongodb.DBAddress",
      "org.bson.util.Function",
      "org.bson.util.Assertions$NullArgumentException",
      "org.elasticsearch.river.mongodb.Slurper$SlurperException",
      "org.elasticsearch.river.mongodb.Status",
      "org.bson.util.CopyOnWriteMap$Linked",
      "org.elasticsearch.common.collect.ImmutableList$Builder",
      "com.mongodb.Bytes",
      "org.elasticsearch.river.mongodb.SharedContext",
      "org.elasticsearch.common.unit.TimeValue",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix",
      "org.elasticsearch.common.collect.RegularImmutableAsList",
      "org.elasticsearch.common.Classes",
      "com.mongodb.gridfs.GridFSFile",
      "org.elasticsearch.common.collect.ImmutableList$SubList",
      "org.elasticsearch.common.joda.time.ReadWritablePeriod",
      "org.elasticsearch.river.mongodb.Timestamp$GTID",
      "com.mongodb.MongoInterruptedException",
      "org.elasticsearch.common.collect.ImmutableAsList",
      "org.elasticsearch.river.RiverComponent",
      "com.mongodb.DBCollection",
      "org.bson.EmptyBSONCallback",
      "org.elasticsearch.common.collect.ImmutableList$1",
      "org.elasticsearch.common.collect.Collections2",
      "org.bson.util.ClassMap",
      "org.elasticsearch.common.joda.time.DurationFieldType",
      "org.elasticsearch.common.logging.slf4j.Slf4jESLoggerFactory",
      "com.mongodb.MongoClient",
      "org.elasticsearch.common.joda.time.format.PeriodParser"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Slurper_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.common.logging.jdk.JdkESLoggerFactory",
      "org.elasticsearch.common.logging.slf4j.Slf4jESLoggerFactory",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "org.elasticsearch.common.logging.support.AbstractESLogger",
      "org.elasticsearch.common.logging.slf4j.Slf4jESLogger",
      "org.elasticsearch.river.mongodb.Slurper",
      "org.elasticsearch.river.mongodb.Slurper$SlurperException",
      "org.elasticsearch.common.collect.ObjectArrays",
      "org.elasticsearch.common.collect.ImmutableCollection",
      "org.elasticsearch.common.collect.RegularImmutableList",
      "org.elasticsearch.common.collect.ImmutableList",
      "org.elasticsearch.river.mongodb.Status",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.river.mongodb.util.MongoDBRiverHelper",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.elasticsearch.common.jackson.core.JsonFactory$Feature",
      "org.elasticsearch.common.jackson.core.JsonParser$Feature",
      "org.elasticsearch.common.jackson.core.JsonGenerator$Feature",
      "org.elasticsearch.common.jackson.core.io.SerializedString",
      "org.elasticsearch.common.jackson.core.util.DefaultPrettyPrinter",
      "org.elasticsearch.common.jackson.core.JsonFactory",
      "org.elasticsearch.common.jackson.core.sym.CharsToNameCanonicalizer",
      "org.elasticsearch.common.jackson.core.sym.BytesToNameCanonicalizer",
      "org.elasticsearch.common.jackson.core.sym.BytesToNameCanonicalizer$TableInfo",
      "org.elasticsearch.common.xcontent.json.JsonXContent",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder",
      "org.elasticsearch.common.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.elasticsearch.common.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.elasticsearch.common.joda.time.DurationFieldType",
      "org.elasticsearch.common.joda.time.DateTimeFieldType",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatter",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.elasticsearch.common.joda.time.format.ISODateTimeFormat",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.elasticsearch.common.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.elasticsearch.common.joda.time.tz.FixedDateTimeZone",
      "org.elasticsearch.common.joda.time.tz.ZoneInfoProvider",
      "org.elasticsearch.common.joda.time.tz.DefaultNameProvider",
      "org.elasticsearch.common.joda.time.DateTimeZone",
      "org.elasticsearch.common.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.common.xcontent.XContentBuilder$FieldCaseConversion",
      "org.elasticsearch.common.jackson.dataformat.smile.SmileParser$Feature",
      "org.elasticsearch.common.jackson.dataformat.smile.SmileGenerator$Feature",
      "org.elasticsearch.common.jackson.dataformat.smile.SmileFactory",
      "org.elasticsearch.common.xcontent.smile.SmileXContent",
      "org.elasticsearch.common.jackson.dataformat.yaml.YAMLParser$Feature",
      "org.elasticsearch.common.jackson.dataformat.yaml.YAMLGenerator$Feature",
      "org.elasticsearch.common.jackson.dataformat.yaml.YAMLFactory",
      "org.elasticsearch.common.xcontent.yaml.YamlXContent",
      "org.elasticsearch.river.AbstractRiverComponent",
      "org.elasticsearch.river.mongodb.MongoDBRiver",
      "org.elasticsearch.river.mongodb.Operation",
      "org.elasticsearch.common.base.CharMatcher$1",
      "org.elasticsearch.common.base.CharMatcher$FastMatcher",
      "org.elasticsearch.common.base.CharMatcher$13",
      "org.elasticsearch.common.base.CharMatcher$RangesMatcher",
      "org.elasticsearch.common.base.Preconditions",
      "org.elasticsearch.common.base.CharMatcher$2",
      "org.elasticsearch.common.base.CharMatcher$3",
      "org.elasticsearch.common.base.CharMatcher$4",
      "org.elasticsearch.common.base.CharMatcher$5",
      "org.elasticsearch.common.base.CharMatcher$6",
      "org.elasticsearch.common.base.CharMatcher$Or",
      "org.elasticsearch.common.base.CharMatcher$7",
      "org.elasticsearch.common.base.CharMatcher$8",
      "org.elasticsearch.common.base.CharMatcher$15",
      "org.elasticsearch.common.base.CharMatcher",
      "com.mongodb.ServerAddress",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Builder",
      "org.bson.BasicBSONObject",
      "com.mongodb.BasicDBObject",
      "org.elasticsearch.index.mapper.core.AbstractFieldMapper$1",
      "org.elasticsearch.index.mapper.core.AbstractFieldMapper",
      "org.elasticsearch.common.collect.Sets",
      "org.elasticsearch.common.base.Joiner",
      "org.elasticsearch.common.base.Joiner$1",
      "org.elasticsearch.common.collect.Collections2",
      "org.elasticsearch.common.base.Joiner$MapJoiner",
      "org.elasticsearch.common.collect.Maps",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUnicodeComparator",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.index.mapper.core.CompletionFieldMapper",
      "org.elasticsearch.common.unit.TimeValue",
      "org.elasticsearch.common.joda.time.format.PeriodFormat",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.elasticsearch.common.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.elasticsearch.common.joda.time.format.PeriodFormatter",
      "org.elasticsearch.common.joda.time.PeriodType",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition",
      "org.elasticsearch.river.mongodb.SharedContext",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.common.collect.ImmutableMap",
      "org.elasticsearch.common.collect.ImmutableBiMap",
      "org.elasticsearch.common.collect.EmptyImmutableBiMap",
      "org.elasticsearch.common.settings.ImmutableSettings",
      "org.elasticsearch.common.settings.ImmutableSettings$Builder",
      "org.elasticsearch.node.settings.NodeSettingsService",
      "org.elasticsearch.client.support.AbstractClient",
      "org.elasticsearch.client.transport.TransportClient",
      "org.elasticsearch.node.internal.InternalSettingsPreparer",
      "org.elasticsearch.common.collect.ImmutableSet",
      "org.elasticsearch.common.collect.Hashing",
      "org.elasticsearch.common.collect.RegularImmutableSet",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.common.property.PropertyPlaceholder",
      "org.elasticsearch.common.Preconditions",
      "org.elasticsearch.common.settings.ImmutableSettings$Builder$1",
      "org.elasticsearch.env.Environment",
      "org.elasticsearch.cluster.ClusterName",
      "org.elasticsearch.common.collect.Lists",
      "org.elasticsearch.common.collect.EmptyImmutableSet",
      "org.elasticsearch.common.collect.UnmodifiableIterator",
      "org.elasticsearch.common.collect.UnmodifiableListIterator",
      "org.elasticsearch.common.collect.Iterators$1",
      "org.elasticsearch.common.collect.Iterators$2",
      "org.elasticsearch.common.collect.Iterators",
      "org.elasticsearch.common.Names",
      "org.elasticsearch.common.base.Charsets",
      "org.elasticsearch.common.util.concurrent.jsr166y.ThreadLocalRandom$1",
      "org.elasticsearch.common.util.concurrent.jsr166y.ThreadLocalRandom",
      "org.elasticsearch.common.collect.RegularImmutableMap",
      "org.elasticsearch.common.collect.CollectPreconditions",
      "org.elasticsearch.common.collect.AbstractMapEntry",
      "org.elasticsearch.common.collect.ImmutableEntry",
      "org.elasticsearch.common.collect.ImmutableMapEntry",
      "org.elasticsearch.common.collect.ImmutableMapEntry$TerminalEntry",
      "org.elasticsearch.common.collect.RegularImmutableMap$NonTerminalMapEntry",
      "org.elasticsearch.common.collect.ImmutableMapEntrySet",
      "org.elasticsearch.common.collect.RegularImmutableMap$EntrySet",
      "org.elasticsearch.common.collect.ImmutableAsList",
      "org.elasticsearch.common.collect.RegularImmutableAsList",
      "org.elasticsearch.common.collect.AbstractIndexedListIterator",
      "org.elasticsearch.common.collect.Iterators$11",
      "org.elasticsearch.common.collect.Iterables",
      "org.elasticsearch.common.collect.Tuple",
      "org.elasticsearch.plugins.PluginsService",
      "org.elasticsearch.common.collect.ImmutableCollection$Builder",
      "org.elasticsearch.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "org.elasticsearch.common.collect.ImmutableList$Builder",
      "org.elasticsearch.common.io.FileSystemUtils",
      "org.elasticsearch.plugins.AbstractPlugin",
      "org.elasticsearch.plugin.river.mongodb.MongoDBRiverPlugin",
      "org.elasticsearch.action.admin.cluster.node.info.PluginInfo",
      "org.apache.lucene.util.IOUtils",
      "org.elasticsearch.common.collect.SingletonImmutableList",
      "org.elasticsearch.common.collect.Iterators$12",
      "org.elasticsearch.common.collect.MapBuilder",
      "org.elasticsearch.plugins.PluginsService$OnModuleReference",
      "org.elasticsearch.common.collect.SingletonImmutableBiMap",
      "org.apache.lucene.util.Version",
      "org.elasticsearch.Version",
      "org.elasticsearch.common.compress.lzf.LZFCompressor",
      "org.apache.lucene.LucenePackage",
      "org.apache.lucene.util.Constants",
      "org.elasticsearch.common.compress.lzf.ChunkDecoder",
      "org.elasticsearch.common.compress.lzf.impl.UnsafeChunkDecoder",
      "org.elasticsearch.common.compress.lzf.util.ChunkDecoderFactory",
      "org.elasticsearch.common.compress.CompressorFactory",
      "org.elasticsearch.common.inject.ModulesBuilder",
      "org.elasticsearch.common.inject.AbstractModule",
      "org.elasticsearch.Version$Module",
      "org.elasticsearch.cache.recycler.CacheRecyclerModule",
      "org.elasticsearch.plugins.PluginsModule",
      "org.elasticsearch.env.EnvironmentModule",
      "org.elasticsearch.common.settings.SettingsModule",
      "org.elasticsearch.common.network.NetworkModule",
      "org.elasticsearch.cluster.ClusterNameModule",
      "org.elasticsearch.threadpool.ThreadPoolModule",
      "org.elasticsearch.search.TransportSearchModule",
      "org.elasticsearch.search.facet.TransportFacetModule",
      "org.elasticsearch.search.aggregations.TransportAggregationModule",
      "org.elasticsearch.transport.TransportModule",
      "org.elasticsearch.cluster.node.DiscoveryNode",
      "org.elasticsearch.common.inject.Modules",
      "org.elasticsearch.transport.netty.NettyTransportModule",
      "org.elasticsearch.action.ActionModule",
      "org.elasticsearch.client.transport.ClientTransportModule",
      "org.elasticsearch.common.inject.Guice",
      "org.elasticsearch.common.inject.Stage",
      "org.elasticsearch.common.inject.InjectorBuilder",
      "org.elasticsearch.common.inject.internal.Stopwatch",
      "org.elasticsearch.common.inject.internal.Errors$Converter",
      "org.elasticsearch.common.inject.internal.Errors$2",
      "org.elasticsearch.common.inject.internal.Errors$3",
      "org.elasticsearch.common.inject.internal.Errors$4",
      "org.elasticsearch.common.inject.internal.Errors",
      "org.elasticsearch.common.collect.SingletonImmutableSet",
      "org.elasticsearch.common.inject.internal.SourceProvider",
      "org.elasticsearch.common.inject.Initializer",
      "org.elasticsearch.common.inject.InjectorShell$Builder",
      "org.elasticsearch.common.inject.AbstractProcessor",
      "org.elasticsearch.common.inject.InjectionRequestProcessor",
      "org.elasticsearch.common.inject.BindingProcessor",
      "org.elasticsearch.common.inject.InheritingState",
      "org.elasticsearch.common.inject.State$1",
      "org.elasticsearch.common.inject.State",
      "org.elasticsearch.common.inject.WeakKeySet",
      "org.elasticsearch.common.inject.InjectorImpl",
      "org.elasticsearch.common.inject.InjectorImpl$BindingsMultimap",
      "org.elasticsearch.common.inject.DeferredLookups",
      "org.elasticsearch.common.inject.ConstructorInjectorStore",
      "org.elasticsearch.common.inject.internal.FailableCache",
      "org.elasticsearch.common.inject.ConstructorInjectorStore$1",
      "org.elasticsearch.common.cache.CacheBuilder$1",
      "org.elasticsearch.common.base.Suppliers",
      "org.elasticsearch.common.base.Suppliers$SupplierOfInstance",
      "org.elasticsearch.common.cache.CacheStats",
      "org.elasticsearch.common.cache.CacheBuilder$2",
      "org.elasticsearch.common.base.Ticker$1",
      "org.elasticsearch.common.base.Ticker",
      "org.elasticsearch.common.cache.CacheBuilder$3",
      "org.elasticsearch.common.cache.CacheBuilder",
      "org.elasticsearch.common.cache.CacheLoader",
      "org.elasticsearch.common.inject.internal.FailableCache$1",
      "org.elasticsearch.common.cache.LocalCache$LocalManualCache",
      "org.elasticsearch.common.cache.LocalCache$LocalLoadingCache",
      "org.elasticsearch.common.util.concurrent.MoreExecutors",
      "org.elasticsearch.common.util.concurrent.AbstractListeningExecutorService",
      "org.elasticsearch.common.util.concurrent.MoreExecutors$SameThreadExecutorService",
      "org.elasticsearch.common.cache.LocalCache$1",
      "org.elasticsearch.common.cache.LocalCache$2",
      "org.elasticsearch.common.cache.LocalCache",
      "org.elasticsearch.common.cache.LocalCache$Strength",
      "org.elasticsearch.common.base.Objects",
      "org.elasticsearch.common.base.Equivalence",
      "org.elasticsearch.common.base.Equivalence$Equals",
      "org.elasticsearch.common.cache.CacheBuilder$OneWeigher",
      "org.elasticsearch.common.cache.CacheBuilder$NullListener",
      "org.elasticsearch.common.cache.LocalCache$EntryFactory",
      "org.elasticsearch.common.cache.LocalCache$Segment",
      "org.elasticsearch.common.inject.InjectorImpl$1",
      "org.elasticsearch.common.inject.InjectorShell$RootModule",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor",
      "org.elasticsearch.common.inject.internal.Strings",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor$5",
      "org.elasticsearch.common.inject.matcher.AbstractMatcher",
      "org.elasticsearch.common.inject.matcher.Matchers$Any",
      "org.elasticsearch.common.inject.matcher.Matchers",
      "org.elasticsearch.common.inject.matcher.Matchers$IdenticalTo",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor$6",
      "org.elasticsearch.common.inject.internal.MatcherAndConverter",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor$1",
      "org.elasticsearch.common.inject.matcher.Matchers$SubclassesOf",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor$2",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor$3",
      "org.elasticsearch.common.inject.TypeConverterBindingProcessor$4",
      "org.elasticsearch.common.inject.spi.DefaultBindingTargetVisitor",
      "org.elasticsearch.common.inject.spi.Elements$1",
      "org.elasticsearch.common.inject.spi.Elements",
      "org.elasticsearch.common.inject.spi.Elements$RecordingBinder",
      "org.elasticsearch.common.collect.FluentIterable",
      "org.elasticsearch.common.collect.Iterables$2",
      "org.elasticsearch.common.collect.TransformedIterator",
      "org.elasticsearch.common.collect.Iterables$3",
      "org.elasticsearch.common.collect.Iterators$5",
      "org.elasticsearch.common.collect.ImmutableSet$Builder",
      "org.elasticsearch.common.collect.Platform",
      "org.elasticsearch.common.inject.Key",
      "org.elasticsearch.common.inject.Key$NullAnnotationStrategy",
      "org.elasticsearch.common.inject.TypeLiteral",
      "org.elasticsearch.common.collect.ImmutableMap$Builder",
      "org.elasticsearch.common.inject.internal.MoreTypes",
      "org.elasticsearch.common.inject.internal.AbstractBindingBuilder",
      "org.elasticsearch.common.inject.internal.BindingBuilder",
      "org.elasticsearch.common.inject.internal.BindingImpl",
      "org.elasticsearch.common.inject.internal.UntargettedBindingImpl",
      "org.elasticsearch.common.inject.internal.Scoping$1",
      "org.elasticsearch.common.inject.internal.Scoping$2",
      "org.elasticsearch.common.inject.internal.Scoping$3",
      "org.elasticsearch.common.inject.internal.Scoping$4",
      "org.elasticsearch.common.inject.internal.Scoping",
      "org.elasticsearch.common.inject.spi.InjectionPoint",
      "org.elasticsearch.common.inject.spi.InjectionPoint$Factory$1",
      "org.elasticsearch.common.inject.spi.InjectionPoint$Factory$2",
      "org.elasticsearch.common.inject.spi.InjectionPoint$Factory",
      "org.elasticsearch.common.inject.internal.MoreTypes$ParameterizedTypeImpl",
      "org.elasticsearch.common.inject.internal.InstanceBindingImpl",
      "org.elasticsearch.common.inject.util.Providers",
      "org.elasticsearch.common.inject.util.Providers$1",
      "org.elasticsearch.common.inject.Scopes$1",
      "org.elasticsearch.common.inject.Scopes$2",
      "org.elasticsearch.common.inject.Scopes",
      "org.elasticsearch.common.inject.spi.ScopeBinding",
      "org.elasticsearch.common.inject.internal.ProviderMethodsModule",
      "org.elasticsearch.common.inject.util.Modules$1",
      "org.elasticsearch.common.inject.util.Modules",
      "org.elasticsearch.search.facet.InternalFacet",
      "org.elasticsearch.common.bytes.HashedBytesArray",
      "org.apache.lucene.util.UnicodeUtil",
      "org.elasticsearch.search.facet.filter.InternalFilterFacet$1",
      "org.elasticsearch.search.facet.filter.InternalFilterFacet",
      "org.elasticsearch.search.facet.InternalFacet$Streams",
      "org.elasticsearch.common.bytes.BytesReference$Helper",
      "org.elasticsearch.search.facet.query.InternalQueryFacet$1",
      "org.elasticsearch.search.facet.query.InternalQueryFacet",
      "org.elasticsearch.search.facet.geodistance.InternalGeoDistanceFacet$1",
      "org.elasticsearch.search.facet.geodistance.InternalGeoDistanceFacet",
      "org.elasticsearch.search.facet.histogram.InternalHistogramFacet",
      "org.elasticsearch.search.facet.histogram.InternalFullHistogramFacet$1",
      "org.elasticsearch.search.facet.histogram.InternalFullHistogramFacet",
      "org.elasticsearch.search.facet.histogram.InternalCountHistogramFacet$1",
      "org.elasticsearch.search.facet.histogram.InternalCountHistogramFacet",
      "org.elasticsearch.search.facet.datehistogram.InternalDateHistogramFacet",
      "org.elasticsearch.search.facet.datehistogram.InternalCountDateHistogramFacet$1",
      "org.elasticsearch.search.facet.datehistogram.InternalCountDateHistogramFacet",
      "org.elasticsearch.search.facet.datehistogram.InternalFullDateHistogramFacet$1",
      "org.elasticsearch.search.facet.datehistogram.InternalFullDateHistogramFacet",
      "org.elasticsearch.search.facet.range.InternalRangeFacet$1",
      "org.elasticsearch.search.facet.range.InternalRangeFacet",
      "org.elasticsearch.search.facet.statistical.InternalStatisticalFacet$1",
      "org.elasticsearch.search.facet.statistical.InternalStatisticalFacet",
      "org.elasticsearch.search.facet.terms.InternalTermsFacet",
      "org.elasticsearch.search.facet.terms.strings.InternalStringTermsFacet$1",
      "org.elasticsearch.search.facet.terms.strings.InternalStringTermsFacet",
      "org.elasticsearch.search.facet.terms.longs.InternalLongTermsFacet$1",
      "org.elasticsearch.search.facet.terms.longs.InternalLongTermsFacet",
      "org.elasticsearch.search.facet.terms.doubles.InternalDoubleTermsFacet$1",
      "org.elasticsearch.search.facet.terms.doubles.InternalDoubleTermsFacet",
      "org.elasticsearch.search.facet.termsstats.InternalTermsStatsFacet",
      "org.elasticsearch.search.facet.termsstats.strings.InternalTermsStatsStringFacet$1",
      "org.elasticsearch.search.facet.termsstats.strings.InternalTermsStatsStringFacet",
      "org.elasticsearch.search.facet.termsstats.longs.InternalTermsStatsLongFacet$1",
      "org.elasticsearch.search.facet.termsstats.longs.InternalTermsStatsLongFacet",
      "org.elasticsearch.search.facet.termsstats.doubles.InternalTermsStatsDoubleFacet$1",
      "org.elasticsearch.search.facet.termsstats.doubles.InternalTermsStatsDoubleFacet",
      "org.elasticsearch.search.aggregations.InternalAggregation",
      "org.elasticsearch.search.aggregations.metrics.MetricsAggregation",
      "org.elasticsearch.search.aggregations.metrics.MetricsAggregation$SingleValue",
      "org.elasticsearch.search.aggregations.InternalAggregation$Type",
      "org.elasticsearch.common.bytes.BytesArray",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg$1",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg",
      "org.elasticsearch.search.aggregations.AggregationStreams",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum$1",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin$1",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax$1",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax",
      "org.elasticsearch.search.aggregations.metrics.MetricsAggregation$MultiValue",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount$1",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount",
      "org.elasticsearch.search.aggregations.metrics.percentiles.InternalPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.InternalPercentiles",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality$1",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality",
      "org.elasticsearch.search.aggregations.bucket.InternalSingleBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal$1",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter$1",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing$1",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing",
      "org.elasticsearch.search.aggregations.bucket.terms.InternalTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.InternalSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$1",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange",
      "org.elasticsearch.search.aggregations.bucket.range.ipv4.InternalIPv4Range$1",
      "org.elasticsearch.search.aggregations.bucket.range.ipv4.InternalIPv4Range$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.ipv4.InternalIPv4Range",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$Factory",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$1",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalDateHistogram$Factory",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalDateHistogram$1",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalDateHistogram",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$1",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested",
      "org.elasticsearch.common.inject.internal.LinkedBindingImpl",
      "org.elasticsearch.action.GenericAction",
      "org.elasticsearch.action.admin.cluster.ClusterAction",
      "org.elasticsearch.action.admin.cluster.node.info.NodesInfoAction",
      "org.elasticsearch.action.ActionModule$ActionEntry",
      "org.elasticsearch.action.admin.cluster.node.stats.NodesStatsAction",
      "org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownAction",
      "org.elasticsearch.action.admin.cluster.node.restart.NodesRestartAction",
      "org.elasticsearch.action.admin.cluster.node.hotthreads.NodesHotThreadsAction",
      "org.elasticsearch.action.admin.cluster.stats.ClusterStatsAction",
      "org.elasticsearch.action.admin.cluster.state.ClusterStateAction",
      "org.elasticsearch.action.admin.cluster.health.ClusterHealthAction",
      "org.elasticsearch.action.admin.cluster.settings.ClusterUpdateSettingsAction",
      "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteAction",
      "org.elasticsearch.action.admin.cluster.shards.ClusterSearchShardsAction",
      "org.elasticsearch.action.admin.cluster.tasks.PendingClusterTasksAction",
      "org.elasticsearch.action.admin.cluster.repositories.put.PutRepositoryAction",
      "org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction",
      "org.elasticsearch.action.admin.cluster.repositories.delete.DeleteRepositoryAction",
      "org.elasticsearch.action.admin.cluster.snapshots.get.GetSnapshotsAction",
      "org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotAction",
      "org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotAction",
      "org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotAction",
      "org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusAction",
      "org.elasticsearch.action.admin.indices.IndicesAction",
      "org.elasticsearch.action.admin.indices.stats.IndicesStatsAction",
      "org.elasticsearch.action.admin.indices.status.IndicesStatusAction",
      "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsAction",
      "org.elasticsearch.action.admin.indices.create.CreateIndexAction",
      "org.elasticsearch.action.admin.indices.delete.DeleteIndexAction",
      "org.elasticsearch.action.admin.indices.open.OpenIndexAction",
      "org.elasticsearch.action.admin.indices.close.CloseIndexAction",
      "org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsAction",
      "org.elasticsearch.action.admin.indices.exists.types.TypesExistsAction",
      "org.elasticsearch.action.admin.indices.mapping.get.GetMappingsAction",
      "org.elasticsearch.action.admin.indices.mapping.get.GetFieldMappingsAction",
      "org.elasticsearch.action.admin.indices.mapping.put.PutMappingAction",
      "org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingAction",
      "org.elasticsearch.action.admin.indices.alias.IndicesAliasesAction",
      "org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsAction",
      "org.elasticsearch.action.admin.indices.analyze.AnalyzeAction",
      "org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateAction",
      "org.elasticsearch.action.admin.indices.template.get.GetIndexTemplatesAction",
      "org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateAction",
      "org.elasticsearch.action.admin.indices.validate.query.ValidateQueryAction",
      "org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotAction",
      "org.elasticsearch.action.admin.indices.refresh.RefreshAction",
      "org.elasticsearch.action.admin.indices.flush.FlushAction",
      "org.elasticsearch.action.admin.indices.optimize.OptimizeAction",
      "org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheAction",
      "org.elasticsearch.action.admin.indices.warmer.put.PutWarmerAction",
      "org.elasticsearch.action.admin.indices.warmer.delete.DeleteWarmerAction",
      "org.elasticsearch.action.admin.indices.warmer.get.GetWarmersAction",
      "org.elasticsearch.action.admin.indices.alias.get.GetAliasesAction",
      "org.elasticsearch.action.admin.indices.alias.exists.AliasesExistAction",
      "org.elasticsearch.action.admin.indices.settings.get.GetSettingsAction",
      "org.elasticsearch.action.Action",
      "org.elasticsearch.action.index.IndexAction",
      "org.elasticsearch.action.get.GetAction",
      "org.elasticsearch.action.termvector.TermVectorAction",
      "org.elasticsearch.action.termvector.MultiTermVectorsAction",
      "org.elasticsearch.action.delete.DeleteAction",
      "org.elasticsearch.action.count.CountAction",
      "org.elasticsearch.action.suggest.SuggestAction",
      "org.elasticsearch.action.update.UpdateAction",
      "org.elasticsearch.action.get.MultiGetAction",
      "org.elasticsearch.action.bulk.BulkAction",
      "org.elasticsearch.action.deletebyquery.DeleteByQueryAction",
      "org.elasticsearch.action.search.SearchAction",
      "org.elasticsearch.action.search.SearchScrollAction",
      "org.elasticsearch.action.search.MultiSearchAction",
      "org.elasticsearch.action.mlt.MoreLikeThisAction",
      "org.elasticsearch.action.percolate.PercolateAction",
      "org.elasticsearch.action.percolate.MultiPercolateAction",
      "org.elasticsearch.action.explain.ExplainAction",
      "org.elasticsearch.action.search.ClearScrollAction",
      "org.elasticsearch.action.admin.indices.recovery.RecoveryAction",
      "org.elasticsearch.common.inject.multibindings.MapBinder",
      "org.elasticsearch.common.inject.util.Types",
      "org.elasticsearch.common.inject.multibindings.Multibinder",
      "org.elasticsearch.common.inject.multibindings.Multibinder$RealMultibinder",
      "org.elasticsearch.common.inject.internal.Annotations",
      "org.elasticsearch.common.inject.internal.Nullability",
      "org.elasticsearch.common.inject.spi.Dependency",
      "org.elasticsearch.common.inject.internal.ProviderInstanceBindingImpl",
      "org.elasticsearch.common.inject.multibindings.MapBinder$RealMapBinder",
      "org.elasticsearch.common.inject.spi.ProviderLookup",
      "org.elasticsearch.common.inject.spi.ProviderLookup$1",
      "org.elasticsearch.common.inject.multibindings.MapBinder$RealMapBinder$1",
      "org.elasticsearch.common.inject.multibindings.MapBinder$RealMapBinder$2",
      "org.elasticsearch.common.inject.multibindings.RealElement",
      "org.elasticsearch.common.inject.Key$AnnotationInstanceStrategy",
      "org.elasticsearch.common.inject.multibindings.MapBinder$RealMapBinder$MapEntry",
      "org.elasticsearch.common.inject.MessageProcessor",
      "org.elasticsearch.common.inject.TypeListenerBindingProcessor",
      "org.elasticsearch.common.inject.MembersInjectorStore",
      "org.elasticsearch.common.inject.MembersInjectorStore$1",
      "org.elasticsearch.common.inject.ScopeBindingProcessor",
      "org.elasticsearch.common.inject.InjectorShell",
      "org.elasticsearch.common.inject.InjectorShell$InjectorFactory",
      "org.elasticsearch.common.inject.InjectorShell$LoggerFactory",
      "org.elasticsearch.common.inject.BindingProcessor$1",
      "org.elasticsearch.common.inject.Initializables",
      "org.elasticsearch.common.inject.Initializables$1",
      "org.elasticsearch.common.inject.ConstantFactory",
      "org.elasticsearch.common.inject.ConstructorBindingImpl",
      "org.elasticsearch.common.inject.ConstructorBindingImpl$Factory",
      "org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter",
      "org.elasticsearch.common.inject.Scopes$1$1",
      "org.elasticsearch.common.inject.InternalFactoryToProviderAdapter",
      "org.elasticsearch.common.inject.BindingProcessor$1$1",
      "org.elasticsearch.common.inject.FactoryProxy",
      "org.elasticsearch.common.inject.Initializer$InjectableReference",
      "org.elasticsearch.common.inject.PrivateElementProcessor",
      "org.elasticsearch.common.cache.LocalCache$LoadingValueReference",
      "org.elasticsearch.common.util.concurrent.AbstractFuture",
      "org.elasticsearch.common.util.concurrent.SettableFuture",
      "org.elasticsearch.common.util.concurrent.AbstractFuture$Sync",
      "org.elasticsearch.common.util.concurrent.ExecutionList",
      "org.elasticsearch.common.base.Stopwatch",
      "org.elasticsearch.common.cache.LocalCache$AbstractReferenceEntry",
      "org.elasticsearch.common.cache.LocalCache$StrongEntry",
      "org.elasticsearch.common.base.Platform$1",
      "org.elasticsearch.common.base.Platform",
      "org.elasticsearch.common.inject.SingleParameterInjector",
      "org.elasticsearch.common.inject.EncounterImpl",
      "org.elasticsearch.common.inject.MembersInjectorImpl",
      "org.elasticsearch.common.util.concurrent.Uninterruptibles",
      "org.elasticsearch.common.cache.LocalCache$StrongValueReference",
      "org.elasticsearch.common.inject.DefaultConstructionProxyFactory",
      "org.elasticsearch.common.inject.ConstructorInjector",
      "org.elasticsearch.common.inject.DefaultConstructionProxyFactory$1",
      "org.elasticsearch.common.inject.SingleMethodInjector",
      "org.elasticsearch.common.inject.SingleMethodInjector$1",
      "org.elasticsearch.common.inject.LookupProcessor",
      "org.elasticsearch.common.inject.InjectorImpl$5",
      "org.elasticsearch.common.inject.MembersInjectorImpl$1",
      "org.elasticsearch.common.inject.internal.InternalContext",
      "org.elasticsearch.common.inject.InjectorImpl$5$1",
      "org.elasticsearch.common.inject.InjectorBuilder$1",
      "org.elasticsearch.common.inject.ProviderToInternalFactoryAdapter$1",
      "org.elasticsearch.common.inject.internal.ConstructionContext",
      "org.elasticsearch.cache.recycler.CacheRecycler",
      "org.elasticsearch.cache.recycler.CacheRecycler$Type",
      "org.elasticsearch.common.base.Strings",
      "org.elasticsearch.common.util.concurrent.EsExecutors",
      "org.elasticsearch.common.recycler.AbstractRecyclerC",
      "org.elasticsearch.cache.recycler.CacheRecycler$1",
      "org.elasticsearch.common.recycler.Recyclers",
      "org.elasticsearch.common.recycler.Recyclers$1",
      "org.elasticsearch.common.recycler.Recyclers$4",
      "org.elasticsearch.common.recycler.FilterRecycler",
      "org.elasticsearch.common.recycler.Recyclers$3",
      "org.elasticsearch.common.recycler.Recyclers$5",
      "org.elasticsearch.common.recycler.AbstractRecycler",
      "org.elasticsearch.common.recycler.NoneRecycler",
      "org.elasticsearch.common.recycler.Recyclers$2",
      "org.elasticsearch.cache.recycler.CacheRecycler$2",
      "org.elasticsearch.cache.recycler.CacheRecycler$3",
      "org.elasticsearch.cache.recycler.CacheRecycler$4",
      "org.elasticsearch.cache.recycler.CacheRecycler$5",
      "org.elasticsearch.cache.recycler.CacheRecycler$6",
      "org.elasticsearch.cache.recycler.CacheRecycler$7",
      "org.elasticsearch.cache.recycler.CacheRecycler$8",
      "org.elasticsearch.cache.recycler.CacheRecycler$9",
      "org.elasticsearch.cache.recycler.CacheRecycler$10",
      "org.elasticsearch.cache.recycler.CacheRecycler$11",
      "org.elasticsearch.cache.recycler.CacheRecycler$12",
      "org.elasticsearch.common.settings.SettingsFilter",
      "org.elasticsearch.common.network.NetworkService",
      "org.elasticsearch.common.transport.InetSocketTransportAddress",
      "org.elasticsearch.threadpool.ThreadPool",
      "org.elasticsearch.common.collect.ImmutableMapKeySet",
      "org.elasticsearch.common.collect.ImmutableMapKeySet$1",
      "org.elasticsearch.common.collect.ImmutableList$1",
      "org.elasticsearch.common.util.concurrent.EsExecutors$EsThreadFactory",
      "org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor",
      "org.elasticsearch.common.util.concurrent.EsAbortPolicy",
      "org.elasticsearch.common.metrics.CounterMetric",
      "org.elasticsearch.common.util.concurrent.jsr166e.Striped64$ThreadHashCode",
      "org.elasticsearch.common.util.concurrent.jsr166e.Striped64$1",
      "org.elasticsearch.common.util.concurrent.jsr166e.Striped64",
      "org.elasticsearch.common.util.concurrent.jsr166e.LongAdder",
      "org.elasticsearch.threadpool.ThreadPool$ExecutorHolder",
      "org.elasticsearch.threadpool.ThreadPool$Info",
      "org.elasticsearch.common.unit.SizeValue",
      "org.elasticsearch.common.unit.SizeUnit",
      "org.elasticsearch.common.util.concurrent.SizeBlockingQueue",
      "org.elasticsearch.common.util.concurrent.ConcurrentCollections",
      "org.elasticsearch.common.util.concurrent.jsr166y.LinkedTransferQueue$1",
      "org.elasticsearch.common.util.concurrent.jsr166y.LinkedTransferQueue",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ForceQueuePolicy",
      "org.elasticsearch.threadpool.ThreadPool$ApplySettings",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.elasticsearch.common.netty.NettyStaticSetup$EsThreadNameDeterminer",
      "org.elasticsearch.common.netty.logging.JdkLoggerFactory",
      "org.elasticsearch.common.netty.logging.AbstractInternalLogger",
      "org.elasticsearch.common.netty.logging.JdkLogger",
      "org.elasticsearch.common.netty.logging.InternalLoggerFactory$1",
      "org.elasticsearch.common.netty.util.internal.SystemPropertyUtil",
      "org.elasticsearch.common.netty.util.DebugUtil",
      "org.elasticsearch.common.netty.util.internal.StackTraceSimplifier",
      "org.elasticsearch.common.netty.logging.InternalLoggerFactory",
      "org.elasticsearch.transport.netty.NettyInternalESLoggerFactory",
      "org.elasticsearch.common.netty.NettyStaticSetup$1",
      "org.elasticsearch.transport.netty.NettyInternalESLogger",
      "org.elasticsearch.common.netty.util.ThreadNameDeterminer$1",
      "org.elasticsearch.common.netty.util.ThreadNameDeterminer$2",
      "org.elasticsearch.common.netty.util.ThreadNameDeterminer",
      "org.elasticsearch.common.netty.util.ThreadRenamingRunnable",
      "org.elasticsearch.common.netty.NettyStaticSetup",
      "org.elasticsearch.transport.netty.NettyTransport",
      "org.elasticsearch.common.component.Lifecycle",
      "org.elasticsearch.common.component.Lifecycle$State",
      "org.elasticsearch.common.util.concurrent.KeyedLock",
      "org.elasticsearch.common.network.NetworkService$TcpSettings",
      "org.elasticsearch.common.network.NetworkUtils",
      "org.elasticsearch.common.os.OsUtils",
      "org.elasticsearch.monitor.jvm.JvmInfo$Mem",
      "org.elasticsearch.monitor.jvm.JvmInfo",
      "org.elasticsearch.common.netty.channel.FixedReceiveBufferSizePredictorFactory",
      "org.elasticsearch.common.netty.channel.FixedReceiveBufferSizePredictor",
      "org.elasticsearch.transport.TransportService",
      "org.elasticsearch.common.util.concurrent.ConcurrentHashMapLong",
      "org.elasticsearch.transport.TransportService$1",
      "org.elasticsearch.transport.TransportService$Adapter",
      "org.elasticsearch.common.metrics.MeanMetric",
      "org.elasticsearch.client.transport.TransportClientNodesService",
      "org.elasticsearch.client.transport.TransportClientNodesService$NodeSampler",
      "org.elasticsearch.client.transport.TransportClientNodesService$SimpleNodeSampler",
      "org.elasticsearch.client.transport.TransportClientNodesService$ScheduledNodeSampler",
      "org.elasticsearch.threadpool.ThreadPool$ThreadedRunnable",
      "org.elasticsearch.client.support.AbstractIndicesAdminClient",
      "org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient",
      "org.elasticsearch.action.TransportActionNodeProxy",
      "org.elasticsearch.transport.TransportRequestOptions$Type",
      "org.elasticsearch.transport.TransportRequestOptions",
      "org.elasticsearch.client.support.AbstractClusterAdminClient",
      "org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient",
      "org.elasticsearch.client.transport.support.InternalTransportAdminClient",
      "org.elasticsearch.client.transport.support.InternalTransportClient",
      "org.elasticsearch.common.inject.Injectors",
      "org.elasticsearch.common.inject.internal.InternalFactory$Instance",
      "org.elasticsearch.common.inject.InjectorImpl$4",
      "org.elasticsearch.common.netty.bootstrap.Bootstrap",
      "org.elasticsearch.common.netty.bootstrap.ClientBootstrap",
      "org.elasticsearch.common.netty.channel.socket.nio.NioClientSocketChannelFactory",
      "org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorkerPool",
      "org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool",
      "org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector",
      "org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker",
      "org.elasticsearch.common.netty.channel.socket.nio.NioWorker",
      "org.elasticsearch.common.netty.channel.socket.nio.SelectorUtil",
      "org.elasticsearch.common.netty.util.internal.DeadLockProofWorker",
      "org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1",
      "org.elasticsearch.common.netty.channel.socket.nio.SocketSendBufferPool$EmptySendBuffer",
      "org.elasticsearch.common.netty.channel.socket.nio.SocketSendBufferPool",
      "org.elasticsearch.common.netty.channel.socket.nio.SocketSendBufferPool$Preallocation",
      "org.elasticsearch.common.netty.channel.socket.nio.SocketReceiveBufferAllocator",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.env.FailedToResolveConfigException",
      "org.bson.EmptyBSONCallback",
      "org.bson.LazyBSONCallback",
      "org.bson.LazyBSONObject",
      "org.bson.LazyBSONList",
      "org.bson.LazyDBList",
      "com.mongodb.DBAddress",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.bson.io.BSONByteBuffer",
      "org.elasticsearch.river.mongodb.MongoDBRiver$QueueEntry",
      "org.bson.util.ClassMap",
      "org.bson.util.AbstractCopyOnWriteMap",
      "org.bson.util.CopyOnWriteMap",
      "org.bson.util.CopyOnWriteMap$Builder",
      "org.bson.util.AbstractCopyOnWriteMap$View$Type",
      "org.bson.util.CopyOnWriteMap$Hash",
      "org.bson.util.Assertions",
      "org.bson.util.AbstractCopyOnWriteMap$View",
      "org.bson.util.AbstractCopyOnWriteMap$Immutable",
      "org.bson.util.ClassMap$ComputeFunction",
      "org.bson.util.ComputingMap",
      "org.bson.BSON$1",
      "org.bson.BSON$2",
      "org.bson.BSON",
      "org.bson.types.ObjectId",
      "com.mongodb.Bytes",
      "com.mongodb.Mongo",
      "com.mongodb.MongoClient",
      "org.bson.types.BSONTimestamp",
      "org.elasticsearch.river.mongodb.Timestamp",
      "org.elasticsearch.river.mongodb.Timestamp$BSON",
      "org.elasticsearch.river.RiverSettings",
      "com.mongodb.MongoCredentialsStore",
      "com.mongodb.MongoAuthority",
      "com.mongodb.MongoAuthority$Type",
      "org.bson.types.Binary",
      "org.elasticsearch.river.mongodb.Timestamp$GTID",
      "org.elasticsearch.ElasticsearchNullPointerException",
      "com.mongodb.MongoOptions",
      "org.elasticsearch.common.jackson.core.util.BufferRecycler",
      "org.elasticsearch.common.jackson.core.util.BufferRecycler$ByteBufferType",
      "org.elasticsearch.common.jackson.core.util.BufferRecycler$CharBufferType",
      "org.elasticsearch.common.jackson.core.io.IOContext",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData$Factory",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.cluster.metadata.SnapshotMetaData$Factory",
      "org.elasticsearch.cluster.metadata.SnapshotMetaData",
      "org.elasticsearch.cluster.metadata.RestoreMetaData$Factory",
      "org.elasticsearch.cluster.metadata.RestoreMetaData",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.cluster.block.ClusterBlockLevel",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "org.elasticsearch.common.hppc.ObjectObjectOpenHashMap",
      "org.elasticsearch.common.hppc.HashContainerUtils$1",
      "org.elasticsearch.common.hppc.hash.MurmurHash3",
      "org.elasticsearch.common.hppc.HashContainerUtils",
      "org.elasticsearch.common.hppc.BitUtil",
      "org.elasticsearch.common.hppc.Internals",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "org.elasticsearch.common.hppc.AbstractObjectCollection",
      "org.elasticsearch.common.hppc.ObjectObjectOpenHashMap$ValuesContainer",
      "org.elasticsearch.common.hppc.AbstractIterator",
      "org.elasticsearch.common.hppc.ObjectObjectOpenHashMap$ValuesIterator",
      "org.elasticsearch.common.hppc.cursors.ObjectCursor",
      "org.elasticsearch.common.hppc.ObjectObjectOpenHashMap$KeysContainer",
      "org.elasticsearch.common.hppc.ObjectObjectOpenHashMap$KeysIterator",
      "org.elasticsearch.common.hppc.ObjectObjectOpenHashMap$EntryIterator",
      "org.elasticsearch.common.hppc.cursors.ObjectObjectCursor",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.common.collect.ImmutableList$ReverseImmutableList",
      "org.elasticsearch.common.io.stream.BytesStreamInput",
      "com.mongodb.util.JSON",
      "com.mongodb.util.JSONParser",
      "org.bson.BasicBSONCallback",
      "com.mongodb.util.JSONCallback",
      "org.bson.types.BasicBSONList",
      "com.mongodb.BasicDBList",
      "com.mongodb.util.JSONParseException",
      "org.elasticsearch.common.jackson.core.JsonParser",
      "org.elasticsearch.common.jackson.core.base.ParserMinimalBase",
      "org.elasticsearch.common.jackson.core.base.ParserBase",
      "org.elasticsearch.common.jackson.core.io.CharTypes",
      "org.elasticsearch.common.jackson.core.json.ReaderBasedJsonParser",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk$Builder",
      "org.elasticsearch.river.mongodb.MongoDBRiverDefinition$Bulk",
      "org.elasticsearch.common.collect.ImmutableSortedMapFauxverideShim",
      "org.elasticsearch.common.collect.Ordering",
      "org.elasticsearch.common.collect.NaturalOrdering",
      "org.elasticsearch.common.collect.EmptyImmutableSortedMap",
      "org.elasticsearch.common.collect.ImmutableSortedSetFauxverideShim",
      "org.elasticsearch.common.collect.EmptyImmutableSortedSet",
      "org.elasticsearch.common.collect.ImmutableSortedSet",
      "org.elasticsearch.common.collect.ImmutableSortedMap",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.common.cache.LocalCache$AccessQueue",
      "org.elasticsearch.common.cache.LocalCache$AccessQueue$1",
      "org.elasticsearch.script.CompiledScript",
      "org.elasticsearch.script.ScriptService$DocScoreNativeScriptFactory",
      "org.elasticsearch.watcher.AbstractResourceWatcher",
      "org.elasticsearch.watcher.FileWatcher",
      "org.elasticsearch.watcher.FileWatcher$FileObserver",
      "org.elasticsearch.watcher.FileChangesListener",
      "org.elasticsearch.script.ScriptService$ScriptChangesListener",
      "org.elasticsearch.watcher.ResourceWatcherService",
      "org.elasticsearch.common.settings.loader.SettingsLoaderFactory",
      "org.elasticsearch.common.settings.loader.XContentSettingsLoader",
      "org.elasticsearch.common.settings.loader.JsonSettingsLoader",
      "org.elasticsearch.common.io.Streams",
      "org.elasticsearch.common.xcontent.XContentFactory",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$1",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$2",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser",
      "org.elasticsearch.common.io.CharSequenceReader",
      "org.elasticsearch.common.io.FastStringReader",
      "org.elasticsearch.common.jackson.core.util.TextBuffer",
      "org.elasticsearch.common.jackson.core.JsonStreamContext",
      "org.elasticsearch.common.jackson.core.json.JsonReadContext",
      "org.elasticsearch.common.jackson.core.JsonToken",
      "org.elasticsearch.cluster.routing.RoutingTable$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Builder",
      "org.elasticsearch.cluster.node.DiscoveryNodes",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "org.elasticsearch.cluster.ClusterState",
      "org.elasticsearch.cluster.routing.RoutingNodes",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards",
      "org.elasticsearch.common.hppc.ObjectOpenHashSet",
      "org.elasticsearch.common.collect.HppcMaps",
      "org.elasticsearch.common.hppc.ObjectOpenHashSet$EntryIterator",
      "org.elasticsearch.common.collect.HppcMaps$2",
      "org.elasticsearch.common.collect.HppcMaps$3",
      "org.elasticsearch.common.collect.Maps$EntryFunction",
      "org.elasticsearch.common.collect.ByFunctionOrdering",
      "org.elasticsearch.common.unit.ByteSizeUnit"
    );
  }
}
