/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 07 00:18:32 GMT 2021
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.ServerAddress;
import java.net.InetAddress;
import java.util.List;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.PriorityBlockingQueue;
import org.elasticsearch.client.Client;
import org.elasticsearch.common.collect.ImmutableList;
import org.elasticsearch.river.mongodb.MongoDBRiver;
import org.elasticsearch.river.mongodb.MongoDBRiverDefinition;
import org.elasticsearch.river.mongodb.SharedContext;
import org.elasticsearch.river.mongodb.Slurper;
import org.elasticsearch.river.mongodb.Status;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Slurper_ESTest extends Slurper_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of();
      assertEquals(0, immutableList0.size());
      assertNotNull(immutableList0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertNotNull(mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertNull(mongoDBRiverDefinition_Builder1.getriverName());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertNull(mongoDBRiverDefinition_Builder1.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertEquals(0, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = new MongoDBRiverDefinition(mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertNull(mongoDBRiverDefinition_Builder1.getriverName());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertNull(mongoDBRiverDefinition_Builder1.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertFalse(mongoDBRiverDefinition0.getimportAllCollections());
      assertEquals("flush_interval", mongoDBRiverDefinition0.getFLUSH_INTERVAL_FIELD());
      assertEquals("actions", mongoDBRiverDefinition0.getACTIONS_FIELD());
      assertEquals("drop_collection", mongoDBRiverDefinition0.getDROP_COLLECTION_FIELD());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("admin", mongoDBRiverDefinition0.getADMIN_DB_FIELD());
      assertEquals("bulk_size", mongoDBRiverDefinition0.getBULK_SIZE_FIELD());
      assertEquals(27017, mongoDBRiverDefinition0.getDEFAULT_DB_PORT());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getCONNECT_TIMEOUT());
      assertFalse(mongoDBRiverDefinition0.getstoreStatistics());
      assertEquals(60000, mongoDBRiverDefinition0.getDEFAULT_SOCKET_TIMEOUT());
      assertEquals("local", mongoDBRiverDefinition0.getLOCAL_DB_FIELD());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(30000, mongoDBRiverDefinition0.getDEFAULT_CONNECT_TIMEOUT());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("password", mongoDBRiverDefinition0.getPASSWORD_FIELD());
      assertEquals("include_collection", mongoDBRiverDefinition0.getINCLUDE_COLLECTION_FIELD());
      assertEquals("script_type", mongoDBRiverDefinition0.getSCRIPT_TYPE_FIELD());
      assertFalse(mongoDBRiverDefinition0.getmongoSSLVerifyCertificate());
      assertEquals("script", mongoDBRiverDefinition0.getSCRIPT_FIELD());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("is_mongos", mongoDBRiverDefinition0.getIS_MONGOS_FIELD());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getBULK_TIMEOUT_FIELD());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("skip_initial_import", mongoDBRiverDefinition0.getSKIP_INITIAL_IMPORT_FIELD());
      assertEquals("gridfs", mongoDBRiverDefinition0.getGRIDFS_FIELD());
      assertEquals("host", mongoDBRiverDefinition0.getHOST_FIELD());
      assertEquals("advanced_transformation", mongoDBRiverDefinition0.getADVANCED_TRANSFORMATION_FIELD());
      assertEquals("user", mongoDBRiverDefinition0.getUSER_FIELD());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("index", mongoDBRiverDefinition0.getINDEX_OBJECT());
      assertEquals("secondary_read_preference", mongoDBRiverDefinition0.getSECONDARY_READ_PREFERENCE_FIELD());
      assertEquals("include_fields", mongoDBRiverDefinition0.getINCLUDE_FIELDS_FIELD());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("throttle_size", mongoDBRiverDefinition0.getTHROTTLE_SIZE_FIELD());
      assertEquals("type", mongoDBRiverDefinition0.getTYPE_FIELD());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("concurrent_bulk_requests", mongoDBRiverDefinition0.getCONCURRENT_BULK_REQUESTS_FIELD());
      assertFalse(mongoDBRiverDefinition0.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition0.getadvancedTransformation());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getSOCKET_TIMEOUT());
      assertEquals("disable_index_refresh", mongoDBRiverDefinition0.getDISABLE_INDEX_REFRESH_FIELD());
      assertFalse(mongoDBRiverDefinition0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("script_type", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD());
      assertEquals("concurrent_requests", mongoDBRiverDefinition0.getCONCURRENT_REQUESTS_FIELD());
      assertEquals("exclude_fields", mongoDBRiverDefinition0.getEXCLUDE_FIELDS_FIELD());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1, mongoDBRiverDefinition0.getDEFAULT_CONCURRENT_REQUESTS());
      assertEquals("localhost", mongoDBRiverDefinition0.getDEFAULT_DB_HOST());
      assertEquals("parent_types", mongoDBRiverDefinition0.getPARENT_TYPES_FIELD());
      assertEquals("import_all_collections", mongoDBRiverDefinition0.getIMPORT_ALL_COLLECTIONS_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("collection", mongoDBRiverDefinition0.getCOLLECTION_FIELD());
      assertEquals("bulk", mongoDBRiverDefinition0.getBULK_FIELD());
      assertEquals(1000, mongoDBRiverDefinition0.getDEFAULT_BULK_ACTIONS());
      assertEquals("script", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_SCRIPT_FIELD());
      assertNull(mongoDBRiverDefinition0.getisMongos());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("credentials", mongoDBRiverDefinition0.getCREDENTIALS_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("db", mongoDBRiverDefinition0.getDB_FIELD());
      assertFalse(mongoDBRiverDefinition0.getdropCollection());
      assertEquals("store_statistics", mongoDBRiverDefinition0.getSTORE_STATISTICS_FIELD());
      assertEquals("size", mongoDBRiverDefinition0.getSIZE_FIELD());
      assertEquals("options", mongoDBRiverDefinition0.getOPTIONS_FIELD());
      assertEquals("port", mongoDBRiverDefinition0.getPORT_FIELD());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("name", mongoDBRiverDefinition0.getNAME_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("filter", mongoDBRiverDefinition0.getFILTER_FIELD());
      assertEquals("ssl_verify_certificate", mongoDBRiverDefinition0.getSSL_VERIFY_CERT_FIELD());
      assertFalse(mongoDBRiverDefinition0.getmongoSecondaryReadPreference());
      assertEquals("initial_timestamp", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_FIELD());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.getdisableIndexRefresh());
      assertEquals("ssl", mongoDBRiverDefinition0.getSSL_CONNECTION_FIELD());
      assertEquals("servers", mongoDBRiverDefinition0.getSERVERS_FIELD());
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertEquals(0, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition0.dropCollection);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(mongoDBRiverDefinition0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition0.throttleSize);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertFalse(mongoDBRiverDefinition0.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition0.connectTimeout);
      assertEquals(0, mongoDBRiverDefinition0.socketTimeout);
      assertFalse(mongoDBRiverDefinition0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition0.skipInitialImport);
      assertFalse(mongoDBRiverDefinition0.importAllCollections);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertFalse(mongoDBRiverDefinition0.disableIndexRefresh);
      
      LinkedTransferQueue<MongoDBRiver.QueueEntry> linkedTransferQueue0 = new LinkedTransferQueue<MongoDBRiver.QueueEntry>();
      assertNotNull(linkedTransferQueue0);
      
      Status status0 = Status.STOPPED;
      SharedContext sharedContext0 = new SharedContext(linkedTransferQueue0, status0);
      assertEquals(Status.STOPPED, sharedContext0.getStatus());
      assertNotNull(sharedContext0);
      
      Client client0 = null;
      Slurper slurper0 = null;
      try {
        slurper0 = new Slurper(immutableList0, mongoDBRiverDefinition0, sharedContext0, client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mongodb.MongoOptions", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      assertFalse(inetAddress0.isMCGlobal());
      assertFalse(inetAddress0.isMulticastAddress());
      assertEquals("192.168.1.42", inetAddress0.getHostAddress());
      assertFalse(inetAddress0.isMCSiteLocal());
      assertEquals("/192.168.1.42", inetAddress0.toString());
      assertFalse(inetAddress0.isLinkLocalAddress());
      assertFalse(inetAddress0.isMCOrgLocal());
      assertFalse(inetAddress0.isMCNodeLocal());
      assertFalse(inetAddress0.isLoopbackAddress());
      assertTrue(inetAddress0.isSiteLocalAddress());
      assertFalse(inetAddress0.isAnyLocalAddress());
      assertFalse(inetAddress0.isMCLinkLocal());
      assertNotNull(inetAddress0);
      
      ServerAddress serverAddress0 = new ServerAddress(inetAddress0);
      assertFalse(inetAddress0.isMCGlobal());
      assertFalse(inetAddress0.isMulticastAddress());
      assertEquals("192.168.1.42", inetAddress0.getHostAddress());
      assertFalse(inetAddress0.isMCSiteLocal());
      assertFalse(inetAddress0.isLinkLocalAddress());
      assertFalse(inetAddress0.isMCOrgLocal());
      assertFalse(inetAddress0.isMCNodeLocal());
      assertEquals("192.168.1.42/192.168.1.42", inetAddress0.toString());
      assertFalse(inetAddress0.isLoopbackAddress());
      assertTrue(inetAddress0.isSiteLocalAddress());
      assertFalse(inetAddress0.isAnyLocalAddress());
      assertFalse(inetAddress0.isMCLinkLocal());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertNotNull(serverAddress0);
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0, serverAddress0);
      assertTrue(immutableList0.contains(serverAddress0));
      assertFalse(inetAddress0.isMCGlobal());
      assertFalse(inetAddress0.isMulticastAddress());
      assertEquals("192.168.1.42", inetAddress0.getHostAddress());
      assertFalse(inetAddress0.isMCSiteLocal());
      assertFalse(inetAddress0.isLinkLocalAddress());
      assertFalse(inetAddress0.isMCOrgLocal());
      assertFalse(inetAddress0.isMCNodeLocal());
      assertEquals("192.168.1.42/192.168.1.42", inetAddress0.toString());
      assertFalse(inetAddress0.isLoopbackAddress());
      assertTrue(inetAddress0.isSiteLocalAddress());
      assertFalse(inetAddress0.isAnyLocalAddress());
      assertFalse(inetAddress0.isMCLinkLocal());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(7, immutableList0.size());
      assertNotNull(immutableList0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertNotNull(mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      
      String string0 = "%)L3o9\"";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.riverName(string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder0.getriverName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder1.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder1.getriverName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertEquals(0, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      
      int int0 = 68;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.throttleSize(int0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder0.getriverName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertEquals(68, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertEquals(68, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder1.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder1.getriverName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertNull(mongoDBRiverDefinition_Builder2.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder2.getscriptType());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoLocalPassword());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder2.getriverName());
      assertFalse(mongoDBRiverDefinition_Builder2.getadvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Builder2.getskipInitialImport());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder2.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder2.getstatisticsIndexName());
      assertEquals(68, mongoDBRiverDefinition_Builder2.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder2.getriverIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder2.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder2.getmongoCollection());
      assertNull(mongoDBRiverDefinition_Builder2.getindexName());
      assertNull(mongoDBRiverDefinition_Builder2.getscript());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoLocalUser());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoAdminPassword());
      assertFalse(mongoDBRiverDefinition_Builder2.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder2.gettypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder2.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder2.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition_Builder2.getdropCollection());
      assertNull(mongoDBRiverDefinition_Builder2.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder2.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder2.getsocketTimeout());
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertEquals(68, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertEquals(68, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder2.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoSecondaryReadPreference);
      assertEquals(68, mongoDBRiverDefinition_Builder2.throttleSize);
      assertEquals(0, mongoDBRiverDefinition_Builder2.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder2.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder2.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder2.storeStatistics);
      assertFalse(mongoDBRiverDefinition_Builder2.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition_Builder2.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder2.disableIndexRefresh);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder0.getriverName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertEquals(68, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertEquals(68, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder1.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder1.getriverName());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertNull(mongoDBRiverDefinition_Builder2.getisMongos());
      assertNull(mongoDBRiverDefinition_Builder2.getscriptType());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoLocalPassword());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition_Builder2.getriverName());
      assertFalse(mongoDBRiverDefinition_Builder2.getadvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Builder2.getskipInitialImport());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder2.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder2.getstatisticsIndexName());
      assertEquals(68, mongoDBRiverDefinition_Builder2.getthrottleSize());
      assertNull(mongoDBRiverDefinition_Builder2.getriverIndexName());
      assertEquals("", mongoDBRiverDefinition_Builder2.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition_Builder2.getmongoCollection());
      assertNull(mongoDBRiverDefinition_Builder2.getindexName());
      assertNull(mongoDBRiverDefinition_Builder2.getscript());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoLocalUser());
      assertEquals("", mongoDBRiverDefinition_Builder2.getmongoAdminPassword());
      assertFalse(mongoDBRiverDefinition_Builder2.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder2.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder2.gettypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder2.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder2.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition_Builder2.getdropCollection());
      assertNull(mongoDBRiverDefinition_Builder2.getstatisticsTypeName());
      assertFalse(mongoDBRiverDefinition_Builder2.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder2.getsocketTimeout());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getSOCKET_TIMEOUT());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("%)L3o9\"", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("concurrent_requests", mongoDBRiverDefinition0.getCONCURRENT_REQUESTS_FIELD());
      assertFalse(mongoDBRiverDefinition0.getmongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.getmongoGridFS());
      assertFalse(mongoDBRiverDefinition0.getadvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("script", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_SCRIPT_FIELD());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("parent_types", mongoDBRiverDefinition0.getPARENT_TYPES_FIELD());
      assertEquals("exclude_fields", mongoDBRiverDefinition0.getEXCLUDE_FIELDS_FIELD());
      assertEquals("import_all_collections", mongoDBRiverDefinition0.getIMPORT_ALL_COLLECTIONS_FIELD());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getisMongos());
      assertEquals(1000, mongoDBRiverDefinition0.getDEFAULT_BULK_ACTIONS());
      assertEquals("disable_index_refresh", mongoDBRiverDefinition0.getDISABLE_INDEX_REFRESH_FIELD());
      assertFalse(mongoDBRiverDefinition0.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("filter", mongoDBRiverDefinition0.getFILTER_FIELD());
      assertEquals(1, mongoDBRiverDefinition0.getDEFAULT_CONCURRENT_REQUESTS());
      assertEquals("localhost", mongoDBRiverDefinition0.getDEFAULT_DB_HOST());
      assertEquals("name", mongoDBRiverDefinition0.getNAME_FIELD());
      assertEquals("ssl_verify_certificate", mongoDBRiverDefinition0.getSSL_VERIFY_CERT_FIELD());
      assertEquals("local", mongoDBRiverDefinition0.getLOCAL_DB_FIELD());
      assertFalse(mongoDBRiverDefinition0.getdropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("port", mongoDBRiverDefinition0.getPORT_FIELD());
      assertEquals("admin", mongoDBRiverDefinition0.getADMIN_DB_FIELD());
      assertFalse(mongoDBRiverDefinition0.getskipInitialImport());
      assertEquals("size", mongoDBRiverDefinition0.getSIZE_FIELD());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(68, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("options", mongoDBRiverDefinition0.getOPTIONS_FIELD());
      assertEquals("flush_interval", mongoDBRiverDefinition0.getFLUSH_INTERVAL_FIELD());
      assertEquals("ssl", mongoDBRiverDefinition0.getSSL_CONNECTION_FIELD());
      assertFalse(mongoDBRiverDefinition0.getdisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.getimportAllCollections());
      assertEquals("db", mongoDBRiverDefinition0.getDB_FIELD());
      assertEquals("credentials", mongoDBRiverDefinition0.getCREDENTIALS_FIELD());
      assertEquals("initial_timestamp", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_FIELD());
      assertEquals("collection", mongoDBRiverDefinition0.getCOLLECTION_FIELD());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.getmongoSecondaryReadPreference());
      assertEquals("servers", mongoDBRiverDefinition0.getSERVERS_FIELD());
      assertFalse(mongoDBRiverDefinition0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(60000, mongoDBRiverDefinition0.getDEFAULT_SOCKET_TIMEOUT());
      assertEquals("secondary_read_preference", mongoDBRiverDefinition0.getSECONDARY_READ_PREFERENCE_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("drop_collection", mongoDBRiverDefinition0.getDROP_COLLECTION_FIELD());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getBULK_TIMEOUT_FIELD());
      assertEquals("gridfs", mongoDBRiverDefinition0.getGRIDFS_FIELD());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("bulk_size", mongoDBRiverDefinition0.getBULK_SIZE_FIELD());
      assertEquals("user", mongoDBRiverDefinition0.getUSER_FIELD());
      assertEquals("actions", mongoDBRiverDefinition0.getACTIONS_FIELD());
      assertEquals("bulk", mongoDBRiverDefinition0.getBULK_FIELD());
      assertEquals("store_statistics", mongoDBRiverDefinition0.getSTORE_STATISTICS_FIELD());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("password", mongoDBRiverDefinition0.getPASSWORD_FIELD());
      assertEquals("script_type", mongoDBRiverDefinition0.getSCRIPT_TYPE_FIELD());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getCONNECT_TIMEOUT());
      assertEquals("include_collection", mongoDBRiverDefinition0.getINCLUDE_COLLECTION_FIELD());
      assertEquals(30000, mongoDBRiverDefinition0.getDEFAULT_CONNECT_TIMEOUT());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("script", mongoDBRiverDefinition0.getSCRIPT_FIELD());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("advanced_transformation", mongoDBRiverDefinition0.getADVANCED_TRANSFORMATION_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("include_fields", mongoDBRiverDefinition0.getINCLUDE_FIELDS_FIELD());
      assertEquals(27017, mongoDBRiverDefinition0.getDEFAULT_DB_PORT());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("script_type", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("skip_initial_import", mongoDBRiverDefinition0.getSKIP_INITIAL_IMPORT_FIELD());
      assertEquals("host", mongoDBRiverDefinition0.getHOST_FIELD());
      assertEquals("concurrent_bulk_requests", mongoDBRiverDefinition0.getCONCURRENT_BULK_REQUESTS_FIELD());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("is_mongos", mongoDBRiverDefinition0.getIS_MONGOS_FIELD());
      assertEquals("throttle_size", mongoDBRiverDefinition0.getTHROTTLE_SIZE_FIELD());
      assertEquals("type", mongoDBRiverDefinition0.getTYPE_FIELD());
      assertEquals("index", mongoDBRiverDefinition0.getINDEX_OBJECT());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertEquals(68, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertEquals(68, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder2.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoSecondaryReadPreference);
      assertEquals(68, mongoDBRiverDefinition_Builder2.throttleSize);
      assertEquals(0, mongoDBRiverDefinition_Builder2.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder2.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder2.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder2.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder2.storeStatistics);
      assertFalse(mongoDBRiverDefinition_Builder2.advancedTransformation);
      assertEquals(0, mongoDBRiverDefinition_Builder2.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder2.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition0.mongoSecondaryReadPreference);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertFalse(mongoDBRiverDefinition0.mongoSSLVerifyCertificate);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(mongoDBRiverDefinition0.mongoGridFS);
      assertEquals(68, mongoDBRiverDefinition0.throttleSize);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(0, mongoDBRiverDefinition0.connectTimeout);
      assertFalse(mongoDBRiverDefinition0.storeStatistics);
      assertFalse(mongoDBRiverDefinition0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition0.dropCollection);
      assertFalse(mongoDBRiverDefinition0.importAllCollections);
      assertFalse(mongoDBRiverDefinition0.skipInitialImport);
      assertEquals(0, mongoDBRiverDefinition0.socketTimeout);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertFalse(mongoDBRiverDefinition0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition0.disableIndexRefresh);
      
      PriorityBlockingQueue<MongoDBRiver.QueueEntry> priorityBlockingQueue0 = new PriorityBlockingQueue<MongoDBRiver.QueueEntry>();
      assertNotNull(priorityBlockingQueue0);
      
      Status status0 = Status.INITIAL_IMPORT_FAILED;
      SharedContext sharedContext0 = new SharedContext(priorityBlockingQueue0, status0);
      assertEquals(Status.INITIAL_IMPORT_FAILED, sharedContext0.getStatus());
      assertNotNull(sharedContext0);
      
      sharedContext0.setStream(priorityBlockingQueue0);
      assertEquals(Status.INITIAL_IMPORT_FAILED, sharedContext0.getStatus());
      
      Client client0 = null;
      Slurper slurper0 = null;
      try {
        slurper0 = new Slurper(immutableList0, mongoDBRiverDefinition0, sharedContext0, client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mongodb.MongoOptions", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      List<ServerAddress> list0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertNull(mongoDBRiverDefinition_Builder0.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertNotNull(mongoDBRiverDefinition_Builder0);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder1.getriverName());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertEquals(0, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = new MongoDBRiverDefinition(mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoUseSSL());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoDb());
      assertFalse(mongoDBRiverDefinition_Builder0.getadvancedTransformation());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition_Builder0.getscriptType());
      assertNull(mongoDBRiverDefinition_Builder0.getriverIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getconnectTimeout());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoGridFS());
      assertNull(mongoDBRiverDefinition_Builder0.getriverName());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition_Builder0.getincludeCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getstoreStatistics());
      assertFalse(mongoDBRiverDefinition_Builder0.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getsocketTimeout());
      assertNull(mongoDBRiverDefinition_Builder0.getisMongos());
      assertFalse(mongoDBRiverDefinition_Builder0.getimportAllCollections());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder0.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoAdminPassword());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder0.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder0.getindexName());
      assertNull(mongoDBRiverDefinition_Builder0.getscript());
      assertNull(mongoDBRiverDefinition_Builder0.getstatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition_Builder0.getthrottleSize());
      assertFalse(mongoDBRiverDefinition_Builder0.getmongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition_Builder0.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder0.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder0.getskipInitialImport());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoGridFS());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminUser());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoUseSSL());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalPassword());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoDb());
      assertNull(mongoDBRiverDefinition_Builder1.getisMongos());
      assertFalse(mongoDBRiverDefinition_Builder1.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition_Builder1.getskipInitialImport());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsIndexName());
      assertNull(mongoDBRiverDefinition_Builder1.getstatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getconnectTimeout());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getthrottleSize());
      assertFalse(mongoDBRiverDefinition_Builder1.getdisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition_Builder1.getsocketTimeout());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition_Builder1.getriverName());
      assertNull(mongoDBRiverDefinition_Builder1.getriverIndexName());
      assertFalse(mongoDBRiverDefinition_Builder1.getdropCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoAdminPassword());
      assertNull(mongoDBRiverDefinition_Builder1.gettypeName());
      assertNull(mongoDBRiverDefinition_Builder1.getscript());
      assertFalse(mongoDBRiverDefinition_Builder1.getmongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition_Builder1.getmongoLocalUser());
      assertNull(mongoDBRiverDefinition_Builder1.getmongoCollection());
      assertFalse(mongoDBRiverDefinition_Builder1.getstoreStatistics());
      assertEquals("", mongoDBRiverDefinition_Builder1.getincludeCollection());
      assertEquals("", mongoDBRiverDefinition_Builder1.getscriptType());
      assertFalse(mongoDBRiverDefinition_Builder1.getadvancedTransformation());
      assertNull(mongoDBRiverDefinition_Builder1.getindexName());
      assertFalse(mongoDBRiverDefinition0.getmongoUseSSL());
      assertEquals("parent_types", mongoDBRiverDefinition0.getPARENT_TYPES_FIELD());
      assertEquals("exclude_fields", mongoDBRiverDefinition0.getEXCLUDE_FIELDS_FIELD());
      assertEquals("import_all_collections", mongoDBRiverDefinition0.getIMPORT_ALL_COLLECTIONS_FIELD());
      assertFalse(mongoDBRiverDefinition0.getmongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("concurrent_requests", mongoDBRiverDefinition0.getCONCURRENT_REQUESTS_FIELD());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("ssl", mongoDBRiverDefinition0.getSSL_CONNECTION_FIELD());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("socket_timeout", mongoDBRiverDefinition0.getSOCKET_TIMEOUT());
      assertEquals("advanced_transformation", mongoDBRiverDefinition0.getADVANCED_TRANSFORMATION_FIELD());
      assertEquals("concurrent_bulk_requests", mongoDBRiverDefinition0.getCONCURRENT_BULK_REQUESTS_FIELD());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.getadvancedTransformation());
      assertEquals("options", mongoDBRiverDefinition0.getOPTIONS_FIELD());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("localhost", mongoDBRiverDefinition0.getDEFAULT_DB_HOST());
      assertEquals("script_type", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.getmongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(1000, mongoDBRiverDefinition0.getDEFAULT_BULK_ACTIONS());
      assertEquals(27017, mongoDBRiverDefinition0.getDEFAULT_DB_PORT());
      assertEquals("script", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_SCRIPT_FIELD());
      assertEquals("index", mongoDBRiverDefinition0.getINDEX_OBJECT());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getBULK_TIMEOUT_FIELD());
      assertEquals("throttle_size", mongoDBRiverDefinition0.getTHROTTLE_SIZE_FIELD());
      assertNull(mongoDBRiverDefinition0.isMongos());
      assertEquals("gridfs", mongoDBRiverDefinition0.getGRIDFS_FIELD());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("is_mongos", mongoDBRiverDefinition0.getIS_MONGOS_FIELD());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("include_fields", mongoDBRiverDefinition0.getINCLUDE_FIELDS_FIELD());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("bulk_size", mongoDBRiverDefinition0.getBULK_SIZE_FIELD());
      assertEquals("user", mongoDBRiverDefinition0.getUSER_FIELD());
      assertEquals("host", mongoDBRiverDefinition0.getHOST_FIELD());
      assertEquals("drop_collection", mongoDBRiverDefinition0.getDROP_COLLECTION_FIELD());
      assertEquals("password", mongoDBRiverDefinition0.getPASSWORD_FIELD());
      assertEquals("include_collection", mongoDBRiverDefinition0.getINCLUDE_COLLECTION_FIELD());
      assertFalse(mongoDBRiverDefinition0.getimportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("flush_interval", mongoDBRiverDefinition0.getFLUSH_INTERVAL_FIELD());
      assertFalse(mongoDBRiverDefinition0.getstoreStatistics());
      assertEquals("actions", mongoDBRiverDefinition0.getACTIONS_FIELD());
      assertEquals(60000, mongoDBRiverDefinition0.getDEFAULT_SOCKET_TIMEOUT());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("secondary_read_preference", mongoDBRiverDefinition0.getSECONDARY_READ_PREFERENCE_FIELD());
      assertEquals(30000, mongoDBRiverDefinition0.getDEFAULT_CONNECT_TIMEOUT());
      assertEquals("servers", mongoDBRiverDefinition0.getSERVERS_FIELD());
      assertEquals("script", mongoDBRiverDefinition0.getSCRIPT_FIELD());
      assertEquals("type", mongoDBRiverDefinition0.getTYPE_FIELD());
      assertEquals("script_type", mongoDBRiverDefinition0.getSCRIPT_TYPE_FIELD());
      assertEquals("connect_timeout", mongoDBRiverDefinition0.getCONNECT_TIMEOUT());
      assertEquals("admin", mongoDBRiverDefinition0.getADMIN_DB_FIELD());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("port", mongoDBRiverDefinition0.getPORT_FIELD());
      assertFalse(mongoDBRiverDefinition0.getdropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("initial_timestamp", mongoDBRiverDefinition0.getINITIAL_TIMESTAMP_FIELD());
      assertEquals("size", mongoDBRiverDefinition0.getSIZE_FIELD());
      assertEquals("skip_initial_import", mongoDBRiverDefinition0.getSKIP_INITIAL_IMPORT_FIELD());
      assertEquals("local", mongoDBRiverDefinition0.getLOCAL_DB_FIELD());
      assertEquals("collection", mongoDBRiverDefinition0.getCOLLECTION_FIELD());
      assertEquals("name", mongoDBRiverDefinition0.getNAME_FIELD());
      assertNull(mongoDBRiverDefinition0.getisMongos());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("disable_index_refresh", mongoDBRiverDefinition0.getDISABLE_INDEX_REFRESH_FIELD());
      assertEquals(1, mongoDBRiverDefinition0.getDEFAULT_CONCURRENT_REQUESTS());
      assertFalse(mongoDBRiverDefinition0.getmongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.getskipInitialImport());
      assertEquals("db", mongoDBRiverDefinition0.getDB_FIELD());
      assertFalse(mongoDBRiverDefinition0.getdisableIndexRefresh());
      assertEquals("store_statistics", mongoDBRiverDefinition0.getSTORE_STATISTICS_FIELD());
      assertEquals("ssl_verify_certificate", mongoDBRiverDefinition0.getSSL_VERIFY_CERT_FIELD());
      assertEquals("credentials", mongoDBRiverDefinition0.getCREDENTIALS_FIELD());
      assertEquals("filter", mongoDBRiverDefinition0.getFILTER_FIELD());
      assertEquals("bulk", mongoDBRiverDefinition0.getBULK_FIELD());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNotNull(mongoDBRiverDefinition0);
      assertEquals(0, mongoDBRiverDefinition_Builder0.socketTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.dropCollection);
      assertEquals(0, mongoDBRiverDefinition_Builder0.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate);
      assertFalse(mongoDBRiverDefinition_Builder0.skipInitialImport);
      assertEquals(0, mongoDBRiverDefinition_Builder0.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder0.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder0.importAllCollections);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder0.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder0.storeStatistics);
      assertEquals(0, mongoDBRiverDefinition_Builder1.socketTimeout);
      assertEquals(0, mongoDBRiverDefinition_Builder1.connectTimeout);
      assertFalse(mongoDBRiverDefinition_Builder1.dropCollection);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition_Builder1.storeStatistics);
      assertFalse(mongoDBRiverDefinition_Builder1.advancedTransformation);
      assertFalse(mongoDBRiverDefinition_Builder1.skipInitialImport);
      assertFalse(mongoDBRiverDefinition_Builder1.importAllCollections);
      assertEquals(0, mongoDBRiverDefinition_Builder1.throttleSize);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoUseSSL);
      assertFalse(mongoDBRiverDefinition_Builder1.disableIndexRefresh);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoGridFS);
      assertFalse(mongoDBRiverDefinition_Builder1.mongoSSLVerifyCertificate);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertFalse(mongoDBRiverDefinition0.dropCollection);
      assertFalse(mongoDBRiverDefinition0.skipInitialImport);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(30000, MongoDBRiverDefinition.DEFAULT_CONNECT_TIMEOUT);
      assertFalse(mongoDBRiverDefinition0.mongoSecondaryReadPreference);
      assertFalse(mongoDBRiverDefinition0.mongoSSLVerifyCertificate);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(0, mongoDBRiverDefinition0.socketTimeout);
      assertFalse(mongoDBRiverDefinition0.advancedTransformation);
      assertFalse(mongoDBRiverDefinition0.disableIndexRefresh);
      assertEquals(60000, MongoDBRiverDefinition.DEFAULT_SOCKET_TIMEOUT);
      assertEquals(0, mongoDBRiverDefinition0.connectTimeout);
      assertFalse(mongoDBRiverDefinition0.importAllCollections);
      assertFalse(mongoDBRiverDefinition0.mongoGridFS);
      assertFalse(mongoDBRiverDefinition0.mongoUseSSL);
      assertEquals(0, mongoDBRiverDefinition0.throttleSize);
      assertFalse(mongoDBRiverDefinition0.storeStatistics);
      
      PriorityBlockingQueue<MongoDBRiver.QueueEntry> priorityBlockingQueue0 = new PriorityBlockingQueue<MongoDBRiver.QueueEntry>();
      assertNotNull(priorityBlockingQueue0);
      
      Status status0 = Status.UNKNOWN;
      SharedContext sharedContext0 = new SharedContext(priorityBlockingQueue0, status0);
      assertEquals(Status.UNKNOWN, sharedContext0.getStatus());
      assertNotNull(sharedContext0);
      
      Client client0 = null;
      Slurper slurper0 = null;
      try {
        slurper0 = new Slurper(list0, mongoDBRiverDefinition0, sharedContext0, client0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // serverAddresses can not be null
         //
         verifyException("com.mongodb.MongoAuthority", e);
      }
  }
}
